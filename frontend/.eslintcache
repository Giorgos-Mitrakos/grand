[{"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\index.js":"1","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\App.js":"2","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\containers\\Layout.js":"4","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\store.js":"5","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\AdminCollectionScreen.js":"6","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\Header.js":"7","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\Contacts.js":"8","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ProductsScreen.js":"9","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\Footer.js":"10","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\ProtectedRoute.js":"11","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\CollectionScreen.js":"12","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\MainScreen.js":"13","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ContactUsScreen.js":"14","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ProductDetailsScreen.js":"15","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\CartScreen.js":"16","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\RegisterScreen.js":"17","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\SigninScreen.js":"18","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\PaymentScreen.js":"19","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\WishListScreen.js":"20","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\PlaceOrderScreen.js":"21","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\AdminOrdersScreen.js":"22","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\MyAccountScreen.js":"23","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ShippingScreen.js":"24","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\AdminProductsScreen.js":"25","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\Gdpr.js":"26","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ProductsByCategoryScreen.js":"27","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\AdminOrderDetails.js":"28","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\CollectionDetailsScreen.js":"29","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\NewsletterDisclaimer.js":"30","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ForgottenPassword.js":"31","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\UpdatePassword.js":"32","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\AdminListsScreen.js":"33","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ReturnPolicy.js":"34","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\CustomerOrdersScreen.js":"35","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\CustomerOrderDetails.js":"36","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ConditionsOfUse.js":"37","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\SendingMethodsScreen.js":"38","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\menu\\MobileMenu.js":"39","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\editorReducer.js":"40","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\menuReducer.js":"41","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\wishListReducer.js":"42","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\modelReducer.js":"43","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\productReducer.js":"44","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\cartReducer.js":"45","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\userReducer.js":"46","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\orderReducer.js":"47","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\collectionReducer.js":"48","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\paymentReducer.js":"49","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\emailReducer.js":"50","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\LoadingSpinner.js":"51","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\collectionActions.js":"52","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\modelActions.js":"53","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\CarouselCard.js":"54","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\product.js":"55","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\menuActions.js":"56","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\menu\\ProfileMenu.js":"57","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\ProductCategories.js":"58","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\CategoriesContainer.js":"59","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\emailActions.js":"60","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\cartActions.js":"61","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\userActions.js":"62","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\MapContainer.js":"63","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\editorConstants.js":"64","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\orderActions.js":"65","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\productActions.js":"66","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\wishListConstants.js":"67","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\modelConstants.js":"68","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\userConstants.js":"69","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\emailConstants.js":"70","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\paymentConstants.js":"71","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\collectionConstants.js":"72","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\cartConstants.js":"73","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\productConstant.js":"74","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\orderConstrains.js":"75","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\menuConstants.js":"76","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\wishListActions.js":"77","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\CheckoutSteps.js":"78","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\paymentActions.js":"79","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\FilterContainer.js":"80","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\menu\\ProductMenu.js":"81","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\routes\\Routes.js":"82","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\data\\data.js":"83","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\MyCarousel.js":"84"},{"size":503,"mtime":499162500000,"results":"85","hashOfConfig":"86"},{"size":1006,"mtime":1618306071416,"results":"87","hashOfConfig":"86"},{"size":5086,"mtime":499162500000,"results":"88","hashOfConfig":"86"},{"size":1189,"mtime":1612370891224,"results":"89","hashOfConfig":"86"},{"size":5414,"mtime":1619519046585,"results":"90","hashOfConfig":"86"},{"size":7550,"mtime":1617225180293,"results":"91","hashOfConfig":"86"},{"size":2814,"mtime":1615454713226,"results":"92","hashOfConfig":"86"},{"size":1354,"mtime":1612798899332,"results":"93","hashOfConfig":"86"},{"size":1582,"mtime":1618407727654,"results":"94","hashOfConfig":"86"},{"size":7051,"mtime":1618491445265,"results":"95","hashOfConfig":"86"},{"size":510,"mtime":1596213769030,"results":"96","hashOfConfig":"86"},{"size":11088,"mtime":1619594871737,"results":"97","hashOfConfig":"86"},{"size":4404,"mtime":1617206938302,"results":"98","hashOfConfig":"86"},{"size":5055,"mtime":1618310078458,"results":"99","hashOfConfig":"86"},{"size":6923,"mtime":1618319500029,"results":"100","hashOfConfig":"86"},{"size":7313,"mtime":1618407715493,"results":"101","hashOfConfig":"86"},{"size":5026,"mtime":1618401947716,"results":"102","hashOfConfig":"86"},{"size":3906,"mtime":1618402856905,"results":"103","hashOfConfig":"86"},{"size":10347,"mtime":1618401684347,"results":"104","hashOfConfig":"86"},{"size":5796,"mtime":1618403177976,"results":"105","hashOfConfig":"86"},{"size":17977,"mtime":1618401684347,"results":"106","hashOfConfig":"86"},{"size":4090,"mtime":1619441276776,"results":"107","hashOfConfig":"86"},{"size":14762,"mtime":1618401136466,"results":"108","hashOfConfig":"86"},{"size":18552,"mtime":1618402772830,"results":"109","hashOfConfig":"86"},{"size":35275,"mtime":1619597729647,"results":"110","hashOfConfig":"86"},{"size":16713,"mtime":1618400960205,"results":"111","hashOfConfig":"86"},{"size":16201,"mtime":1619594979540,"results":"112","hashOfConfig":"86"},{"size":60997,"mtime":1619527398560,"results":"113","hashOfConfig":"86"},{"size":6490,"mtime":1618323281248,"results":"114","hashOfConfig":"86"},{"size":7264,"mtime":1618401238510,"results":"115","hashOfConfig":"86"},{"size":3529,"mtime":1618400815597,"results":"116","hashOfConfig":"86"},{"size":3602,"mtime":1618403001048,"results":"117","hashOfConfig":"86"},{"size":41315,"mtime":1619276444395,"results":"118","hashOfConfig":"86"},{"size":28982,"mtime":1618402101700,"results":"119","hashOfConfig":"86"},{"size":3108,"mtime":1618400742526,"results":"120","hashOfConfig":"86"},{"size":14669,"mtime":1612722372140,"results":"121","hashOfConfig":"86"},{"size":126803,"mtime":1618400561862,"results":"122","hashOfConfig":"86"},{"size":8795,"mtime":1618402186381,"results":"123","hashOfConfig":"86"},{"size":612,"mtime":1612801552510,"results":"124","hashOfConfig":"86"},{"size":1873,"mtime":1594737244900,"results":"125","hashOfConfig":"86"},{"size":609,"mtime":1608236319968,"results":"126","hashOfConfig":"86"},{"size":1781,"mtime":1605220768576,"results":"127","hashOfConfig":"86"},{"size":2391,"mtime":1600943122804,"results":"128","hashOfConfig":"86"},{"size":22154,"mtime":1619536157388,"results":"129","hashOfConfig":"86"},{"size":4074,"mtime":1609277126631,"results":"130","hashOfConfig":"86"},{"size":4867,"mtime":1607510679267,"results":"131","hashOfConfig":"86"},{"size":7386,"mtime":1619519046590,"results":"132","hashOfConfig":"86"},{"size":3434,"mtime":1617118825027,"results":"133","hashOfConfig":"86"},{"size":1184,"mtime":1619456209352,"results":"134","hashOfConfig":"86"},{"size":5434,"mtime":1607769795133,"results":"135","hashOfConfig":"86"},{"size":192,"mtime":1617221556507,"results":"136","hashOfConfig":"86"},{"size":4219,"mtime":1617118505140,"results":"137","hashOfConfig":"86"},{"size":2740,"mtime":1619343346355,"results":"138","hashOfConfig":"86"},{"size":827,"mtime":1618322589709,"results":"139","hashOfConfig":"86"},{"size":2942,"mtime":1614331363643,"results":"140","hashOfConfig":"86"},{"size":321,"mtime":1602345860905,"results":"141","hashOfConfig":"86"},{"size":2019,"mtime":1607520956104,"results":"142","hashOfConfig":"86"},{"size":395,"mtime":1594379158460,"results":"143","hashOfConfig":"86"},{"size":641,"mtime":1614356830523,"results":"144","hashOfConfig":"86"},{"size":5238,"mtime":1607769831810,"results":"145","hashOfConfig":"86"},{"size":9450,"mtime":1609326577953,"results":"146","hashOfConfig":"86"},{"size":6229,"mtime":1610400312732,"results":"147","hashOfConfig":"86"},{"size":715,"mtime":1615910012966,"results":"148","hashOfConfig":"86"},{"size":278,"mtime":1593866551394,"results":"149","hashOfConfig":"86"},{"size":11370,"mtime":1619509233255,"results":"150","hashOfConfig":"86"},{"size":28847,"mtime":1619536157388,"results":"151","hashOfConfig":"86"},{"size":796,"mtime":1599506346589,"results":"152","hashOfConfig":"86"},{"size":927,"mtime":1600939756428,"results":"153","hashOfConfig":"86"},{"size":1880,"mtime":1607425275804,"results":"154","hashOfConfig":"86"},{"size":2351,"mtime":1607458766941,"results":"155","hashOfConfig":"86"},{"size":450,"mtime":1605806217149,"results":"156","hashOfConfig":"86"},{"size":1346,"mtime":1617118505138,"results":"157","hashOfConfig":"86"},{"size":1691,"mtime":1609260719972,"results":"158","hashOfConfig":"86"},{"size":9806,"mtime":1619276428293,"results":"159","hashOfConfig":"86"},{"size":2576,"mtime":1607530224626,"results":"160","hashOfConfig":"86"},{"size":112,"mtime":1602345265463,"results":"161","hashOfConfig":"86"},{"size":3231,"mtime":1605220768578,"results":"162","hashOfConfig":"86"},{"size":509,"mtime":1596666206921,"results":"163","hashOfConfig":"86"},{"size":1108,"mtime":1606944319809,"results":"164","hashOfConfig":"86"},{"size":3897,"mtime":1618320610725,"results":"165","hashOfConfig":"86"},{"size":31143,"mtime":1614330513786,"results":"166","hashOfConfig":"86"},{"size":4905,"mtime":1617213266630,"results":"167","hashOfConfig":"86"},{"size":6474,"mtime":1617106191708,"results":"168","hashOfConfig":"86"},{"size":1901,"mtime":1617115221893,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"zynioq",{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"172"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"172"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"172"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"172"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"172"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"172"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"172"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"172"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"172"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"172"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"172"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"172"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"172"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"172"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"172"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\index.js",[],["354","355"],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\App.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\containers\\Layout.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\store.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\AdminCollectionScreen.js",["356","357"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { changeCollectionVisibility, listCollectionAdmin, saveCollection } from '../action/collectionActions.js';\r\nimport LoadingSpinner from '../components/LoadingSpinner.js';\r\nimport './AdminProductsScreen.css';\r\n\r\nfunction AdminCollectionScreen(props) {\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const collectionAdmin = useSelector(state => state.collectionAdmin);\r\n    const { collection, loading, loadingSave, error, successSave, errorSave, loadingVisibility } = collectionAdmin;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(listCollectionAdmin());\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (successSave) {\r\n            setModalVisible(false);\r\n            dispatch(listCollectionAdmin());\r\n        }\r\n        return () => {\r\n\r\n        }\r\n    }, [successSave]);\r\n\r\n    const openModal = (collection) => {\r\n        setModalVisible(true);\r\n        setId(collection._id);\r\n        setName(collection.name);\r\n        setImage(collection.image);\r\n        setPrice(collection.price);\r\n        setDescription(collection.description);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const coll = new FormData();\r\n        coll.append('collection_id', id);\r\n        coll.append('name', name);\r\n        coll.append('image', image);\r\n        coll.append('price', price);\r\n        coll.append('description', description);\r\n\r\n        dispatch(saveCollection(id, coll));\r\n    }\r\n\r\n    const visibilityChangeHandler = (col) => {\r\n        dispatch(changeCollectionVisibility(col._id, !col.visibility));\r\n    }\r\n\r\n    return <div className=\"content content-margined\">\r\n        <div className=\"product-header\">\r\n            <h3>Συλλογή</h3>\r\n            <button className=\"button admin-button\" onClick={() => openModal({})}>Δημιουργία Προϊόντος Συλλογής</button>\r\n        </div>\r\n        {modalVisible &&\r\n            <div>\r\n                <div className=\"modal\" style={{ display: modalVisible ? \"block\" : \"none\", overflowY: \"scroll\", maxHeight: \"40rem\" }}>\r\n                    <div className=\"form-create-product\">\r\n                        <form onSubmit={submitHandler} encType=\"multipart/form-data\">\r\n                            <ul className=\"form-container\">\r\n                                <li>\r\n                                    <h2>\r\n                                        {id ? \"Ενημέρωση Προϊόντος\" : \"Δημιουργία Προϊόντος\"}\r\n                                    </h2>\r\n                                </li>\r\n                                <li>\r\n                                    {successSave && <div>Loading...</div>}\r\n                                    {errorSave && <div>{error}<br />Η σύνδεση έληξε, παρακαλώ συνδεθείτε ξανά!</div>}\r\n                                </li>\r\n                                <li>\r\n                                    <label htmlFor=\"product-name\">Όνομα:</label>\r\n                                    <input type=\"text\" name=\"product-name\" id=\"product-name\" value={name} required\r\n                                        onChange={(e) => setName(e.target.value)}>\r\n                                    </input>\r\n                                </li>\r\n                                {!id && <li>\r\n                                    <label htmlFor=\"product-image\">Φωτογραφία:</label>\r\n                                    <input type=\"file\" name=\"product-image\" id=\"product-image\" required\r\n                                        accept=\".jpg, .jpeg, .png\" onChange={(e) => setImage(e.target.files[0])}>\r\n                                    </input>\r\n                                </li>}\r\n                                <li>\r\n                                    <label htmlFor=\"product-price\">Τιμή:</label>\r\n                                    <input type=\"text\" name=\"product-price\" id=\"product-price\" value={price} required\r\n                                        onChange={(e) => setPrice(e.target.value)}>\r\n                                    </input>\r\n                                </li>\r\n                                <li>\r\n                                    <label htmlFor=\"product-description\">Περιγραφή:</label>\r\n                                    <textarea name=\"product-description\" id=\"product-description\" value={description} required\r\n                                        onChange={(e) => setDescription(e.target.value)}>\r\n                                    </textarea>\r\n                                </li>\r\n                                <li>\r\n                                    <button type=\"submit\" className=\"button\" disabled={loadingSave}>{loadingSave ? <LoadingSpinner /> : id ? \"Ενημέρωση\" : \"Δημιουργία\"}</button>\r\n                                </li>\r\n                                <li>\r\n                                    <button className=\"button\" onClick={() => setModalVisible(false)}>Επιστροφή</button>\r\n                                </li>\r\n                            </ul>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        }\r\n        <div className=\"product-list\">\r\n            <table className=\"product-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Φώτο</th>\r\n                        <th>Όνομα</th>\r\n                        <th>Τιμή</th>\r\n                        <th>Εμφάνιση</th>\r\n                        <th>Ενέργεια</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {loading || successSave || loadingVisibility ? <LoadingSpinner /> :\r\n                        error || errorSave ? <div>{error}</div> :\r\n                            collection.map(col => (\r\n                                <tr key={col._id}>\r\n                                    <td>{col._id}</td>\r\n                                    <td><img className=\"admin-product-image\" src={col.image} alt={props.alt} /></td>\r\n                                    <td><Link to={\"/product/\" + col._id}>{col.name}</Link></td>\r\n                                    <td>{(col.price).toFixed(2)} €</td>\r\n                                    <td>\r\n                                        <input type=\"checkbox\" name=\"visibility_checkbox\" id=\"visibility_checkbox\"\r\n                                            checked={col.visibility} onChange={(e) => visibilityChangeHandler(col)}>\r\n                                        </input>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button className=\"button admin-button\" onClick={() => openModal(col)}>Επεξεργασία</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default AdminCollectionScreen;","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\Header.js",["358"],"import React from 'react';\r\nimport './Header.css';\r\nimport {Link} from 'react-router-dom';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ProfileMenu from '../menu/ProfileMenu';\r\nimport { menuOpen } from '../action/menuActions';\r\nimport { importProducts } from '../action/productActions';\r\nimport { navigation } from '../data/data';\r\n\r\nfunction Header(){\r\n    const cart=useSelector(state=>state.cart);\r\n    const {cartItems} = cart;\r\n    const userSignin = useSelector(state=>state.userSignin);\r\n    const {userInfo} = userSignin;\r\n    const dispatch=useDispatch();\r\n\r\n    const handleClick=()=>{    \r\n        dispatch(menuOpen());\r\n    }\r\n        \r\n    return (        \r\n            <div className=\"header\">\r\n                <button className=\"Navbar-toggle\" onClick={handleClick}>\r\n                <i className=\"material-icons\" style={{ fontSize: \"2rem\" }}>menu</i>\r\n                </button>\r\n                <div className=\"brand\">                \r\n                    <Link to='/'>\r\n                        <img className=\"logo\" src=\"./PNG_FINAL.png\"alt=\"logo\"/>\r\n                    </Link>\r\n                    <Link to='/' className=\"brand-name\">\r\n                        <h2>Grand</h2>\r\n                        <h5>mobile accessories</h5>\r\n                    </Link>                \r\n                </div>\r\n                <div className=\"nav-bar\">\r\n                    {navigation.map((x, index)=>\r\n                    <div key={index}>\r\n                        <Link to={x.linkto}>{x.title}</Link>\r\n                    </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"header-links\"> \r\n                    <div className=\"dd-profile-wrapper\">                                      \r\n                        <div><i className=\"material-icons\">account_box</i></div>                    \r\n                        <div className=\"dropdown-profile-menu\">\r\n                                <ProfileMenu/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                    {(userInfo && userInfo.isAdmin===1)?\"\": <Link className=\"my-cart-link\" to=\"/cart\" data-tip data-for=\"my-cart\">\r\n                        <i className=\"material-icons\">shopping_cart</i>\r\n                        <div className=\"total-items-in-cart\">\r\n                            {cartItems && cartItems.reduce((a,c) => a + Number(c.quantity), 0)}\r\n                        </div>\r\n                    </Link>}\r\n                    </div>\r\n                    <ReactTooltip id=\"my-cart\" place=\"bottom\" effect=\"solid\">\r\n                        Το καλάθι μου\r\n                    </ReactTooltip>\r\n                </div>\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Header;","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\Contacts.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ProductsScreen.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\Footer.js",["359"],"import React, { useEffect, useState } from 'react';\r\nimport './Footer.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToNewsletterList } from '../action/userActions';\r\nimport { sendNewsLetterMailConfirmation } from '../action/emailActions';\r\nimport { categories, contactUs, navigation, theCompany } from '../data/data';\r\n\r\nfunction Footer() {\r\n\r\n    const [checked, setChecked] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const addForNewsletter = useSelector(state => state.addForNewsletter);\r\n    const { successAdding } = addForNewsletter;\r\n    const emailAddNewsletter = useSelector(state => state.emailAddNewsletter);\r\n    const { successSending } = emailAddNewsletter;\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addToNewsletterList(email));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (successAdding === true) {\r\n            dispatch(sendNewsLetterMailConfirmation(email));\r\n        }\r\n        else if (successAdding === false) {\r\n            alert(\"Το Email σας είναι ήδη καταχωρημένο!\")\r\n        }\r\n        setEmail('');\r\n        return () => {\r\n\r\n        }\r\n    }, [successAdding])\r\n\r\n    useEffect(() => {\r\n        if (successSending) {\r\n            alert(\"Η εγγραφή σας ολοκληρώθηκε.\\nΣας έχει σταλεί email επιβεβαίωσης.Παρακαλώ ελέγξτε τα εισερχόμενα σας.\\nΣε περίπτωση που δεν βλέπετε το μήνημα ελέγξτε το φάκελο της ανεπιθύμητης αλληλογραφίας.\")\r\n\r\n        }\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [successSending]);\r\n    \r\n    const validEmail = (value) => {\r\n        if (value !== \"undefined\") {\r\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n\r\n            if (pattern.test(value)) {\r\n\r\n                setEmail(value);\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"footer-wrapper\">\r\n            <div className=\"footer\">\r\n                <div className=\"navigation-info info\">\r\n                    <h2>Πλοήγηση</h2>\r\n                    <ul>\r\n                        {navigation.map((x, index) =>\r\n                            <li key={index}><Link to={x.linkto}>{x.title}</Link></li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"product-info info\">\r\n                    <h2>Προϊόντα</h2>\r\n                    <ul>\r\n                        {categories.map((x, index) =>\r\n                            <li key={index}><Link to={x.linkto}>{x.productCategory}</Link></li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"info\">\r\n                    <h2>Η Εταιρία</h2>\r\n                    <ul>\r\n                        {theCompany.map((x, index) =>\r\n                            <li key={index}><Link to={x.linkto}>{x.title}</Link></li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"contact-info info\">\r\n                    <h2>Επικοινωνία</h2>\r\n                    <div>\r\n                        <h3>Grand</h3>\r\n                        <h5>mobile accessories</h5>\r\n                    </div>\r\n                    <div className=\"contact-info-items\"><i className=\"material-icons\">place</i>{contactUs.address}</div>\r\n                    <div className=\"contact-info-items\"><i className=\"material-icons\">call</i> <a href={\"tel:\" + contactUs.phoneNumber}>{contactUs.phoneNumber}</a></div>\r\n                    <div className=\"contact-info-items\"><i className=\"material-icons\">email</i> <a href={\"mailto:\" + contactUs.email}>{contactUs.email}</a> </div>\r\n                    <div>\r\n                        <a href={contactUs.facebook.linkto}\r\n                            target='_blank' rel=\"noopener noreferrer\" className='f-logo'>\r\n                            <img className='logo-social' src={contactUs.facebook.imgSource}\r\n                                alt={contactUs.facebook.altContent} />\r\n                        </a>\r\n                        <a href={contactUs.instagram.linkto}\r\n                            target='_blank' rel=\"noopener noreferrer\" className='insta-logo'>\r\n                            <img className='logo-social' src={contactUs.instagram.imgSource}\r\n                                alt={contactUs.instagram.altContent} />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"newsletter-info info\">\r\n                    <h2>Newsletter</h2>\r\n                    <div>\r\n                        <p>\r\n                            Συμπληρώστε το email σας για να μένετε<br /> ενημερωμένοι για νέα & προσφορές!\r\n                            </p>\r\n                        <form className=\"newsletter-email\" onSubmit={submitHandler}>\r\n                            <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"email\" onChange={(e) => validEmail(e.target.value)}></input><br></br>\r\n                            <input type=\"checkbox\" id=\"private-policy\" name=\"private-policy\" onChange={(e) => { setChecked(e.target.checked) }}></input>\r\n                            {\" \"}\r\n                            <Link to=\"/newsletter-disclaimer\" id=\"private-policy-link\">\r\n                                <strong>Αποδοχή όρων χρήσης</strong>\r\n                            </Link>\r\n                            <input type=\"submit\" id=\"submit-email\" name=\"submit-email\" value=\"Εγγραφή\" disabled={!checked || !email}></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"copywrite-container\">\r\n                <div>\r\n                    <p>Copyright 2020 © grandmobile.gr | All rights reserved |\r\n                        <Link to=\"/Πολιτική-Απορρήτου\">Πολιτική Απορρήτου</Link>\r\n                    </p>\r\n                </div>\r\n                <div className=\"brand-info\">\r\n                    <Link to='/'>\r\n                        <img className=\"logo-info\"\r\n                            src=\"./PNG_FINAL.png\"\r\n                            alt=\"logo\" />\r\n                    </Link>\r\n                    <Link to='/' className=\"brand-name-info\">\r\n                        <h1>Grand</h1>\r\n                        <h5>mobile accessories</h5>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\CollectionScreen.js",["360"],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\MainScreen.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ContactUsScreen.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ProductDetailsScreen.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\RegisterScreen.js",["361","362"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { register } from '../action/userActions';\r\nimport './RegisterScreen.css';\r\nimport { sendRegisterConfirmation } from '../action/emailActions';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n\r\nfunction RegisterScreen(props) {\r\n\r\n    const [name,setName] = useState('');\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const [rePassword,setRePassword] = useState('');\r\n    const userSignin = useSelector(state=>state.userSignin);\r\n    const {loading, error, success, registerFailmessage} = userSignin;\r\n    const emailRegister = useSelector(state=>state.emailRegister);\r\n    const {sendEmail}=emailRegister;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        if(success){\r\n            dispatch(sendRegisterConfirmation(email,name));            \r\n        }\r\n        return ()=>{\r\n\r\n        }\r\n    },[success]);\r\n\r\n    useEffect(()=>{\r\n        if(sendEmail===\"success\"){\r\n            alert(\"Η εγγραφή σας ολοκληρώθηκε.\\nΣας έχει σταλεί email επιβεβαίωσης.Παρακαλώ ελέγξτε τα εισερχόμενα σας.\\nΣε περίπτωση που δεν βλέπετε το μήνημα ελέγξτε το φάκελο της ανεπιθύμητης αλληλογραφίας. \")\r\n            props.history.push(\"/\");\r\n        }\r\n        \r\n        return ()=>{\r\n\r\n        }\r\n    },[sendEmail]);\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(password!==rePassword)\r\n        {\r\n            alert(\"Έλεγξτε τον κωδικο\");\r\n        }\r\n        else{\r\n            dispatch(register(name, email, password));\r\n        }\r\n    }\r\n\r\n    const validEmail =(value)=>{\r\n        if (value !== \"undefined\") {\r\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n          \r\n            if (pattern.test(value)) {\r\n          \r\n              setEmail(value);\r\n          \r\n            }\r\n          \r\n          }\r\n    }\r\n\r\n    return <div className=\"form\">\r\n        <Helmet>\r\n                <title>Grand Mobile Accessories-Εγγραφή νέου μέλους</title>\r\n                <meta name=\"description\" content=\"Κάντε εγγραφή στην ιστοσελίδα μας για να μπορείτε να παρακολουθείτε την πορεία της παραγγελίας σας και για το ιστορικό των αγορών σας\" />\r\n                <meta name=\"keywords\" content=\"Register, signup, εγγραφή, παρακολούθηση, ιστορικό, history \" />\r\n            </Helmet>\r\n        <form onSubmit={submitHandler}>\r\n            <ul className=\"form-container\">\r\n                <li>\r\n                    <h2>\r\n                        Εγγραφή νέου μέλους\r\n                    </h2>\r\n                </li>\r\n                <li>\r\n                    {loading && <div>Loading...</div>}\r\n                    {error && <div>{registerFailmessage}</div>}\r\n                </li>\r\n                <li>\r\n                    <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"όνομα\" required\r\n                     onChange={(e)=> setName(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>\r\n                    <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"email\" required\r\n                     onChange={(e)=> validEmail(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>                    \r\n                    <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"κωδικός\" required\r\n                     onChange={(e)=> setPassword(e.target.value)}>\r\n                    </input>                                        \r\n                </li>\r\n                <li>\r\n                    <input type=\"password\" name=\"re-password\" id=\"re-password\" placeholder=\"Επιβεβαίωση κωδικού\" required\r\n                     onChange={(e)=> setRePassword(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>\r\n                    <input type=\"submit\" className=\"button\" value=\"Εγγραφή\"></input>\r\n                </li>\r\n                <li>\r\n                    <label>\r\n                        Έχετε ήδη λογαριασμό στο GrandMobile;\r\n                    </label>\r\n                    <Link to=\"/signin\">\r\n                        Είσοδος\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default RegisterScreen;","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\SigninScreen.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\PaymentScreen.js",["363"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './PaymentScreen.css';\r\nimport {savePayment}  from '../action/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { listPaymentMethods, listSendingMethods } from '../action/paymentActions';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nfunction PaymentScreen(props) {\r\n\r\n    const [paymentMethod,setPaymentMethod] = useState('');\r\n    const [paymentMethodCost,setPaymentMethodCost] = useState('');\r\n    const [sendingMethod,setSendingMethod] = useState('');\r\n    const [sendingMethodCost,setSendingMethodCost] = useState('');\r\n    const cart=useSelector(state=>state.cart);\r\n    const {cartItems} = cart;\r\n    const sendingMethodsList=useSelector(state=>state.sendingMethodsList);\r\n    const {sendingMethods,loading: loadingSendingMethods,error:errorSendingMethods} = sendingMethodsList;\r\n    const paymentMethodsList=useSelector(state=>state.paymentMethodsList);\r\n    const {paymentMethods,loading: loadingPaymentMethods,error:errorPaymentMethods} = paymentMethodsList;\r\n    const dispatch = useDispatch();\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(savePayment(paymentMethod,paymentMethodCost,sendingMethod, sendingMethodCost));\r\n        props.history.push(\"/placeorder\");\r\n    }\r\n\r\n    const sendingMethodHandler = (id,method,cost)=>{\r\n        setSendingMethod(method);\r\n        setSendingMethodCost(cost);\r\n        dispatch(listPaymentMethods(id));\r\n    }\r\n\r\n    const paymentMethodHandler = (method,cost)=>{\r\n        setPaymentMethod(method);\r\n        setPaymentMethodCost(cost);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(listSendingMethods());\r\n        return ()=>{\r\n            \r\n        }\r\n    },[]);\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Grand Mobile Accessories-Τρόποι Αποστολής-Τρόποι Πληρωμής</title>\r\n                <meta name=\"description\" content=\"Αποστέλουμε την παραγγελεία σας με courier ή μπορείτε να την παραλάβετε από το κατάστημα μας.\" />\r\n                <meta name=\"keywords\" content=\"Λογαριασμός, account, user, χρήστης.\" />\r\n            </Helmet>\r\n            <CheckoutSteps step1 step2></CheckoutSteps>\r\n            <div className=\"payment-form-wrapper\">\r\n                <div className=\"payment-form\">\r\n                    <form id=\"sending-payment-form\" onSubmit={submitHandler}>\r\n                        \r\n                        <ul className=\"sending-form-container\">\r\n                            <li>\r\n                                <h2>Τρόπος Αποστολής</h2>\r\n                            </li>\r\n                            {loadingSendingMethods?<LoadingSpinner/>:\r\n                            errorSendingMethods?<div>{errorSendingMethods}</div>:\r\n                            sendingMethods.map(send=>\r\n                                <li key={send.sendingMethod_id}>\r\n                                    <input type=\"radio\" name=\"sendingMethod\" id=\"sendingMethod\" value={send.sendingMethod}\r\n                                    onChange={(e)=>sendingMethodHandler(send.sendingMethod_id, send.sendingMethod,send.sendingMethodCost)}/>\r\n                                    <label htmlFor=\"sendingMethod\">   {send.sendingMethod}</label>\r\n                                </li>)}                           \r\n                            </ul>\r\n                        <ul className=\"payment-form-container\">\r\n                            <li>\r\n                                <h2>Τρόπος Πληρωμής</h2>\r\n                            </li>\r\n                            {loadingPaymentMethods?<LoadingSpinner/>:\r\n                            errorPaymentMethods?<div>{errorPaymentMethods}</div>:\r\n                            paymentMethods.map(pay=>\r\n                                <li key={pay.paymentMethod}>\r\n                                    <input type=\"radio\" name=\"paymentMethod\" id=\"paymentMethod\" value={pay.paymentMethod}\r\n                                    onChange={(e)=> paymentMethodHandler(pay.paymentMethod,pay.paymentMethodCost)}/>\r\n                                    <label htmlFor=\"paymentMethod\">   {pay.paymentMethod}</label>\r\n                                </li>\r\n                            )}\r\n                           </ul>\r\n                    </form>\r\n                </div>\r\n                <div className=\"order-preview\">\r\n                    <div className=\"order-list\">\r\n                        <ul className=\"order-list-container\">\r\n                            <li>\r\n                                <h2>Η Παραγγελία σου</h2>\r\n                            </li>\r\n                            {cartItems.map(item=>\r\n                                <li className=\"order-item\" key={item._id + item.model}>\r\n                                    <div className=\"order-image-name-model\">\r\n                                        <div className=\"order-image\">                                \r\n                                            {item.category!==\"Φτιάξε τη Θήκη σου\"?\r\n                                            <img src={item.image} alt=\"product\"/>:\r\n                                            <img src={item.image_case} alt=\"Φτιάξε τη θήκη σου\"/>}\r\n                                        </div>\r\n                                        <div className=\"order-name-model\">\r\n                                        <div className=\"order-name\">\r\n                                            <div>                                        \r\n                                                {item.name}                                                                             \r\n                                            </div>\r\n                                        </div>\r\n                                        {item.category===\"Συλλογή\" &&\r\n                                        <div className=\"order-model\">\r\n                                            Μοντέλο: {item.model}\r\n                                        </div>  }                              \r\n                                    </div>                               \r\n                                    </div>\r\n                                    <div className=\"order-qty-total-price\">\r\n                                        <div className=\"order-quantity\">                                     \r\n                                            {item.quantity} (τεμ.)\r\n                                        </div>\r\n                                        <div className=\"order-total-price\">\r\n                                        {(item.totalPrice * item.quantity).toFixed(2)} €\r\n                                    </div>                            \r\n                                    </div>\r\n                                </li>)}\r\n                            <li>\r\n                                <div className=\"order-items-total-cost\">\r\n                                    <h4>\r\n                                    Κόστος Προϊόντων ( {cartItems.reduce((a,c) => a + Number(c.quantity), 0)} τεμ.) :\r\n                                    </h4>\r\n                                    <h4>\r\n                                        {cartItems.reduce((a,c)=>a + c.totalPrice*c.quantity,0).toFixed(2)} €\r\n                                    </h4>\r\n                                </div>                                             \r\n                            </li>\r\n                            {sendingMethod &&<li>\r\n                                <div className=\"order-items-total-cost\">\r\n                                    <h5>\r\n                                    Κόστος Αποστολής :\r\n                                    </h5>\r\n                                    <h5>\r\n                                        {sendingMethodCost} €\r\n                                    </h5>\r\n                                </div>                                             \r\n                            </li>}\r\n                            {paymentMethod && <li>\r\n                                <div className=\"order-items-total-cost\">\r\n                                    <h5>\r\n                                    {paymentMethod} :\r\n                                    </h5>\r\n                                    <h5>\r\n                                        {paymentMethodCost} €\r\n                                    </h5>\r\n                                </div>                                             \r\n                            </li>}\r\n                            <li>\r\n                                <div className=\"order-items-total-cost\">\r\n                                    <h3>\r\n                                    Σύνολο :\r\n                                    </h3>\r\n                                    <h3>\r\n                                    {cartItems.reduce((a,c)=>a + c.totalPrice*c.quantity,0)+ sendingMethodCost + paymentMethodCost} €\r\n                                    </h3>\r\n                                </div>                                             \r\n                            </li>\r\n                            <li>\r\n                                <h5>*Στις τιμές συμπεριλαμβάνονται το Φ.Π.Α. 24% </h5>\r\n                            </li>\r\n                            <li>\r\n                                <h5 style={{marginTop:0.3+'rem'}}> **Σε δυσπρόσιτες περιοχές ενδέχεται να υπάρξει επιπλέον κόστος μεταφορικών.</h5>\r\n                            </li>\r\n                            <li>\r\n                                <input type=\"submit\" form=\"sending-payment-form\" className=\"button continuebtn\" value=\"Συνέχεια\"\r\n                                disabled={!(sendingMethod && paymentMethod)}></input>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default PaymentScreen;","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\WishListScreen.js",["364"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport './WishListScreen.css';\r\nimport { removeFromWishList, getWishList, moveToCart } from '../action/wishListActions';\r\nimport { getCart } from '../action/cartActions';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nfunction WishListScreen(props) {\r\n\r\n    const wishList = useSelector(state => state.wishList);\r\n    const { wishListItems } = wishList;\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            dispatch(getWishList(userInfo.email));\r\n        }\r\n        else {\r\n            props.history.push(\".signin\")\r\n        }\r\n        return () => {\r\n\r\n        };\r\n    }, [userInfo, dispatch]);\r\n\r\n    const removeFromWishListHandler = (id) => {\r\n        dispatch(removeFromWishList(userInfo.email, id));\r\n        dispatch(getWishList(userInfo.email));\r\n    }\r\n\r\n    const addToCartHandler = (item) => {\r\n        dispatch(moveToCart(userInfo.email, item._id, item.model));\r\n        dispatch(getCart(userInfo.email));\r\n    }\r\n\r\n    return (\r\n        <div className=\"wishList-screen-container\">\r\n            <Helmet>\r\n                <title>Grand Mobile Accessories-Τα αγαπημένα μου</title>\r\n                <meta name=\"description\" content=\"Λίστα με τα αγαπημένα μου προϊόντα. Αποθηκεύστε τα αγαπημένα σας προϊόντα ώστε να μπορείτε εύκολα και γρήγορα να τα ξαναβρείτε.\" />\r\n                <meta name=\"keywords\" content=\"Κινητά, Κινητή Τηλεφωνία, Τάμπλετ, tablet, desktop, Η/Υ, επιτραπέζιος, λάπτοπ, laptop, \r\n                φορητός, υπολογιστής, εικόνα, ήχος, είδη γραφείου, office supplies, software, προγράμματα, υπηρεσίες,\r\n                gaming, παιχνίδια, φωτισμός, lighting, gadgets, ιατρικά είδη, αγαπημένα, wishlist\" />\r\n            </Helmet>\r\n            <div>\r\n                <ul className=\"breadcrumb\">\r\n                    <li><Link to=\"/\">Αρχική</Link></li>\r\n                    <li>Τα αγαπημένα μου</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"wishList\">\r\n                <div className=\"wishList-list\">\r\n                    <ul className=\"wishList-list-container\">\r\n                        {!wishListItems || wishListItems.length === 0 ?\r\n                            <li>\r\n                                <h3>Η λίστα αγαπημένων μου είναι άδεια</h3>\r\n                            </li>\r\n                            :\r\n                            wishListItems.map(item =>\r\n                                <li className=\"wishList-item\" key={item.product}>\r\n                                    <div className=\"wishList-image-name-model-price\">\r\n                                        <div className=\"wishList-image\">\r\n                                            <Link to={\"/product/\" + item._id}>\r\n                                                <img src={item.image} alt=\"product\" />\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"wishList-name-model-price\">\r\n                                            <div className=\"wishList-name-model\">\r\n                                                <div className=\"wishList-name\">\r\n                                                    <div>\r\n                                                        <Link to={\"/product/\" + item._id}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {item.category === \"cases\" &&\r\n                                                    <div className=\"wishList-model\">\r\n                                                        Μοντέλο: {item.model}\r\n                                                    </div>}\r\n                                            </div>\r\n                                            <div className=\"wishList-item-price\">\r\n                                                {item.price} €\r\n                                    </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"wishlist-addtocart-remove\">\r\n                                        <div className=\"wishList-name\">\r\n                                            <button className=\"add-to-cart-btn\" onClick={() => addToCartHandler(item)}>\r\n                                                ΠΡΟΣΘΗΚΗ ΣΤΟ ΚΑΛΑΘΙ\r\n                                    </button>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button className=\"delete-item-button\" onClick={() => removeFromWishListHandler(item._id)}>\r\n                                                <i className=\"material-icons\">delete_forever</i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>)}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default WishListScreen;","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\PlaceOrderScreen.js",["365","366"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './PlaceOrderScreen.css';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../action/orderActions';\r\nimport { emptyCart } from '../action/cartActions';\r\nimport { sendEmailToConfirmOrder } from '../action/emailActions';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nfunction PlaceOrderScreen(props) {\r\n\r\nconst cart=useSelector(state=>state.cart);\r\nconst {cartItems, shipping, payment} = cart;\r\nconst order = useSelector(state=>state.order);\r\nconst {successOrdering,orderId,loading:loadingCreateOrder} = order;\r\nconst emailOrderCorfimation = useSelector(state=>state.emailOrderCorfimation);\r\nconst {successSending} = emailOrderCorfimation;\r\n\r\nif(!shipping){\r\n    props.history.push(\"/shipping\");\r\n}\r\nelse if(!payment){\r\n    props.history.push(\"/payment\");\r\n}\r\n\r\nconst dispatch = useDispatch();\r\n    \r\nconst placeOrder = () => {\r\n    const charger={\r\n        name:shipping.charger.name,\r\n        subname:shipping.charger.subname,\r\n        country:shipping.charger.country,\r\n        district:shipping.charger.district,\r\n        city:shipping.charger.city,\r\n        address:shipping.charger.address,\r\n        postalCode:shipping.charger.postalCode,\r\n        phoneNumber:shipping.charger.phone,\r\n        email:shipping.charger.email\r\n    };\r\n\r\n    const company={\r\n        companyName:shipping.company.companyName,\r\n        bussiness:shipping.company.bussiness,\r\n        doy:shipping.company.doy,\r\n        afm:shipping.company.afm\r\n    };\r\n    const shippingTo={\r\n        name :shipping.shippingTo.name,\r\n        subname: shipping.shippingTo.subname,\r\n        country:shipping.shippingTo.country,\r\n        district:shipping.shippingTo.district,\r\n        city:shipping.shippingTo.city,\r\n        address:shipping.shippingTo.address,\r\n        postalCode:shipping.shippingTo.postalCode\r\n    };\r\n\r\n    const methods = {\r\n        comments: shipping.comments,\r\n        typeOfPayment: shipping.typeOfPayment,\r\n        paymentMethod: payment.paymentMethod,\r\n        paymentMethodCost: payment.paymentMethodCost,\r\n        sendingMethod: payment.sendingMethod,\r\n        sendingMethodCost: payment.sendingMethodCost\r\n    }\r\n\r\n    const itemsCost = cartItems.reduce((a,c)=>a + c.totalPrice*c.quantity,0).toFixed(2);\r\n    \r\n    \r\n    dispatch(createOrder(charger, company, shippingTo, methods, itemsCost, cartItems));\r\n}\r\n    \r\n    useEffect(()=>{\r\n        if(successOrdering===true){\r\n            dispatch(sendEmailToConfirmOrder(orderId[\"order_id\"]));\r\n        }\r\n        else if(successOrdering===false)\r\n        {\r\n            alert(\"Κάτι συνέβει και δεν καταχωρήθηκε η παραγγελεία σας!!!!\\nΖητούμε συγνώμη για την αναστάτωση.Παρακαλούμε να επαναλάβεται τη διαδικασία!\");\r\n        }\r\n\r\n    },[successOrdering]);\r\n    \r\n    useEffect(()=>{\r\n        if(successSending===true){\r\n            alert(\"Η παραγγελία σας καταχωρήθηκε επιτυχώς!\");\r\n            emptyCart();\r\n            dispatch(emptyCart());           \r\n            props.history.push(\"/\");\r\n            window.location.reload(false);\r\n        }\r\n        else if(successSending===false)\r\n        {\r\n            alert(\"Κάτι συνέβει και δεν καταχωρήθηκε η παραγγελεία σας!!!!\\nΖητούμε συγνώμη για την αναστάτωση.Παρακαλούμε να επαναλάβεται τη διαδικασία!\");\r\n        }\r\n            \r\n        \r\n    },[successSending]);\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Grand Mobile Accessories-Καταχώρηση Παραγγελίας</title>\r\n                <meta name=\"description\" content=\"Καταχωρήστε την παραγγελία σας και εμείς θα την επεξεργαστούμε και θα την αποστείλουμε στη διεύθυνση που επιθυμείτε.\" />\r\n                <meta name=\"keywords\" content=\"Καταχώρηση, παραγγελία, order.\" />\r\n            </Helmet>\r\n            <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n            {shipping && payment &&\r\n            <div className=\"placeorder\">        \r\n                <div className=\"placeorder-info\">\r\n                    <div className=\"order-info\">\r\n                        <h3>Στοιχεία Παραγγελίας</h3>\r\n                        <div>\r\n                            <label>Είδος παραστατικού :</label>\r\n                            <div>{shipping.typeOfPayment}</div>                           \r\n                        </div>\r\n                        <div>\r\n                            <label>Τρόπος Πληρωμής :</label>\r\n                            <div>{payment.paymentMethod}</div>\r\n                        </div>                        \r\n                        <div>\r\n                            <label>Τρόπος Αποστολής :</label>\r\n                            <div>{payment.sendingMethod}</div>                           \r\n                        </div>\r\n                        <div>\r\n                            <label>Σχόλια πελάτη :</label>\r\n                            <div>{shipping.comments}</div>                          \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"charger-shipping\">\r\n                        {shipping.typeOfPayment===\"Τιμολόγιο\" &&\r\n                        <div className=\"invoice-info\">\r\n                            <h3>Στοιχεία Τιμολόγησης</h3>\r\n                            <div>\r\n                                <label>Επωνυμία :</label>\r\n                                <div>{shipping.company.companyName}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Επάγγελμα :</label>\r\n                                <div>{shipping.company.bussiness}</div>                                \r\n                            </div>\r\n                            <div>\r\n                                <label>Α.Φ.Μ. :</label>\r\n                                <div>{shipping.company.afm}</div>                                \r\n                            </div>\r\n                            <div>\r\n                                <label>Δ.Ο.Υ. :</label>\r\n                                <div>{shipping.company.doy}</div>                                \r\n                            </div>\r\n                            <div>\r\n                                <label>Χώρα :</label>\r\n                                <div>{shipping.charger.country}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Νομός :</label>\r\n                                <div>{shipping.charger.district}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Πόλη :</label>\r\n                                <div>{shipping.charger.city}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Διεύθυνση :</label>\r\n                                <div>{shipping.charger.address}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Τ.Κ. :</label>\r\n                                <div>{shipping.charger.postalCode}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Τηλέφωνο :</label>\r\n                                <div>{shipping.charger.phone}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Email :</label>\r\n                                <div>{shipping.charger.email}</div>\r\n                            </div>\r\n                        </div>\r\n}\r\n                        {shipping.typeOfPayment===\"Απόδειξη\" &&\r\n                        <div className=\"charger-info\">\r\n                            <h3>Στοιχεία Πελάτη</h3>\r\n                            <div>\r\n                                <label>Όνομα :</label>\r\n                                <div>{shipping.charger.name}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Επίθετο :</label>\r\n                                <div>{shipping.charger.subname}</div>                                \r\n                            </div>\r\n                            <div>\r\n                                <label>Χώρα :</label>\r\n                                <div>{shipping.charger.country}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Νομός :</label>\r\n                                <div>{shipping.charger.district}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Πόλη :</label>\r\n                                <div>{shipping.charger.city}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Διεύθυνση :</label>\r\n                                <div>{shipping.charger.address}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Τ.Κ. :</label>\r\n                                <div>{shipping.charger.postalCode}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Τηλέφωνο :</label>\r\n                                <div>{shipping.charger.phone}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Email :</label>\r\n                                <div>{shipping.charger.email}</div>\r\n                            </div>\r\n                            <div></div>\r\n                        </div>\r\n}\r\n                        {shipping.shippingTo.name &&\r\n                        <div className=\"shipping-info\">\r\n                            <h3>Στοιχεία Παράδοσης</h3>\r\n                            <div>\r\n                                <label>Όνομα :</label>\r\n                                <div>{shipping.shippingTo.name}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Επίθετο :</label>\r\n                                <div>{shipping.shippingTo.subname}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Χώρα :</label>\r\n                                <div>{shipping.shippingTo.country}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Νομός :</label>\r\n                                <div>{shipping.shippingTo.district}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Πόλη :</label>\r\n                                <div>{shipping.shippingTo.city}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Διεύθυνση :</label>\r\n                                <div>{shipping.shippingTo.address}</div>\r\n                            </div>\r\n                            <div>\r\n                                <label>Τ.Κ :</label>\r\n                                <div>{shipping.shippingTo.postalCode}</div> \r\n                            </div>\r\n                            <div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n}\r\n                    </div>                    \r\n                </div>\r\n                <div className=\"order-preview\">\r\n                    <div className=\"order-list\">\r\n                        <ul className=\"order-list-container\">\r\n                            <li style={{justifyContent:\"center\"}}>\r\n                                <h2>Η Παραγγελία σου</h2>\r\n                            </li>\r\n                            {cartItems.map(item=>\r\n                                <li className=\"order-item\" key={item._id + item.model}>\r\n                                    <div className=\"order-image-name-model\">\r\n                                        <div className=\"order-image\">\r\n                                        {item.category!==\"Φτιάξε τη Θήκη σου\"?\r\n                                            <img src={item.image} alt=\"product\"/>:\r\n                                            <img src={item.image_case} alt=\"Φτιάξε τη θήκη σου\"/>}\r\n                                        </div>\r\n                                        <div className=\"order-name-model\">\r\n                                        <div className=\"order-name\">\r\n                                            <div>                                        \r\n                                                {item.name}                                                                             \r\n                                            </div>\r\n                                        </div>\r\n                                        {item.category===\"Συλλογή\" &&\r\n                                        <div className=\"order-model\">\r\n                                            Μοντέλο: {item.model}\r\n                                        </div>  }                              \r\n                                    </div>                               \r\n                                    </div>\r\n                                    <div className=\"order-qty-total-price\">\r\n                                        <div className=\"order-quantity\">                                     \r\n                                            {item.quantity} (τεμ.)\r\n                                        </div>\r\n                                        <div className=\"order-total-price\">\r\n                                        {(item.totalPrice * item.quantity).toFixed(2)} €\r\n                                    </div>                            \r\n                                    </div>\r\n                                </li>)}\r\n                            <li>\r\n                                <div className=\"order-items-total-cost\">\r\n                                    <h3>\r\n                                    Κόστος Προϊόντων ( {cartItems.reduce((a,c) => a + Number(c.quantity), 0)} τεμ.) :\r\n                                    </h3>\r\n                                    <h3>\r\n                                        {cartItems.reduce((a,c)=>a + c.totalPrice*c.quantity,0).toFixed(2)} €\r\n                                    </h3>\r\n                                </div>                                             \r\n                            </li>\r\n                            {payment.sendingMethod && <li>\r\n                                <div className=\"order-items-total-cost\">\r\n                                    <h5>\r\n                                    Κόστος Αποστολής :\r\n                                    </h5>\r\n                                    <h5>\r\n                                        {payment.sendingMethodCost} €\r\n                                    </h5>\r\n                                </div>                                             \r\n                            </li>}\r\n                            {payment.paymentMethod && <li>\r\n                                <div className=\"order-items-total-cost\">\r\n                                    <h5>\r\n                                    {payment.paymentMethod } :\r\n                                    </h5>\r\n                                    <h5>\r\n                                        {payment.paymentMethodCost} €\r\n                                    </h5>\r\n                                </div>                                             \r\n                            </li>}\r\n                            <li>\r\n                                <div className=\"order-items-total-cost\">\r\n                                    <h3>\r\n                                    Σύνολο :\r\n                                    </h3>\r\n                                    <h3>\r\n                                    {(cartItems.reduce((a,c)=>a + c.totalPrice*c.quantity,0)+ payment.sendingMethodCost + payment.paymentMethodCost).toFixed(2)} €\r\n                                    </h3>\r\n                                </div>                                             \r\n                            </li>\r\n                            <li>\r\n                                <h5>*Στις τιμές συμπεριλαμβάνονται το Φ.Π.Α. 24% </h5>\r\n                            </li>\r\n                            <li>\r\n                                <h5 style={{marginTop:0.3+'rem'}}> **Σε δυσπρόσιτες περιοχές ενδέχεται να υπάρξει επιπλέον κόστος μεταφορικών.</h5>\r\n                            </li>\r\n                            <li>\r\n                                <button onClick={placeOrder} className=\"button continuebtn\" disabled={loadingCreateOrder}>{loadingCreateOrder?<LoadingSpinner/>:\"Καταχώρηση παραγγελίας\"}</button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen;","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\AdminOrdersScreen.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\MyAccountScreen.js",["367","368"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MyAccountScreen.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { saveAccountInfo, passwordChange, accountInfo, deleteAccount, signout } from '../action/userActions';\r\nimport { sendAccountDeleteEmail } from '../action/emailActions';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nfunction MyaccountScreen(props){\r\n\r\n    const emailAccountDeleteConfirmation = useSelector(state=>state.emailAccountDeleteConfirmation);\r\n    const {successSending} = emailAccountDeleteConfirmation;\r\n    const userSignin = useSelector(state=>state.userSignin);\r\n    const {userInfo,successDeleting} = userSignin;\r\n    const userAccountInfo = useSelector(state=>state.userAccountInfo);\r\n    const {success: successSave} = userAccountInfo;\r\n    const userAccountAddress= useSelector(state=>state.userAccountAddress);\r\n    const {userAddressInfo} = userAccountAddress;\r\n    const userPasswordChange = useSelector(state=>state.userPasswordChange);\r\n    const {message: changePasswordMessage} = userPasswordChange;\r\n    const dispatch = useDispatch();\r\n    const [accountInfoModal,setAccountInfoModal] = useState(false);\r\n    const [passwordChangeModal,setPasswordChangeModal] = useState(false);\r\n    const [addressInfoModal,setAddressInfoModal] = useState(false);\r\n    const [deleteUserModal,setDeleteUserModal] = useState(false);\r\n    const [name,setName] = useState();\r\n    const [subname,setSubname] = useState();\r\n    const [email,setEmail] = useState();\r\n    const [phoneNumber,setPhoneNumber] = useState();\r\n    const [password,setPassword] = useState();\r\n    const [newPassword,setNewPassword] = useState();\r\n    const [country,setCountry] = useState();\r\n    const [district,setDistrict] = useState();\r\n    const [city,setCity] = useState();\r\n    const [address,setAddress] = useState();\r\n    const [postalCode,setPostalCode] = useState();\r\n\r\n\r\n    useEffect(()=>{        \r\n        if(userInfo===null){\r\n            props.history.push(\"/\");\r\n        }\r\n                \r\n    },[userInfo,props.history]);\r\n\r\n    useEffect(()=>{        \r\n        if(userInfo)\r\n        {            \r\n            dispatch(accountInfo(userInfo.email));\r\n            setEmail(userInfo.email);\r\n        }        \r\n    },[userInfo,dispatch]);\r\n\r\n    useEffect(()=>{        \r\n        if(userAddressInfo)\r\n        {\r\n            setName(userAddressInfo.name);\r\n            setSubname(userAddressInfo.subname);            \r\n            setPhoneNumber(userAddressInfo.phoneNumber);\r\n            setCountry(userAddressInfo.country);\r\n            setDistrict(userAddressInfo.district);\r\n            setCity(userAddressInfo.city);\r\n            setAddress(userAddressInfo.address);\r\n            setPostalCode(userAddressInfo.postalCode);\r\n        }\r\n    },[userAddressInfo]);\r\n\r\n    useEffect(()=>{        \r\n        if(successDeleting===true)\r\n        {            \r\n            dispatch(sendAccountDeleteEmail(email))\r\n        }\r\n        else if(successDeleting===false)\r\n        {\r\n            alert(\"Δεν υπάρχει λογαριασμός με αυτό το email!\\nΠαρακαλούμε να επαναλάβετε τη διαδικασία διαγραφής ή επικοινωνίστε μαζί μας ώστε να προβούμε στις απαραίτητες ενέργειες\\nΣυγνώμη για την αναστάτωση.\")\r\n        }\r\n    },[successDeleting]);\r\n\r\n    useEffect(()=>{\r\n        if(successSending)\r\n        {\r\n            alert(\"Η διαγραφή του λογαριασμού σας ολοκληρώθηκε επιτυχώς .\\nΣας έχει σταλεί email επιβεβαίωσης.Παρακαλώ ελέγξτε τα εισερχόμενα σας.\\nΣε περίπτωση που δεν βλέπετε το μήνημα ελέγξτε το φάκελο της ανεπιθύμητης αλληλογραφίας.\")\r\n            dispatch(signout());\r\n            props.history.push(\"/\");\r\n            window.location.reload(false);\r\n        }\r\n        \r\n        return ()=>{\r\n    \r\n        }\r\n    },[successSending]);\r\n\r\n\r\n    const accountInfoModalHandler = () =>\r\n    {\r\n        setAccountInfoModal(!accountInfoModal);\r\n    }\r\n\r\n    const passwordChangeHandler = () =>\r\n    {\r\n        setPasswordChangeModal(!passwordChangeModal);\r\n    }\r\n\r\n    const addressInfoModalHandler = () =>\r\n    {\r\n        setAddressInfoModal(!addressInfoModal);\r\n    }\r\n\r\n    const deleteUserModalHandler = () =>{\r\n        setDeleteUserModal(!deleteUserModal);\r\n    }\r\n\r\n    const accountFormSubmitHandler = (e)=>{\r\n        e.preventDefault();\r\n        dispatch(saveAccountInfo(name, subname, phoneNumber, email, country, district,\r\n             city,address,postalCode));\r\n    }\r\n\r\n    const passwordChangeFormSubmitHandler = (e)=>{\r\n        e.preventDefault();\r\n        dispatch(passwordChange(email,password,newPassword));\r\n        setPassword(\"\");\r\n        setNewPassword(\"\");\r\n    }\r\n\r\n    const deleteAccountFormSubmitHandler = (e)=>{\r\n        e.preventDefault();\r\n        dispatch(deleteAccount(email));\r\n    }\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <Helmet>\r\n                <title>Grand Mobile Accessories-Ο Λογαριασμός μου</title>\r\n                <meta name=\"description\" content=\"Δημιούργησε λογαριασμό στο grandmobile.gr μείνε ενημερωμένος και επωφελήσου από τις προσφορές.\" />\r\n                <meta name=\"keywords\" content=\"Λογαριασμός, account, user, χρήστης.\" />\r\n            </Helmet>\r\n            <div>\r\n                <ul className=\"breadcrumb\">\r\n                    <li><Link to=\"/\">Αρχική</Link></li>\r\n                    <li>Ο Λογαριασμός μου</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"my-account-wrapper\">\r\n                <div className=\"card-header\"  onClick={accountInfoModalHandler}>\r\n                    <h4 className=\"expand\">Προσωπικές Πληροφορίες</h4>\r\n                    <i className=\"material-icons expand\">{!accountInfoModal?\"expand_more\":\"expand_less\"}</i>\r\n                </div>\r\n                {accountInfoModal &&\r\n                <div className=\"account-info\">\r\n                    {successSave && <div className=\"accountInfoMessage\">Οι αλλαγές αποθηκεύτηκαν</div>}\r\n                    <form id=\"accountForm\" onSubmit={accountFormSubmitHandler}>\r\n                        <ul>                            \r\n                            <li>\r\n                                <div className=\"column-display\">\r\n                                    <label>Όνομα</label>\r\n                                    <input type=\"text\" value={name} placeholder=\"Όνομα*\"\r\n                                    onChange={(e)=> setName(e.target.value)}/>\r\n                                </div>                                                                \r\n                            </li>\r\n                            <li>                                \r\n                                <div className=\"column-display\">\r\n                                    <label>Επίθετο</label>\r\n                                    <input type=\"text\" value={subname} placeholder=\"Επίθετο*\"\r\n                                    onChange={(e)=> setSubname(e.target.value)}/>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"column-display\">\r\n                                    <label>Email</label>\r\n                                    <input type=\"text\" value={email} placeholder=\"Email*\"\r\n                                    onChange={(e)=> setEmail(e.target.value)} disabled/>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"column-display\">\r\n                                    <label>Τηλέφωνο</label>\r\n                                    <input type=\"tel\" value={phoneNumber} placeholder=\"Τηλέφωνο*\" maxLength=\"10\"\r\n                                    onChange={(e)=> setPhoneNumber(e.target.value)}/>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <input type=\"submit\" className= \"proceed-checkout-btn\" value=\"Αποθήκευση\"/>\r\n                            </li>\r\n                        </ul>\r\n                    </form>\r\n                </div>\r\n                }\r\n            </div>                \r\n            <div className=\"my-account-wrapper\">\r\n                <div className=\"card-header\" onClick={passwordChangeHandler}>\r\n                    <h4 className=\"expand\">Αλλαγή password</h4>\r\n                    <i className=\"material-icons expand\">{!passwordChangeModal?\"expand_more\":\"expand_less\"}</i>\r\n                </div>\r\n                {passwordChangeModal &&\r\n                <div className=\"password-change\">\r\n                    {changePasswordMessage && <div className=\"accountInfoMessage\">{changePasswordMessage}</div>}\r\n                    <form id=\"passwordChangeForm\" onSubmit={passwordChangeFormSubmitHandler}>\r\n                        <ul>\r\n                            <li>\r\n                                <div className=\"column-display\">\r\n                                    <label>Password</label>\r\n                                    <input type=\"password\" value={password} placeholder=\"password*\"\r\n                                    onChange={(e)=> setPassword(e.target.value)}/>\r\n                                </div>                                                                \r\n                            </li>\r\n                            <li>\r\n                                <div className=\"column-display\">\r\n                                    <label>Νέο Password</label>\r\n                                    <input type=\"password\" value={newPassword} placeholder=\"Νέο Password*\"\r\n                                    onChange={(e)=> setNewPassword(e.target.value)}/>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <input type=\"submit\" className= \"proceed-checkout-btn\" value=\"Αλλαγή Password\"/>\r\n                            </li>\r\n                        </ul>\r\n                    </form>\r\n                </div>\r\n                }\r\n            </div>\r\n            <div className=\"my-account-wrapper\">\r\n                <div className=\"card-header\" onClick={addressInfoModalHandler}>\r\n                    <h4 className=\"expand\">Επεξεργασία Διεύθυνσης</h4>\r\n                    <i className=\"material-icons expand\">{!addressInfoModal?\"expand_more\":\"expand_less\"}</i>\r\n                </div>\r\n                {addressInfoModal &&\r\n                <div className=\"address-info\">\r\n                    {successSave && <div className=\"accountInfoMessage\">Οι αλλαγές αποθηκεύτηκαν</div>}\r\n                    <form id=\"addressForm\" onSubmit={accountFormSubmitHandler}>\r\n                        <ul>\r\n                            <li>\r\n                                <div className=\"column-display\">\r\n                                    <label>Χώρα</label>\r\n                                    <input type=\"text\" value={country} placeholder=\"Χώρα*\"\r\n                                    onChange={(e)=> setCountry(e.target.value)}/>\r\n                                </div>\r\n                                <div className=\"column-display\">\r\n                                    <label>Νομός</label>\r\n                                    <input type=\"text\" value={district} placeholder=\"Νομός*\"\r\n                                    onChange={(e)=> setDistrict(e.target.value)}/>\r\n                                </div>\r\n                                <div className=\"column-display\">\r\n                                    <label>Πόλη</label>\r\n                                    <input type=\"text\" value={city} placeholder=\"Πόλη*\"\r\n                                    onChange={(e)=> setCity(e.target.value)}/>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"column-display address\">\r\n                                    <label>Διεύθυνση</label>\r\n                                    <input type=\"text\" value={address} placeholder=\"Διεύθυνση*\"\r\n                                    onChange={(e)=> setAddress(e.target.value)}/>\r\n                                </div>\r\n                                <div className=\"column-display\">\r\n                                    <label>Τ.Κ</label>\r\n                                    <input type=\"text\" value={postalCode} placeholder=\"Τ.Κ*\"\r\n                                    onChange={(e)=> setPostalCode(e.target.value)}/>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <input type=\"submit\" className= \"proceed-checkout-btn\" value=\"Αποθήκευση\"/>\r\n                            </li>\r\n                        </ul>\r\n                    </form>\r\n                </div>\r\n                }\r\n            </div>\r\n            <div className=\"my-account-wrapper\">\r\n                <div className=\"card-header\" onClick={deleteUserModalHandler}>\r\n                    <h4 className=\"expand\">Διαγραφή Λογαριασμού</h4>\r\n                    <i className=\"material-icons expand\">{!deleteUserModal?\"expand_more\":\"expand_less\"}</i>\r\n                </div>\r\n                {deleteUserModal &&\r\n                <div className=\"address-info\">\r\n                     <form id=\"addressForm\" onSubmit={deleteAccountFormSubmitHandler}>\r\n                        <ul>\r\n                            <li>\r\n                                <h4>Θέλετε να διαγράψετε το λογαριασμό σας;</h4>\r\n                            </li>\r\n                            <li>\r\n                                <div style={{alignSelf:\"center\"}}>Το email σας είναι : <strong>{email}</strong></div>\r\n                                <input type=\"submit\" className= \"proceed-checkout-btn\" value=\"Διαγραφή Λογαριασμού\"/>\r\n                            </li>\r\n                        </ul>\r\n                    </form>\r\n                </div>\r\n                }\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyaccountScreen;","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\AdminProductsScreen.js",["369","370","371","372","373","374","375","376"],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\Gdpr.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ProductsByCategoryScreen.js",["377","378","379","380","381","382","383"],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\AdminOrderDetails.js",["384","385","386","387","388","389"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport './AdminOrderDetails.css';\r\nimport { detailsOrder, changeStatus, updateStatus, changeOrderDetails, updateChargerAddress, updateShippingToAddress, updateOrder, removeOrderItem } from '../action/orderActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sendEmailToConfirmOrder } from '../action/emailActions';\r\nimport { listPaymentMethods, listSendingMethods } from '../action/paymentActions';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\nfunction AdminOrdersDetailScreen(props) {\r\n\r\n    const sendingMethodsList = useSelector(state => state.sendingMethodsList);\r\n    const { sendingMethods, loading: loadingSendingMethods, error: errorSendingMethods } = sendingMethodsList;\r\n    const paymentMethodsList = useSelector(state => state.paymentMethodsList);\r\n    const { paymentMethods, loading: loadingPaymentMethods, error: errorPaymentMethods } = paymentMethodsList;\r\n    const orderDetails = useSelector(state => state.orderDetails);\r\n    const { loading, order, error, success, charger, shippingTo, products } = orderDetails;\r\n    const updateOrderStatus = useSelector(state => state.updateOrderStatus);\r\n    const { success: successUpdateStatus } = updateOrderStatus;\r\n    const changeOrderStatus = useSelector(state => state.changeOrderStatus);\r\n    const { successChangeStatus } = changeOrderStatus;\r\n    const emailOrderCorfimation = useSelector(state => state.emailOrderCorfimation);\r\n    const { successSending } = emailOrderCorfimation;\r\n    const [orderStatus, setOrderStatus] = useState(\"\");\r\n    const [orderShippingPrice, setOrderShippingPrice] = useState(0);\r\n    const [newΟrderStatus, setNewOrderStatus] = useState(\"\");\r\n    const [orderPaymentMethod, setOrderPaymentMethod] = useState(\"\");\r\n    const [orderPaymentMethodPrice, setOrderPaymentMethodPrice] = useState(0);\r\n    const [orderPaymentType, setOrderPaymentType] = useState(\"\");\r\n    const [orderSendingMethod, setOrderSendingMethod] = useState(\"\");\r\n    const [chargerCompanyName, setChargerCompanyName] = useState(\"\");\r\n    const [chargerBussiness, setChargerBussiness] = useState(\"\");\r\n    const [chargerAfm, setChargerAfm] = useState(\"\");\r\n    const [chargerDoy, setChargerDoy] = useState(\"\");\r\n    const [chargerName, setChargerName] = useState(\"\");\r\n    const [chargerSubname, setChargerSubname] = useState(\"\");\r\n    const [chargerCountry, setChargerCountry] = useState(\"\");\r\n    const [chargerState, setChargerState] = useState(\"\");\r\n    const [chargerCity, setChargerCity] = useState(\"\");\r\n    const [chargerAddress, setChargerAddress] = useState(\"\");\r\n    const [chargerPostalCode, setChargerPostalCode] = useState(\"\");\r\n    const [chargerPhone, setChargerPhone] = useState(\"\");\r\n    const [chargerComments, setChargerComments] = useState(\"\");\r\n    const [shippingName, setShippingName] = useState(\"\");\r\n    const [shippingSubname, setShippingSubname] = useState(\"\");\r\n    const [shippingCountry, setShippingCountry] = useState(\"\");\r\n    const [shippingState, setShippingState] = useState(\"\");\r\n    const [shippingCity, setShippingCity] = useState(\"\");\r\n    const [shippingAddress, setShippingAddress] = useState(\"\");\r\n    const [shippingPostalCode, setShippingPostalCode] = useState(\"\");\r\n    const [orderStatusModal, setOrderStatusModal] = useState(false);\r\n    const [orderEditModal, setOrderEditModal] = useState(false);\r\n    const [chargerAddressEditModal, setChargerAddressEditModal] = useState(false);\r\n    const [shippingAddressEditModal, setShippingAddressEditModal] = useState(false);\r\n    const [cartEditModal, setCartEditModal] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsOrder(props.match.params.id));\r\n        window.scrollTo(0, 0)\r\n        return () => {\r\n            //\r\n        };\r\n    }, [props.match.params.id]);\r\n\r\n    useEffect(() => {\r\n        if (orderEditModal && order && order.length !== 0)\r\n            dispatch(listSendingMethods());\r\n\r\n    }, [orderEditModal]);\r\n\r\n    useEffect(() => {\r\n        if (sendingMethods && orderSendingMethod && sendingMethods.length !== 0) {\r\n            const send = sendingMethods.find(x => x.sendingMethod === order.sendingMethod)\r\n            dispatch(listPaymentMethods(send.sendingMethod_id));\r\n        }\r\n\r\n    }, [sendingMethods]);\r\n\r\n    useEffect(() => {\r\n        if (paymentMethods && paymentMethods.length !== 0)\r\n            setOrderPaymentMethodPrice(paymentMethods[0].paymentMethodCost);\r\n\r\n    }, [paymentMethods]);\r\n\r\n    useEffect(() => {\r\n        if (successUpdateStatus === true)\r\n            dispatch(sendEmailToConfirmOrder(order.order_id));\r\n        return () => {\r\n            //\r\n        };\r\n    }, [successUpdateStatus]);\r\n\r\n    useEffect(() => {\r\n        if (successSending === true)\r\n            dispatch(detailsOrder(props.match.params.id));\r\n        return () => {\r\n            //\r\n        };\r\n    }, [successSending]);\r\n\r\n    useEffect(() => {\r\n        if (successChangeStatus === true)\r\n            dispatch(detailsOrder(props.match.params.id));\r\n        return () => {\r\n            //\r\n        };\r\n    }, [successChangeStatus]);\r\n\r\n    useEffect(() => {\r\n        if (success === true) {\r\n            setOrderStatus(order.status);\r\n            setNewOrderStatus(order.status);\r\n            setOrderSendingMethod(order.sendingMethod);\r\n            setOrderShippingPrice(order.shippingPrice);\r\n            setOrderPaymentMethod(order.paymentMethod);\r\n            setOrderPaymentMethodPrice(order.paymentMethodPrice);\r\n            setOrderPaymentType(order.paymentType);\r\n            setChargerCompanyName(charger.companyName);\r\n            setChargerBussiness(charger.bussiness);\r\n            setChargerAfm(charger.afm);\r\n            setChargerDoy(charger.doy);\r\n            setChargerName(charger.name);\r\n            setChargerSubname(charger.subname);\r\n            setChargerCountry(charger.country);\r\n            setChargerState(charger.district);\r\n            setChargerCity(charger.city);\r\n            setChargerAddress(charger.street);\r\n            setChargerPostalCode(charger.postalCode);\r\n            setChargerPhone(charger.phoneNumber);\r\n            setChargerComments(order.comments);\r\n            if (shippingTo) {\r\n                setShippingName(shippingTo.name);\r\n                setShippingSubname(shippingTo.subname);\r\n                setShippingCountry(shippingTo.country);\r\n                setShippingState(shippingTo.district);\r\n                setShippingCity(shippingTo.city);\r\n                setShippingAddress(shippingTo.street);\r\n                setShippingPostalCode(shippingTo.postalCode);\r\n            }\r\n        }\r\n        return () => {\r\n            //\r\n        };\r\n    }, [success, order, charger, shippingTo]);\r\n\r\n    useEffect(() => {\r\n        if (charger) {\r\n            setChargerCompanyName(charger.companyName);\r\n            setChargerBussiness(charger.bussiness);\r\n            setChargerAfm(charger.afm);\r\n            setChargerDoy(charger.doy);\r\n            setChargerName(charger.name);\r\n            setChargerSubname(charger.subname);\r\n            setChargerCountry(charger.country);\r\n            setChargerState(charger.district);\r\n            setChargerCity(charger.city);\r\n            setChargerAddress(charger.street);\r\n            setChargerPostalCode(charger.postalCode);\r\n            setChargerPhone(charger.phoneNumber);\r\n        }\r\n        return () => {\r\n            //\r\n        };\r\n    }, [success, charger]);\r\n\r\n    useEffect(() => {\r\n        if (shippingTo) {\r\n            setShippingName(shippingTo.name);\r\n            setShippingSubname(shippingTo.subname);\r\n            setShippingCountry(shippingTo.country);\r\n            setShippingState(shippingTo.district);\r\n            setShippingCity(shippingTo.city);\r\n            setShippingAddress(shippingTo.street);\r\n            setShippingPostalCode(shippingTo.postalCode);\r\n        }\r\n        return () => {\r\n            //\r\n        };\r\n    }, [success, shippingTo]);\r\n\r\n    const convertDate = (x) => {\r\n        const options = {\r\n            year: 'numeric', month: 'numeric', day: 'numeric',\r\n            hour: 'numeric', minute: 'numeric', second: 'numeric',\r\n            hour12: false\r\n        }\r\n        const dateTimeFormat = new Intl.DateTimeFormat('en-GB', options);\r\n        var date = Date.parse(x);\r\n        return dateTimeFormat.format(date);\r\n    }\r\n\r\n    const changeStatusHandler = (newStatus) => {\r\n        setNewOrderStatus(newStatus);\r\n        var oldStatusIndex = orderStatusList.indexOf(orderStatus);\r\n        var StatusIndex = orderStatusList.indexOf(newStatus);\r\n        if (StatusIndex < oldStatusIndex) {\r\n            setOrderStatusModal(true);\r\n        }\r\n        else {\r\n            dispatch(updateStatus(order.order_id, newStatus, StatusIndex))\r\n            setOrderStatus(newStatus);\r\n        }\r\n    }\r\n\r\n    const okChargerAddressEditHandler = () => {\r\n        var charger = {\r\n            companyName: chargerCompanyName,\r\n            bussiness: chargerBussiness,\r\n            doy: chargerDoy,\r\n            afm: chargerAfm,\r\n            name: chargerName,\r\n            subname: chargerSubname,\r\n            country: chargerCountry,\r\n            district: chargerState,\r\n            city: chargerCity,\r\n            street: chargerAddress,\r\n            postalCode: chargerPostalCode,\r\n            phoneNumber: chargerPhone,\r\n            comments: chargerComments\r\n        };\r\n\r\n        dispatch(updateChargerAddress(order.order_id, orderPaymentType, charger));\r\n        setChargerAddressEditModal(false);\r\n        dispatch(detailsOrder(props.match.params.id));\r\n    }\r\n\r\n    const okShippingAddressEditHandler = () => {\r\n        var shippingTo = {\r\n            name: shippingName,\r\n            subname: shippingSubname,\r\n            country: shippingCountry,\r\n            district: shippingState,\r\n            city: shippingCity,\r\n            street: shippingAddress,\r\n            postalCode: shippingPostalCode\r\n        };\r\n\r\n        dispatch(updateShippingToAddress(order.order_id, order.shippingAddress, shippingTo));\r\n        setShippingAddressEditModal(false);\r\n        dispatch(detailsOrder(props.match.params.id));\r\n    }\r\n\r\n    const okStatusHandler = () => {\r\n        var StatusIndex = orderStatusList.indexOf(newΟrderStatus);\r\n        var dates = {\r\n            proccessDate: \"\",\r\n            delayDate: \"\",\r\n            shippingDate: \"\",\r\n            deletedDate: \"\"\r\n        }\r\n\r\n        switch (StatusIndex) {\r\n            case 0:\r\n                dates = {\r\n                    proccessDate: null,\r\n                    delayDate: null,\r\n                    shippingDate: null,\r\n                    cancelDate: null,\r\n                    dateIndex: 0\r\n                }\r\n                break;\r\n            case 1:\r\n                dates = {\r\n                    delayDate: null,\r\n                    shippingDate: null,\r\n                    cancelDate: null,\r\n                    dateIndex: 1\r\n                }\r\n                break;\r\n            case 2:\r\n                dates = {\r\n                    shippingDate: null,\r\n                    cancelDate: null,\r\n                    dateIndex: 2\r\n                }\r\n                break;\r\n            case 3:\r\n                dates = {\r\n                    cancelDate: null,\r\n                    dateIndex: 3\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        dispatch(changeStatus(order.order_id, newΟrderStatus, dates));\r\n        setOrderStatus(newΟrderStatus);\r\n        setOrderStatusModal(false);\r\n    }\r\n\r\n    const okOrderEditHandler = () => {\r\n        dispatch(changeOrderDetails(order.order_id, orderSendingMethod, orderShippingPrice, orderPaymentMethod, orderPaymentMethodPrice, orderPaymentType));\r\n        setOrderEditModal(false);\r\n        dispatch(detailsOrder(props.match.params.id));\r\n    }\r\n\r\n    const cancelStatusHandler = () => {\r\n\r\n        setOrderStatus(orderStatus);\r\n        setOrderStatusModal(false);\r\n    }\r\n\r\n    const removeFromCartHandler = (product_id, model) => {\r\n        dispatch(removeOrderItem(order.order_id, product_id, model));\r\n        dispatch(detailsOrder(props.match.params.id));\r\n    }\r\n\r\n    const updateCartHandler = (product_id, model, quantity) => {\r\n        dispatch(updateOrder(order.order_id, product_id, model, quantity));\r\n        dispatch(detailsOrder(props.match.params.id));\r\n    }\r\n    const orderStatusList = [\"Καταχωρήθηκε\", \"Επεξεργάζεται\", \"Αναμονή\", \"Ολοκληρώθηκε\", \"Ακυρώθηκε\"];\r\n\r\n    const sendingMethodHandler = (e) => {\r\n        setOrderSendingMethod(e.target.value);\r\n        setOrderPaymentMethod('');\r\n        let index = e.target.selectedIndex;\r\n        let el = e.target.childNodes[index]\r\n        let option = el.getAttribute('id');\r\n        let cost = el.getAttribute('cost');\r\n        setOrderShippingPrice(cost);\r\n        dispatch(listPaymentMethods(option));\r\n    }\r\n\r\n    const paymentMethodHandler = (e) => {\r\n        setOrderPaymentMethod(e.target.value);\r\n        let index = e.target.selectedIndex;\r\n        let el = e.target.childNodes[index];\r\n        let cost = el.getAttribute('cost');\r\n        setOrderPaymentMethodPrice(cost);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading ? <div>loading...</div> :\r\n                error ? <div>{error.message}</div> :\r\n                    (\r\n                        <div className=\"order_details-wrapper\">\r\n                            <div className=\"order_details\">\r\n                                <div>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <label>Αρ. παραγγελίας:</label>\r\n                                            <div>{order.order_id}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Email Πελάτη:</label>\r\n                                            <div>{order.user_email}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Τρόπος Παράδοσης:</label>\r\n                                            <div>{order.sendingMethod}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Τρόπος Πληρωμής:</label>\r\n                                            <div>{order.paymentMethod}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Παραστατικό:</label>\r\n                                            <div>{order.paymentType}</div>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div style={{ width: \"80%\" }}>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <label>Ημ. παραγγελίας:</label>\r\n                                            <div>\r\n                                                {order.orderDate && convertDate(order.orderDate)}\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Ημ. επεξεργασίας:</label>\r\n                                            <div>\r\n                                                {order.proccessDate && convertDate(order.proccessDate)}\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Ημ. Αποστολής:</label>\r\n                                            <div>\r\n                                                {order.shippingDate && convertDate(order.shippingDate)}\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Ημ. Διαγραφής:</label>\r\n                                            <div>\r\n                                                {order.deletedDate && convertDate(order.deletedDate)}\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <label>Κατάσταση παραγγελίας:</label>\r\n                                            <select className=\"select-order-status\" value={orderStatus} onChange={(e) => { changeStatusHandler(e.target.value) }}>\r\n                                                <option value={orderStatusList[0]}>{orderStatusList[0]}</option>\r\n                                                <option value={orderStatusList[1]}>{orderStatusList[1]}</option>\r\n                                                <option value={orderStatusList[2]}>{orderStatusList[2]}</option>\r\n                                                <option value={orderStatusList[3]}>{orderStatusList[3]}</option>\r\n                                                <option value={orderStatusList[4]}>{orderStatusList[4]}</option>\r\n                                            </select>\r\n                                            <div id=\"changeStatusModal\" className=\"modal\" style={{ display: orderStatusModal ? \"block\" : \"none\" }}>\r\n                                                <div className=\"modal-content\">\r\n                                                    <div className=\"modalHeader\">\r\n                                                        <h2>Προσοχή!</h2>\r\n                                                    </div>\r\n                                                    <p>Η κατάσταση παραγγελίας που επιλέξατε ({newΟrderStatus}) προηγείται χρονικά της τρέχουσας κατάστασης ({orderStatus}).<br /><br />\r\n                                            Είστε σίγουρος πως θέλετε να προχωρήσετε?<br /><br />\r\n                                            Αν συνεχίσετε όλες οι ημερομηνίες που σχετίζονται με τις ενδιάμεσες καταστάσεις\r\n                                            θα διαγραφουν οριστικά!\r\n                                        </p>\r\n                                                    <div className=\"okCancelButton-wrapper\">\r\n                                                        <button className=\"okCancelButton button\" onClick={okStatusHandler}>OK</button>\r\n                                                        <button className=\"okCancelButton button\" onClick={cancelStatusHandler}>Ακύρωση</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Κόστος Προιόντων:</label>\r\n                                            <div>{order.itemsPrice} €</div>\r\n                                        </li>\r\n                                        {order.sendingMethod && <li>\r\n                                            <label>Μεταφορικά:</label>\r\n                                            <div>{order.shippingPrice} €</div>\r\n                                        </li>}\r\n                                        {order.paymentMethod && <li>\r\n                                            <label>{order.paymentMethod}:</label>\r\n                                            <div>{order.paymentMethodPrice} €</div>\r\n                                        </li>}\r\n                                        <li>\r\n                                            <label>Σύνολο παραγγελίας:</label>\r\n                                            <div>{order.totalPrice} €</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <button className=\"button continuebtn\" onClick={() => setOrderEditModal(true)}>Επεξεργασία</button>\r\n                                            <div id=\"orderEditModal\" className=\"modal\" style={{ display: orderEditModal ? \"block\" : \"none\" }}>\r\n                                                <div className=\"modal-content\">\r\n                                                    <div className=\"modalHeader\">\r\n                                                        <h2>Στοιχεία παραγγελίας</h2>\r\n                                                    </div>\r\n                                                    <ul>\r\n                                                        <li>\r\n                                                            <label>Αρ. παραγγελίας:</label>\r\n                                                            <div>{order.order_id}</div>\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <label>Email Πελάτη:</label>\r\n                                                            <div>{order.user_email}</div>\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <label>Τρόπος Αποστολής:</label>\r\n                                                            <select type=\"text\" onChange={(e) => sendingMethodHandler(e)}>\r\n                                                                {loadingSendingMethods ? <option><LoadingSpinner /></option> :\r\n                                                                    errorSendingMethods ? <div>{errorSendingMethods}</div> :\r\n                                                                        sendingMethods.map(send =>\r\n                                                                            <option key={send.sendingMethod_id} id={send.sendingMethod_id} cost={send.sendingMethodCost} selected={send.sendingMethod === order.sendingMethod} value={send.sendingMethod}>{send.sendingMethod}</option>)}\r\n                                                            </select>\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <label>Τρόπος Πληρωμής:</label>\r\n                                                            <select type=\"text\" onChange={(e) => paymentMethodHandler(e)}>\r\n                                                                <option value=\"\">Επέλεξε τρόπο πληρωμής</option>\r\n                                                                {loadingPaymentMethods ? <option><LoadingSpinner /></option> :\r\n                                                                    errorPaymentMethods ? <div>{errorPaymentMethods}</div> :\r\n                                                                        paymentMethods.map((pay, index) =>\r\n                                                                            <option key={index} id={pay.paymentMethod_id} cost={pay.paymentMethodCost} value={pay.paymentMethod} selected={pay.paymentMethod === order.paymentMethod}>{pay.paymentMethod}</option>)}\r\n                                                            </select>\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <label>Παραστατικό:</label>\r\n                                                            <select type=\"text\" value={orderPaymentType} onChange={(e) => setOrderPaymentType(e.target.value)}>\r\n                                                                <option value=\"Απόδειξη\">Απόδειξη</option>\r\n                                                                <option value=\"Τιμολόγιο\">Τιμολόγιο</option>\r\n                                                            </select>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <div className=\"okCancelButton-wrapper\">\r\n                                                        <button className=\"okCancelButton button\" disabled={orderPaymentMethod === \"\"} onClick={okOrderEditHandler}>OK</button>\r\n                                                        <button className=\"okCancelButton button\" onClick={() => setOrderEditModal(false)}>Ακύρωση</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"charger-shipping-order\">\r\n                                <div className=\"charge-details\">\r\n                                    <h3>Στοιχεία Πελάτη</h3>\r\n                                    <ul>\r\n                                        {order.paymentType === 'Τιμολόγιο' &&\r\n                                            <Fragment>\r\n                                                <li>\r\n                                                    <label>Επωνυμία :</label>\r\n                                                    <div>{charger.companyName}</div>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label> Επάγγελμα:</label>\r\n                                                    <div>{charger.bussiness}</div>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label> Α.Φ.Μ.:</label>\r\n                                                    <div>{charger.afm}</div>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label> Δ.Ο.Υ.:</label>\r\n                                                    <div>{charger.doy}</div>\r\n                                                </li>\r\n                                            </Fragment>}\r\n                                        {order.paymentType === 'Απόδειξη' &&\r\n                                            <Fragment>\r\n                                                <li>\r\n                                                    <label>Όνομα :</label>\r\n                                                    <div>{charger.name}</div>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label>Επίθετο :</label>\r\n                                                    <div>{charger.subname}</div>\r\n                                                </li>\r\n                                            </Fragment>}\r\n                                        <li>\r\n                                            <label>Χώρα :</label>\r\n                                            <div>{charger.country}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Νομός :</label>\r\n                                            <div>{charger.district}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Πόλη :</label>\r\n                                            <div>{charger.city}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Διεύθυνση :</label>\r\n                                            <div>{charger.street}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Τ.Κ. :</label>\r\n                                            <div>{charger.postalCode}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Τηλέφωνο :</label>\r\n                                            <div>{charger.phoneNumber}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Email :</label>\r\n                                            <div>{charger.user_email}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <label>Σημειώσεις Πελάτη :</label>\r\n                                            <div>{order.comments}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <button className=\"button continuebtn\" onClick={() => setChargerAddressEditModal(true)}>Επεξεργασία στοιχείων πελάτη</button>\r\n                                            <div id=\"chargerAddressEditModal\" className=\"modal\" style={{ display: chargerAddressEditModal ? \"block\" : \"none\" }}>\r\n                                                <div className=\"modal-content\">\r\n                                                    <div className=\"modalHeader\">\r\n                                                        <h2>Στοιχεία Πελάτη</h2>\r\n                                                    </div>\r\n                                                    <ul>\r\n                                                        <li>\r\n                                                            <label>Αρ. παραγγελίας:</label>\r\n                                                            <div>{order.order_id}</div>\r\n                                                            <label>Email Πελάτη:</label>\r\n                                                            <div>{order.user_email}</div>\r\n                                                        </li>\r\n                                                        {order.paymentType === 'Τιμολόγιο' &&\r\n                                                            <Fragment>\r\n                                                                <li>\r\n                                                                    <label>Επωνυμία:</label>\r\n                                                                    <input type=\"text\" name=\"charger-companyName\" id=\"charger-companyName\" required={order.paymentType === 'Τιμολόγιο'}\r\n                                                                        onChange={(e) => setChargerCompanyName(e.target.value)} value={chargerCompanyName}>\r\n                                                                    </input>\r\n                                                                </li>\r\n                                                                <li>\r\n                                                                    <label>Επάγγελμα:</label>\r\n                                                                    <input type=\"text\" name=\"charger-bussiness\" id=\"charger-bussiness\" required={order.paymentType === 'Τιμολόγιο'}\r\n                                                                        onChange={(e) => setChargerBussiness(e.target.value)} value={chargerBussiness}>\r\n                                                                    </input>\r\n                                                                </li>\r\n                                                                <li>\r\n                                                                    <label>Α.Φ.Μ:</label>\r\n                                                                    <input type=\"text\" name=\"charger-afm\" id=\"charger-afm\" required={order.paymentType === 'Τιμολόγιο'}\r\n                                                                        onChange={(e) => setChargerAfm(e.target.value)} value={chargerAfm} maxLength='9'>\r\n                                                                    </input>\r\n                                                                    <label>Δ.Ο.Υ:</label>\r\n                                                                    <input type=\"text\" name=\"charger-doy\" id=\"charger-doy\" required={order.paymentType === 'Τιμολόγιο'}\r\n                                                                        onChange={(e) => setChargerDoy(e.target.value)} value={chargerDoy}>\r\n                                                                    </input>\r\n                                                                </li>\r\n                                                            </Fragment>\r\n                                                        }\r\n                                                        {order.paymentType === 'Απόδειξη' &&\r\n                                                            <li>\r\n                                                                <label>Όνομα:</label>\r\n                                                                <input type=\"text\" name=\"charger-name\" id=\"charger-name\" required={order.paymentType === 'Απόδειξη'}\r\n                                                                    onChange={(e) => setChargerName(e.target.value)} value={chargerName}>\r\n                                                                </input>\r\n                                                                <label>Επίθετο:</label>\r\n                                                                <input type=\"text\" name=\"charger-subname\" id=\"charger-subname\" required={order.paymentType === 'Απόδειξη'}\r\n                                                                    onChange={(e) => setChargerSubname(e.target.value)} value={chargerSubname}>\r\n                                                                </input>\r\n                                                            </li>}\r\n                                                        <li>\r\n                                                            <label>Χώρα:</label>\r\n                                                            <input type=\"text\" name=\"charger-country\" id=\"charger-country\" required\r\n                                                                onChange={(e) => setChargerCountry(e.target.value)} value={chargerCountry}>\r\n                                                            </input>\r\n                                                            <label>Νομός:</label>\r\n                                                            <input type=\"text\" name=\"charger-state\" id=\"charger-state\" required\r\n                                                                onChange={(e) => setChargerState(e.target.value)} value={chargerState}>\r\n                                                            </input>\r\n                                                            <label>Πόλη:</label>\r\n                                                            <input type=\"text\" name=\"charger-city\" id=\"charger-city\" required\r\n                                                                onChange={(e) => setChargerCity(e.target.value)} value={chargerCity}>\r\n                                                            </input>\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <label>Διεύθυνση:</label>\r\n                                                            <input type=\"text\" name=\"charger-address\" id=\"charger-address\" required\r\n                                                                onChange={(e) => setChargerAddress(e.target.value)} value={chargerAddress}>\r\n                                                            </input>\r\n                                                            <label>Τ.Κ:</label>\r\n                                                            <input type=\"text\" name=\"charger-postalCode\" id=\"charger-postalCode\" required\r\n                                                                onChange={(e) => setChargerPostalCode(e.target.value)} value={chargerPostalCode}>\r\n                                                            </input>\r\n                                                            <label>Τηλέφωνο:</label>\r\n                                                            <input type=\"tel\" name=\"charger-phone\" id=\"charger-phone\"\r\n                                                                pattern=\"[0-9]{3}-[0-9]{4}-[0-9]{3}\"\r\n                                                                required value={chargerPhone}\r\n                                                                onChange={(e) => setChargerPhone(e.target.value)}>\r\n                                                            </input>\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <label>Σχόλια Πελάτη:</label>\r\n                                                            <textarea name=\"charger-comments\" id=\"charger-comments\" maxLength=\"1000\" rows=\"3\"\r\n                                                                onChange={(e) => setChargerComments(e.target.value)} value={chargerComments}>\r\n                                                            </textarea>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <div className=\"okCancelButton-wrapper\">\r\n                                                        <button className=\"okCancelButton button\" onClick={okChargerAddressEditHandler}>OK</button>\r\n                                                        <button className=\"okCancelButton button\" onClick={() => setChargerAddressEditModal(false)}>Ακύρωση</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"shipping-details\">\r\n                                    <h3>Στοιχεία Παράδοσης</h3>\r\n                                    <ul>\r\n                                        {shippingTo &&\r\n                                            <Fragment>\r\n                                                <li>\r\n                                                    <label>Όνομα :</label>\r\n                                                    <div>{shippingTo.name}</div>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label>Επίθετο :</label>\r\n                                                    <div>{shippingTo.subname}</div>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label>Χώρα :</label>\r\n                                                    <div>{shippingTo.country}</div>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label>Νομός :</label>\r\n                                                    <div>{shippingTo.district}</div>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label>Πόλη :</label>\r\n                                                    <div>{shippingTo.city}</div>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label>Διεύθυνση :</label>\r\n                                                    <div>{shippingTo.street}</div>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label>Τ.Κ. :</label>\r\n                                                    <div>{shippingTo.postalCode}</div>\r\n                                                </li>\r\n                                            </Fragment>}\r\n                                        <li>\r\n                                            <button className=\"button continuebtn\" onClick={() => setShippingAddressEditModal(true)}>Επεξεργασία στοιχείων παράδοσης</button>\r\n                                            <div id=\"shippingAddressEditModal\" className=\"modal\" style={{ display: shippingAddressEditModal ? \"block\" : \"none\" }}>\r\n                                                <div className=\"modal-content\">\r\n                                                    <div className=\"modalHeader\">\r\n                                                        <h2>Στοιχεία Παράδοσης</h2>\r\n                                                    </div>\r\n                                                    <ul>\r\n                                                        <li>\r\n                                                            <label>Αρ. παραγγελίας:</label>\r\n                                                            <div>{order.order_id}</div>\r\n                                                            <label>Email Πελάτη:</label>\r\n                                                            <div>{order.user_email}</div>\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <label>Όνομα:</label>\r\n                                                            <input type=\"text\" name=\"shipping-name\" id=\"shipping-name\" required\r\n                                                                onChange={(e) => setShippingName(e.target.value)} value={shippingName}>\r\n                                                            </input>\r\n                                                            <label>Επίθετο:</label>\r\n                                                            <input type=\"text\" name=\"shipping-subname\" id=\"shipping-subname\" required\r\n                                                                onChange={(e) => setShippingSubname(e.target.value)} value={shippingSubname}>\r\n                                                            </input>\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <label>Χώρα:</label>\r\n                                                            <input type=\"text\" name=\"shipping-country\" id=\"shipping-country\" required\r\n                                                                onChange={(e) => setShippingCountry(e.target.value)} value={shippingCountry}>\r\n                                                            </input>\r\n                                                            <label>Νομός:</label>\r\n                                                            <input type=\"text\" name=\"shipping-state\" id=\"shipping-state\" required\r\n                                                                onChange={(e) => setShippingState(e.target.value)} value={shippingState}>\r\n                                                            </input>\r\n                                                            <label>Πόλη:</label>\r\n                                                            <input type=\"text\" name=\"shipping-city\" id=\"shipping-city\" required\r\n                                                                onChange={(e) => setShippingCity(e.target.value)} value={shippingCity}>\r\n                                                            </input>\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <label>Διεύθυνση:</label>\r\n                                                            <input type=\"text\" name=\"shipping-address\" id=\"shipping-address\" required\r\n                                                                onChange={(e) => setShippingAddress(e.target.value)} value={shippingAddress}>\r\n                                                            </input>\r\n                                                            <label htmlFor=\"shipping-postalCode\">Τ.Κ:</label>\r\n                                                            <input type=\"text\" name=\"shipping-postalCode\" id=\"shipping-postalCode\" required\r\n                                                                onChange={(e) => setShippingPostalCode(e.target.value)} value={shippingPostalCode}>\r\n                                                            </input>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <div className=\"okCancelButton-wrapper\">\r\n                                                        <button className=\"okCancelButton button\" onClick={okShippingAddressEditHandler}>OK</button>\r\n                                                        <button className=\"okCancelButton button\" onClick={() => setShippingAddressEditModal(false)}>Ακύρωση</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"order-list-details\">\r\n                                    <ul className=\"order-list-details-container\">\r\n                                        <li>\r\n                                            <h3>Παραγγελία</h3>\r\n                                        </li>\r\n                                        <li className=\"order-list-header\">\r\n                                            <div></div>\r\n                                            <div>Προϊόν</div>\r\n                                            <div>Κατηγορία</div>\r\n                                            <div>Μοντέλο</div>\r\n                                            <div>Ποσότητα</div>\r\n                                            <div>Σύνολο</div>\r\n                                        </li>\r\n                                        {products.map(item =>\r\n                                            <li className=\"order-item\" key={item._id + item.model}>\r\n                                                <div className=\"order-image flex-column\">\r\n                                                    {item.category !== \"Φτιάξε τη Θήκη σου\" ?\r\n                                                        <img src={item.image} alt=\"product\" /> :\r\n                                                        <Fragment>\r\n                                                            <a href={item.image_case} download={item.image_case.slice(35, item.image_case.length)}>\r\n                                                                <img className=\"order-image-img\" src={item.image_case} alt=\"Φτιάξε τη θήκη σου\" />\r\n                                                            </a>\r\n                                                            <a href={item.image_case} download={item.image_case.slice(35, item.image_case.length)}>\r\n                                                                <button className=\"button download-button\">Λήψη</button>\r\n                                                            </a>\r\n                                                        </Fragment>}\r\n                                                </div>\r\n                                                <div className=\"order-name-model\">\r\n                                                    <div className=\"order-name\">\r\n                                                        {item.name}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div>\r\n                                                    {item.category}\r\n                                                </div>\r\n                                                {item.category === \"Συλλογή\" || item.category === \"Φτιάξε τη Θήκη σου\" ?\r\n                                                    <div className=\"order-model\">\r\n                                                        {item.model}\r\n                                                    </div> :\r\n                                                    <div>\r\n\r\n                                                    </div>}\r\n                                                <div className=\"order-name\">\r\n                                                    {item.quantity}\r\n                                                </div>\r\n                                                <div className=\"order-total-price\">\r\n                                                    {(item.totalPrice * item.quantity).toFixed(2)} €\r\n                                </div>\r\n                                            </li>)}\r\n                                        <li className=\"admin-order-items-total-cost\">\r\n                                            <div></div>                                            \r\n                                            <table className=\"admin-order-items-total-cost-table\">\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        Κόστος Προϊόντων ( {products.reduce((a, c) => a + Number(c.quantity), 0)} τεμ.) :\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {products.reduce((a, c) => a + c.totalPrice * Number(c.quantity), 0).toFixed(2)} €\r\n                                                    </td>\r\n                                                </tr>\r\n                                                {order.sendingMethod && <tr>\r\n                                                    <td>\r\n                                                        Κόστος Αποστολής :\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {order.shippingPrice} €\r\n                                                    </td>                                                    \r\n                                                </tr>}\r\n                                                {order.paymentMethod && <tr>\r\n                                                    <td>\r\n                                                        Κόστος Αποστολής :\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {order.paymentMethodPrice} €\r\n                                                    </td>\r\n                                                </tr>}\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <strong>Συνολικό Κόστος Παραγγελίας :</strong>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <strong>{order.totalPrice} €</strong>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </li>\r\n                                        <li>\r\n                                            <button className=\"button continuebtn\" onClick={() => setCartEditModal(true)}>Επεξεργασία παραγγελίας</button>\r\n                                            <div id=\"cartEditModal\" className=\"modal\" style={{ display: cartEditModal ? \"block\" : \"none\" }}>\r\n                                                <div className=\"modal-content\">\r\n                                                    <div className=\"modalHeader\">\r\n                                                        <h2>Παραγγελία</h2>\r\n                                                    </div>\r\n                                                    <ul>\r\n                                                        <li className=\"head-details\">\r\n                                                            <label>Αρ. παραγγελίας:</label>\r\n                                                            <div>{order.order_id}</div>\r\n                                                            <label>Email Πελάτη:</label>\r\n                                                            <div>{order.user_email}</div>\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <ul className=\"cart-item-width\">\r\n                                                                <li className=\"order-list-header\">\r\n                                                                    <div></div>\r\n                                                                    <div>Προϊόν</div>\r\n                                                                    <div>Κατηγορία</div>\r\n                                                                    <div>Μοντέλο</div>\r\n                                                                    <div>Τιμή</div>\r\n                                                                    <div>Ποσότητα</div>\r\n                                                                    <div>Σύνολο</div>\r\n                                                                    <div></div>\r\n                                                                </li>\r\n                                                                {products.map(item =>\r\n                                                                    <li className=\"cart-item cart-item-height \" key={item._id + item.model}>\r\n                                                                        <div className=\"cart-image-height\">\r\n                                                                            <img src={item.image} alt=\"product\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"cart-name-model\">\r\n                                                                            <div className=\"cart-name\">\r\n                                                                                {item.name}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div>\r\n                                                                            {item.category}\r\n                                                                        </div>\r\n                                                                        <div className=\"cart-model\">\r\n                                                                            {item.model}\r\n                                                                        </div>\r\n                                                                        <div className=\"cart-item-price\">\r\n                                                                            {item.totalPrice} €\r\n                                                        </div>\r\n                                                                        <div className=\"cart-name\">\r\n                                                                            <select className=\"cart-select-qty\" name=\"cart-select-qty\" id=\"cart-select-qty\"\r\n                                                                                onChange={(e) => updateCartHandler(item._id, item.model, e.target.value)} >\r\n                                                                                {[...Array(item.countInStock).keys()].map(x =>\r\n                                                                                    <option key={x + 1} value={x + 1} selected={x+1===item.quantity}>{x + 1}</option>)}\r\n                                                                            </select>\r\n                                                                        </div>\r\n                                                                        <div className=\"cart-total-price\">\r\n                                                                            {(item.totalPrice * item.quantity).toFixed(2)} €\r\n                                                        </div>\r\n                                                                        <div>\r\n                                                                            <button className=\"delete-item-button\" onClick={() => removeFromCartHandler(item._id, item.model)} >\r\n                                                                                <i className=\"material-icons\">delete_forever</i>\r\n                                                                            </button>\r\n                                                                        </div>\r\n                                                                    </li>)}\r\n                                                            </ul>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <div className=\"okCancelButton-wrapper\">\r\n                                                        <button className=\"okCancelButton button\" onClick={() => setCartEditModal(false)}>Κλείσιμο</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminOrdersDetailScreen;","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\CollectionDetailsScreen.js",["390"],"import React, { useEffect, useState } from 'react';\r\nimport './ProductDetailsScreen.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listModels } from '../action/modelActions';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { addToCart, addToLocalCart } from '../action/cartActions';\r\nimport { addToWishList } from '../action/wishListActions';\r\nimport { detailsCollection } from '../action/collectionActions';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\nfunction CollectionDetailScreen (props){\r\n\r\n    const [qty,setQty] = useState(1);\r\n    const [model,setModel] = useState();\r\n    const collectionDetails = useSelector(state=>state.collectionDetails);\r\n    const {collection,loading, error} = collectionDetails;\r\n    const userSignin = useSelector(state=>state.userSignin);\r\n    const {userInfo} = userSignin;\r\n    const modelList = useSelector(state=>state.modelList);\r\n    const {phoneModels,loadingModel,errorModel} = modelList;\r\n    let {id}=useParams();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch(detailsCollection(id));\r\n        dispatch(listModels());\r\n        window.scrollTo(0,80)\r\n        return()=>{\r\n\r\n        }\r\n    },[])\r\n    \r\n    const handleAddToCart = () =>{\r\n        if(model)\r\n        {\r\n            if(userInfo)\r\n            {\r\n                dispatch(addToCart( collection._id, model, qty));\r\n            }\r\n            else\r\n            {\r\n                dispatch(addToLocalCart(collection._id, model, qty));\r\n            }\r\n        }\r\n        else\r\n        {\r\n            alert(\"Παρακαλώ επιλέξτε το μοντέλο της συσκευής σας\");\r\n        }\r\n    }\r\n    \r\n    const handleAddToWishList = () =>{\r\n        if(model)\r\n        {\r\n            dispatch(addToWishList(userInfo.email, collection._id, model));\r\n        }\r\n        else\r\n        {\r\n            alert(\"Παρακαλώ επιλέξτε το μοντέλο της συσκευής σας\");\r\n        }\r\n    }\r\n    \r\n    return (\r\n        loading?<div>Loading...</div>:\r\n        error?<div>{error}</div>:\r\n        (\r\n        <div className=\"details-screen-wrapper\">            \r\n            <div>\r\n                <ul className=\"breadcrumb\">\r\n                    <li><Link to=\"/\">Αρχική</Link></li>\r\n                    <li><Link to=\"/collection\">Συλλογή</Link></li>\r\n                    <li>{collection.name}</li>\r\n                </ul>\r\n            </div>\r\n            {loading?<LoadingSpinner/>:\r\n            error?<div>{error}</div>:\r\n            <div className=\"product-details-wrapper\">\r\n                <div className=\"product-detail-image\">\r\n                    <img className=\"product-img\" src={collection.image} alt={collection.name}></img>\r\n                </div>\r\n                <div className=\"product-details\">\r\n                    <ul>\r\n                        <li className=\"product-name-info\">\r\n                            <h2>{collection.name}</h2>\r\n                        </li>\r\n                        <li className=\"product-price-info\">\r\n                            <label htmlFor=\"prod-price\">Τιμή : </label>\r\n                            <h3 className=\"prod-price\" name=\"prod-price\">  €{collection.totalPrice}</h3>\r\n                        </li>                        \r\n                        <li className=\"product-phone-model\">\r\n                            <label htmlFor=\"select-model\">Μοντέλο :</label>\r\n                            {loadingModel? <div>Loading...</div>:\r\n                            errorModel?<div>{error}</div>:\r\n                            <select className=\"select-model\" name=\"select-model\" defaultValue=\"\"\r\n                            onChange={(e)=>{setModel(e.target.value)}}>\r\n                                <option value=\"\" disabled hidden>Επέλεξε το μοντέλο του κινητού σου</option>\r\n                                {phoneModels.map(model=>(\r\n                                    <option key={model.phone_model_id} value={model.brand + \" \"+ model.model}>\r\n                                        {model.brand + \" \"+ model.model}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            }\r\n                        </li>                        \r\n                        <li>                        \r\n                            <div className=\"qty-addbutton-wishlist\">\r\n                                <label className=\"select-qty-label\" htmlFor=\"qty\">Ποσότητα: </label>\r\n                                <select className=\"select-qty\" name=\"qty\" id=\"qty\"\r\n                                value={qty} onChange={(e)=> {setQty(e.target.value)}}>\r\n                                    {[...Array(collection.countInStock).keys()].map(x=>\r\n                                        <option key={x + 1} value={x+1}>{x+1}</option>)}\r\n                                </select>\r\n                                <div>\r\n                                    <button className=\"add-to-cart-btn\" onClick={handleAddToCart} disabled={!collection.countInStock>0}>\r\n                                        ΠΡΟΣΘΗΚΗ ΣΤΟ ΚΑΛΑΘΙ\r\n                                    </button>\r\n                                    <button className=\"wish-list-link\" onClick={handleAddToWishList} disabled={!collection.countInStock>0}\r\n                                    data-tip data-for=\"my-wish-list\">\r\n                                        <i className=\"material-icons wish-list-link\">favorite_border</i>\r\n                                    </button>\r\n                                    <ReactTooltip backgroundColor=\"#deccf0\" textColor=\"#312f8b\" id=\"my-wish-list\" place=\"bottom\" effect=\"solid\">\r\n                                        Προσθήκη στα αγαπημένα μου.\r\n                                    </ReactTooltip>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"product-details-info\">\r\n                            <h3>Περιγραφή:</h3>\r\n                            <br/>\r\n                            {collection.description}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n}\r\n        </div>\r\n        )\r\n    )\r\n}\r\n\r\nexport default CollectionDetailScreen;","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\NewsletterDisclaimer.js",["391"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { sendNewsLetterMailDeletingConfirmation } from '../action/emailActions';\r\nimport { removeFromNewsletterList } from '../action/userActions';\r\nimport './Gdpr.css';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nfunction NewsletterDisclaimer(props) {\r\n    \r\nconst [email,setEmail] =useState('');\r\nconst [comments,setComments] = useState('');\r\nconst removeFromNewsletter = useSelector(state=>state.removeFromNewsletter);\r\nconst {successRemoving} = removeFromNewsletter; \r\nconst emailRemoveNewsletter = useSelector(state=>state.emailRemoveNewsletter);\r\nconst {successSending} = emailRemoveNewsletter;\r\nconst dispatch = useDispatch();\r\n\r\nconst submitHandler = (e) =>{\r\n    e.preventDefault();\r\n    dispatch(removeFromNewsletterList(email, comments));\r\n}\r\n\r\nuseEffect(()=>{\r\n    if(successRemoving===true)\r\n    {\r\n        dispatch(sendNewsLetterMailDeletingConfirmation(email, comments));\r\n    }\r\n    else if(successRemoving===false){\r\n        alert(\"Το Email σας δεν υπήρχε καταχωρημένο στη λίστα μας!\")\r\n    }\r\n    return ()=>{\r\n\r\n    }\r\n},[successRemoving]);\r\n\r\nuseEffect(()=>{\r\n    if(successSending)\r\n    {\r\n        alert(\"Η διαγραφή σας από τους καταλόγους των Newsletters μας ολοκληρώθηκε επιτυχώς.\\nΣας έχει σταλεί email επιβεβαίωσης.Παρακαλώ ελέγξτε τα εισερχόμενα σας.\\nΣε περίπτωση που δεν βλέπετε το μήνημα ελέγξτε το φάκελο της ανεπιθύμητης αλληλογραφίας.\")\r\n        setEmail('');\r\n        setComments('');\r\n    }\r\n    \r\n    return ()=>{\r\n\r\n    }\r\n},[successSending]);\r\n\r\nuseEffect(()=>{\r\n    window.scrollTo(0,0)\r\n    \r\n    return ()=>{\r\n\r\n    }\r\n},[]);\r\n\r\n    return(\r\n        <div className=\"gdpr-container\">\r\n            <Helmet>\r\n                <title>Grand Mobile Accessories-Newsletter</title>\r\n                <meta name=\"description\" content=\"Κάνε εγγραφή στα newsletters του grandmobile.gr μείνε ενημερωμένος και επωφελήσου από τις προσφορές.\" />\r\n                <meta name=\"keywords\" content=\"newsletters, εμαιλ, email.\" />\r\n            </Helmet>\r\n            <ul className=\"gdpr\">\r\n            <li>\r\n                <h3>ΔΗΛΩΣΗ ΕΝΗΜΕΡΩΜΕΝΗΣ ΣΥΓΚΑΤΑΘΕΣΗΣ ΓΙΑ NEWSLETTER</h3>\r\n                <p>\r\n                    για σκοπούς Μarketing<br/><br/>\r\n                    Με την παρούσα δηλώνω τα ακόλουθα αναφορικά με τη διεύθυνση \r\n                    ηλεκτρονικού μου ταχυδρομείου («τα Δεδομένα») που διέθεσα \r\n                    στην Υπεύθυνη Επεξεργασίας εταιρεία με την επωνυμία «Α.ΑΓΓΕΛΕΤΟΥ» \r\n                    με σκοπό να ενημερώνομαι με την λήψη newsletter στο ηλεκτρονικό μου \r\n                    ταχυδρομείο για τα προϊόντα, τις δράσεις και τα νέα της Εταιρείας:\r\n                </p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                Έχοντας ενημερωθεί από την <Link to=\"/Πολιτική-Απορρήτου\">Πολιτική Προστασίας Προσωπικών Δεδομένων</Link>:\r\n                </p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                (α) για τα δικαιώματα μου, όπως αυτά προσδιορίζονται για τα υποκείμενα \r\n                των δεδομένων στις διατάξεις της εθνικής και ευρωπαϊκής νομοθεσίας \r\n                και ειδικότερα του Γενικού Ευρωπαϊκού Κανονισμού 697/2016 σχετικά \r\n                με την προστασία δεδομένων προσωπικού χαρακτήρα \r\n                (και συγκεκριμένα τα δικαιώματα της ενημέρωσης, της πρόσβασης, \r\n                της διόρθωσης, της διαγραφής, του περιορισμού, της φορητότητας \r\n                και της εναντίωσης).\r\n                </p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                (β) ειδικότερα ότι για την τυχόν άσκηση των δικαιωμάτων μου \r\n                αρμόδιο πρόσωπο επικοινωνίας, ορισμένο από την Εταιρεία είναι \r\n                ο Υπεύθυνος Προστασίας Δεδομένων τον οποίο μπορώ να αναζητήσω \r\n                στην ηλεκτρονική διεύθυνση <strong>grandmobile@grandmobile.gr</strong> στον οποίο \r\n                θα απευθύνω τυχόν αίτημά μου για άσκηση κάποιου εκ των δικαιωμάτων μου \r\n                αναφορικά με τα προσωπικά δεδομένα.\r\n                </p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                (γ) πως διατηρώ το δικαίωμα να ανακαλέσω τη συναίνεση που παρέχω \r\n                σήμερα με την παρούσα επιλέγοντας τη σχετική εντολή διαγραφής \r\n                από τη λίστα. \r\n                </p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                (δ) πως τα Δεδομένα τηρούνται από την Εταιρεία και δεν διαβιβάζονται \r\n                παρά στους απολύτως αναγκαίους εκτελούντες την επεξεργασία παρόχους \r\n                υποστήριξης ηλεκτρονικών συστημάτων και δικτύων της Εταιρείας. \r\n                </p>\r\n            </li>\r\n            <li>\r\n                <h3>Ανάκληση συναίνεσης εγγραφής στο newsletter</h3>\r\n                <form className=\"newsletter-desclaimer\" onSubmit={submitHandler}>\r\n                    <label>EMAIL (ΑΠΑΙΤΕΙΤΑΙ)</label>\r\n                    <input type=\"email\" className=\"newsletter-desclaimer-email\" placeholder=\"email\" value={email} onChange={(e)=>setEmail(e.target.value)}></input>\r\n                    <textarea type=\"textarea\" className=\"newsletter-desclaimer-textarea\" placeholder=\"Σχόλια\" value={comments} onChange={(e)=>setComments(e.target.value)}\r\n                    maxLength=\"500\" rows=\"5\"></textarea>\r\n                    <input type=\"submit\" id=\"submit-message\" name=\"submit-message\" value=\"Διαγραφή\"></input>\r\n                </form>                \r\n            </li>\r\n            \r\n        </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsletterDisclaimer;","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ForgottenPassword.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\UpdatePassword.js",["392"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { sendUpdatePassConfirm, updatePass } from '../action/emailActions';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nfunction UpdatePassword(props) {\r\n\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const { email, token } = useParams();\r\n    const updatePassword = useSelector(state => state.updatePassword);\r\n    const { successUpdate, error: updatePassError } = updatePassword;\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        if (successUpdate === true)\r\n            dispatch(sendUpdatePassConfirm(email));\r\n\r\n    }, [successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (newPassword !== confirmPassword) {\r\n            alert(\"Έλεγξτε τον κωδικο\");\r\n        }\r\n        else {\r\n            dispatch(updatePass(email, token, newPassword));\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-form\">\r\n            <Helmet>\r\n                <title>Grand Mobile Accessories-Αλλαγή Κωδικού</title>\r\n                <meta name=\"description\" content=\"Ξεχάσατε τον κωδικό σας; Επαναφέρετε των κωδικό σας έυκολα δημιουργόντας καινούργιο.\" />\r\n                <meta name=\"keywords\" content=\"Κωδικός, password, new, νέος, reset, επαναφορά \" />\r\n            </Helmet>\r\n            <div className=\"reset-form-container\">\r\n                <h3>Αλλαγή Κωδικού</h3>\r\n                {successUpdate === true ? (\r\n                    <div className=\"reset-password-form-sent-wrapper\">\r\n                        <p>\r\n                            Ο κωδικός σας έχει αλλαχθεί.\r\n                </p>\r\n                        <Link to=\"/signin\" className=\"ghost-btn\">\r\n                            Είσοδος\r\n                </Link>\r\n                    </div>\r\n                ) :\r\n                    successUpdate === false ? (\r\n                        <div className=\"reset-password-form-sent-wrapper\">\r\n                            <p>\r\n                                {updatePassError}\r\n                            </p>\r\n                        </div>\r\n                    )\r\n                        : (\r\n                            <div className=\"reset-password-form-wrapper\">\r\n                                <form onSubmit={submitHandler}>\r\n                                    <input type=\"password\"\r\n                                        onChange={(e) => setNewPassword(e.target.value)}\r\n                                        value={newPassword}\r\n                                        placeholder=\"Νέος Κωδικός\"\r\n                                    />\r\n                                    <input type=\"password\"\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                        value={confirmPassword}\r\n                                        placeholder=\"Επιβεβαίωση Κωδικός\"\r\n                                    />\r\n                                    <input type=\"submit\" className=\"button\" value=\"Αλλαγή Κωδικού\"></input>\r\n\r\n                                </form>\r\n                            </div>\r\n                        )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword;","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\AdminListsScreen.js",["393"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getPhoneModels, insertPhoneBrand, insertPhoneModel, listPhoneBrands } from '../action/modelActions';\r\nimport {\r\n    createPaymentMethod, createSendingMethods, deleteManufacturer, deletePaymentMethod,\r\n    deleteSendingMethod, deleteSupplier, editPaymentMethods, editSendingMethods, getCompatibilityModels, getFeatureNames,\r\n    insertCompatibilityCompany, insertCompatibilityModel,\r\n    insertFeatureName, insertFeatureTitle, insertManufacturer,\r\n    insertSupplier,\r\n    listCompatibilityCompanies,\r\n    listFeatureTitles, listManufacturers,\r\n    listPaymentMethodsAdmin, listSendingMethods, listSuppliers\r\n} from '../action/productActions';\r\nimport './AdminListsScreen.css';\r\n\r\nfunction AdminListsScreen(props) {\r\n\r\n    const compatibilityModels = useSelector(state => state.compatibilityModels);\r\n    const { models, loading: loadingCompatibilityModels, error: errorCompatibilityModels } = compatibilityModels;\r\n    const compatibilityCompanies = useSelector(state => state.compatibilityCompanies);\r\n    const { companies, loading: loadingcompatibilityCompanies, error: errorcompatibilityCompanies } = compatibilityCompanies;\r\n    const paymentList = useSelector(state => state.paymentList);\r\n    const { paymentMethods, loading: loadingPaymentMethods, error: errorPaymentMethods } = paymentList;\r\n    const sendingList = useSelector(state => state.sendingList);\r\n    const { sendingMethods, loading: loadingSendingMethods, error: errorSendingMethods } = sendingList;\r\n    const phonesBrandList = useSelector(state => state.phonesBrandList);\r\n    const { phoneBrands, loadingBrand, errorBrand } = phonesBrandList;\r\n    const phoneModelList = useSelector(state => state.phoneModelList);\r\n    const { phoneModels, loadingModel, errorModel } = phoneModelList;\r\n    const manufacturersList = useSelector(state => state.manufacturersList);\r\n    const { manufacturers, loading, error } = manufacturersList;\r\n    const featureTitleList = useSelector(state => state.featureTitleList);\r\n    const { featureTitles, loading: featureTitleLoading, error: featureTitleError } = featureTitleList;\r\n    const featureNameList = useSelector(state => state.featureNameList);\r\n    const { featureNames, loading: featureNamesLoading, error: featureNamesError } = featureNameList;\r\n    const suppliersList = useSelector(state => state.suppliersList);\r\n    const { suppliers, loading: suppliersLoading, error: suppliersError } = suppliersList;\r\n    const [phoneBrandModelModal, setPhoneBrandModelModal] = useState(false);\r\n    const [compatibilityModal, setCompatibilityModal] = useState(false);\r\n    const [supplierModal, setSupplierModal] = useState(false);\r\n    const [newSupplier, setNewSupplier] = useState(\"\")\r\n    const [brandModal, setBrandModal] = useState(false);\r\n    const [newBrand, setNewBrand] = useState(\"\");\r\n    const [phoneBrand, setPhoneBrand] = useState(\"\");\r\n    const [phoneBrandId, setPhoneBrandId] = useState(\"\");\r\n    const [newModel, setNewModel] = useState(\"\");\r\n    const [featureNameModal, setFeatureNameModal] = useState(false);\r\n    const [newManufacturer, setNewManufacturer] = useState(\"\");\r\n    const [featureTitle, setFeatureTitle] = useState(\"\");\r\n    const [featureTitleId, setFeatureTitleId] = useState(\"\");\r\n    const [newFeatureTitle, setNewFeatureTitle] = useState(\"\");\r\n    const [newFeatureName, setNewFeatureName] = useState(\"\");\r\n    const [sendingMethodModal, setSendingMethodModal] = useState(false);\r\n    const [sendingMethodId, setSendingMethodId] = useState('');\r\n    const [sendingMethod, setSendingMethod] = useState('');\r\n    const [sendingMethodCost, setSendingMethodCost] = useState('');\r\n    const [sendingMethodsEditModal, setSendingMethodsEditModal] = useState(false);\r\n    const [newSendingMethod, setNewSendingMethod] = useState('');\r\n    const [newSendingMethodCost, setNewSendingMethodCost] = useState('');\r\n    const [newSendingMethodsCreateModal, setNewSendingMethodsCreateModal] = useState(false);\r\n    const [paymentMethodModal, setPaymentMethodModal] = useState(false);\r\n    const [paymentMethodsEditModal, setPaymentMethodsEditModal] = useState(false);\r\n    const [paymentMethodId, setPaymentMethodId] = useState('');\r\n    const [paymentMethod, setPaymentMethod] = useState('');\r\n    const [paymentMethodCost, setPaymentMethodCost] = useState('');\r\n    const [newPaymentMethod, setNewPaymentMethod] = useState('');\r\n    const [newPaymentMethodCost, setNewPaymentMethodCost] = useState('');\r\n    const [newPaymentMethodsCreateModal, setNewPaymentMethodsCreateModal] = useState(false);\r\n    const [compatibilityCompany, setCompatibilityCompany] = useState('');\r\n    const [compatibilityCompanyId, setCompatibilityCompanyId] = useState('');\r\n    const [newCompatibilityCompany, setNewCompatibilityCompany] = useState('');\r\n    const [newCompatibilityModel, setNewCompatibilityModel] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const insertManufacturerHandler = () => {\r\n        dispatch(insertManufacturer(newManufacturer));\r\n        setNewManufacturer(\"\");\r\n    }\r\n\r\n    const removeManufacturerHandler =(id) =>{\r\n        dispatch(deleteManufacturer(id));\r\n    }\r\n\r\n    const insertSupplierHandler = () => {\r\n        dispatch(insertSupplier(newSupplier));\r\n        setNewSupplier(\"\");\r\n    }\r\n\r\n    const removeSupplierHandler = (id) => {\r\n        dispatch(deleteSupplier(id));\r\n    }\r\n\r\n    const radioChangeHandler = (e) => {\r\n        setPhoneBrand(e.target.value);\r\n        setPhoneBrandId(e.target.id);\r\n        dispatch(getPhoneModels(e.target.id));\r\n    }\r\n\r\n    const featureTitlesChangeHandler = (e) => {\r\n        setFeatureTitle(e.target.value);\r\n        setFeatureTitleId(e.target.id);\r\n        dispatch(getFeatureNames(e.target.id));\r\n    }\r\n\r\n    const insertFeatureTitleHandler = () => {\r\n        dispatch(insertFeatureTitle(newFeatureTitle));\r\n        setNewFeatureTitle(\"\");\r\n    }\r\n\r\n    const insertPhoneBrandHandler = () => {\r\n        dispatch(insertPhoneBrand(newBrand));\r\n        setNewBrand(\"\");\r\n    }\r\n\r\n    const insertPhoneModelHandler = () => {\r\n        dispatch(insertPhoneModel(phoneBrandId, newModel));\r\n        setNewModel(\"\");\r\n    }\r\n\r\n    const insertFeatureNameHandler = () => {\r\n        dispatch(insertFeatureName(featureTitleId, newFeatureName));\r\n        setNewFeatureName(\"\");\r\n    }\r\n\r\n    const sendingMethodModalOkHandler = () => {\r\n        dispatch(editSendingMethods(sendingMethodId, sendingMethod, sendingMethodCost));\r\n        setSendingMethodsEditModal(false);\r\n    }\r\n\r\n    const newSendingMethodModalOkHandler = () => {\r\n        dispatch(createSendingMethods(newSendingMethod, newSendingMethodCost));\r\n        setNewSendingMethodsCreateModal(false);\r\n    }\r\n\r\n    const openSendingMethodsEditModal = (id, method, cost) => {\r\n        setSendingMethodId(id);\r\n        setSendingMethod(method);\r\n        setSendingMethodCost(cost);\r\n        setSendingMethodsEditModal(true);\r\n    }\r\n\r\n    const removeSendingMethod = (id) => {\r\n        dispatch(deleteSendingMethod(id));\r\n    }\r\n\r\n    const radioSendingMethodsHandler = (methodId) => {\r\n        dispatch(listPaymentMethodsAdmin(methodId));\r\n        setSendingMethodId(methodId);\r\n    }\r\n\r\n    const openPaymentMethodsEditModal = (id, method, cost) => {\r\n        setPaymentMethodId(id);\r\n        setPaymentMethod(method);\r\n        setPaymentMethodCost(cost);\r\n        setPaymentMethodsEditModal(true);\r\n    }\r\n\r\n    const paymentMethodEditModalOkHandler = () => {\r\n        dispatch(editPaymentMethods(paymentMethodId, paymentMethod, paymentMethodCost, sendingMethodId));\r\n        setPaymentMethodsEditModal(false);\r\n    }\r\n\r\n    const newPaymentMethodModalOkHandler = () => {\r\n        dispatch(createPaymentMethod(newPaymentMethod, newPaymentMethodCost, sendingMethodId))\r\n        setNewPaymentMethodsCreateModal(false);\r\n    }\r\n\r\n    const removePaymentMethod = (paymentid) => {\r\n        dispatch(deletePaymentMethod(paymentid, sendingMethodId));\r\n    }\r\n\r\n    const compatibilityCompaniesChangeHandler = (e) => {\r\n        setCompatibilityCompany(e.target.value);\r\n        dispatch(getCompatibilityModels(e.target.id));\r\n        setCompatibilityCompanyId(e.target.id);\r\n    }\r\n\r\n    const insertCompatibilityCompanyHandler = () => {\r\n        dispatch(insertCompatibilityCompany(newCompatibilityCompany));\r\n        setNewCompatibilityCompany(\"\");\r\n    }\r\n\r\n    const insertCompatibilityModelHandler = () => {\r\n        dispatch(insertCompatibilityModel(compatibilityCompanyId, newCompatibilityModel));\r\n        setNewCompatibilityModel('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listPhoneBrands());\r\n        dispatch(listFeatureTitles());\r\n        dispatch(listManufacturers());\r\n        dispatch(listSendingMethods());\r\n        dispatch(listCompatibilityCompanies());\r\n        dispatch(listSuppliers());\r\n        return () => {\r\n\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <ul className=\"breadcrumb\">\r\n                    <li><Link to=\"/\">Αρχική</Link></li>\r\n                    <li>Λίστες</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"color-wrapper\">\r\n                <div className=\"card-list-header\" onClick={() => setPhoneBrandModelModal(!phoneBrandModelModal)}>\r\n                    <h4 className=\"expand\">Εταιρίες Τηλεφώνων & Μοντέλα</h4>\r\n                    <i className=\"material-icons expand\">{!phoneBrandModelModal ? \"expand_more\" : \"expand_less\"}</i>\r\n                </div>\r\n                {phoneBrandModelModal &&\r\n                    <div className=\"color-info \">\r\n                        <div>\r\n                            <label className=\"header-label\">Εταιρίες Τηλεφώνων</label>\r\n                            <div className=\"auto-scroll\">\r\n                                {loadingBrand ? <div>Loading...</div> :\r\n                                    errorBrand ? <div>{errorBrand}</div> :\r\n                                        phoneBrands.map(phonesBrand =>\r\n                                            <div className=\"radiobutton\" key={phonesBrand.phone_brand_id}>\r\n                                                <input type=\"radio\" id={phonesBrand.phone_brand_id} name=\"phoneBrands\"\r\n                                                    value={phonesBrand.brand} onChange={(e) => radioChangeHandler(e)}></input>\r\n                                                <label htmlFor={phonesBrand.phone_brand_id}>{phonesBrand.brand}</label>\r\n                                            </div>\r\n                                        )}\r\n                            </div>\r\n                            <div>\r\n                                <label>Νέα Εταιρία: </label>\r\n                                <input type=\"text\" value={newBrand} onChange={(e) => setNewBrand(e.target.value)} />\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"button continuebtn justify-right\" onClick={insertPhoneBrandHandler} disabled={newBrand === \"\"}>Προσθήκη Εταιρίας</button>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"header-label\">Μοντέλα {phoneBrand}</label>\r\n                            {phoneModels &&\r\n                                <ul className=\"auto-scroll\">\r\n                                    {loadingModel ? <div>Loading...</div> :\r\n                                        errorModel ? <div>{errorModel}</div> :\r\n                                            phoneModels.map(phoneModel =>\r\n                                                <li>{phoneModel.model}</li>)}\r\n                                </ul>}\r\n                            {phoneBrand && <div>\r\n                                <div>\r\n                                    <label>Νέο Μοντέλο</label>\r\n                                    <input type=\"text\" value={newModel} onChange={(e) => setNewModel(e.target.value)} />\r\n                                </div>\r\n                                <div>\r\n                                    <button className=\"button continuebtn justify-right\" onClick={insertPhoneModelHandler} disabled={newModel === \"\"}>Προσθήκη Μοντέλου</button>\r\n                                </div>\r\n                            </div>}\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n            <div className=\"color-wrapper\">\r\n                <div className=\"card-list-header\" onClick={() => setSendingMethodModal(!sendingMethodModal)}>\r\n                    <h4 className=\"expand\">Τρόποι Αποστολής & Κόστος</h4>\r\n                    <i className=\"material-icons expand\">{!sendingMethodModal ? \"expand_more\" : \"expand_less\"}</i>\r\n                </div>\r\n                {sendingMethodModal &&\r\n                    <div className=\"color-info \">\r\n                        <div>\r\n                            <label className=\"header-label\">Τρόποι Αποστολής</label>\r\n                            <div className=\"auto-scroll\">\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Τρόπος Αποστολής</th>\r\n                                            <th>Κόστος</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {loadingSendingMethods ? <div>Loading...</div> :\r\n                                            errorSendingMethods ? <div>{errorSendingMethods}</div> :\r\n                                                sendingMethods.map(send =>\r\n                                                    <tr key={send.sendingMethod_id}>\r\n                                                        <td>{send.sendingMethod}</td>\r\n                                                        <td>{send.sendingMethodCost} €</td>\r\n                                                        <td><button className=\"button radio-edit-button\" onClick={() => openSendingMethodsEditModal(send.sendingMethod_id, send.sendingMethod, send.sendingMethodCost)}>Επεξεργασία</button></td>\r\n                                                        <td><button className=\"button radio-edit-button\" onClick={() => removeSendingMethod(send.sendingMethod_id)}>Διαγραφή</button></td>\r\n                                                    </tr>\r\n                                                )}\r\n                                    </tbody>\r\n                                </table>\r\n                                <div id=\"sendingMethodsEditModal\" className=\"modal\" style={{ display: sendingMethodsEditModal ? \"block\" : \"none\" }}>\r\n                                    <div className=\"modal-content\">\r\n                                        <div className=\"modalHeader\">\r\n                                            <h2>Επεξεργασία Τρόπου Αποστολής</h2>\r\n                                        </div>\r\n                                        <ul>\r\n                                            <li>\r\n                                                <label>Τρόπος Αποστολής:</label>\r\n                                                <input value={sendingMethod} onChange={(e) => setSendingMethod(e.target.value)}></input>\r\n                                            </li>\r\n                                            <li>\r\n                                                <label>Κόστος Αποστολής:</label>\r\n                                                <input value={sendingMethodCost} onChange={(e) => setSendingMethodCost(e.target.value)}></input>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <div className=\"okCancelButton-wrapper\">\r\n                                            <button className=\"okCancelButton button\" onClick={sendingMethodModalOkHandler} disabled={sendingMethod === \"\" || sendingMethodCost === \"\"}>OK</button>\r\n                                            <button className=\"okCancelButton button\" onClick={() => setSendingMethodsEditModal(false)}>Ακύρωση</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div id=\"newSendingMethodsEditModal\" className=\"modal\" style={{ display: newSendingMethodsCreateModal ? \"block\" : \"none\" }}>\r\n                                    <div className=\"modal-content\">\r\n                                        <div className=\"modalHeader\">\r\n                                            <h2>Δημιουργία Τρόπου Αποστολής</h2>\r\n                                        </div>\r\n                                        <ul>\r\n                                            <li>\r\n                                                <label>Τρόπος Αποστολής:</label>\r\n                                                <input value={newSendingMethod} onChange={(e) => setNewSendingMethod(e.target.value)}></input>\r\n                                            </li>\r\n                                            <li>\r\n                                                <label>Κόστος Αποστολής:</label>\r\n                                                <input value={newSendingMethodCost} onChange={(e) => setNewSendingMethodCost(e.target.value)}></input>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <div className=\"okCancelButton-wrapper\">\r\n                                            <button className=\"okCancelButton button\" onClick={newSendingMethodModalOkHandler} disabled={newSendingMethod === \"\" || newSendingMethodCost === \"\"}>OK</button>\r\n                                            <button className=\"okCancelButton button\" onClick={() => setNewSendingMethodsCreateModal(false)}>Ακύρωση</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"button continuebtn justify-right\" onClick={() => setNewSendingMethodsCreateModal(true)}>Νέος Τρόπος Αποστολής</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n            <div className=\"color-wrapper\">\r\n                <div className=\"card-list-header\" onClick={() => setPaymentMethodModal(!paymentMethodModal)}>\r\n                    <h4 className=\"expand\">Τρόποι Πληρωμής & Κόστος</h4>\r\n                    <i className=\"material-icons expand\">{!paymentMethodModal ? \"expand_more\" : \"expand_less\"}</i>\r\n                </div>\r\n                {paymentMethodModal &&\r\n                    <div className=\"color-info \">\r\n                        <div style={{ flexGrow: 1 }}>\r\n                            <label className=\"header-label\">Τρόποι Αποστολής</label>\r\n                            <div className=\"auto-scroll\">\r\n                                {loadingSendingMethods ? <div>Loading...</div> :\r\n                                    errorSendingMethods ? <div>{errorSendingMethods}</div> :\r\n                                        sendingMethods.map(send =>\r\n                                            <div className=\"radiobutton\" key={send.sendingMethod_id}>\r\n                                                <input type=\"radio\" id={send.sendingMethod_id} name=\"payment-methods-radio\"\r\n                                                    value={send.sendingMethod} onChange={(e) => radioSendingMethodsHandler(send.sendingMethod_id)}></input>\r\n                                                <label htmlFor={send.sendingMethod_id}>{send.sendingMethod}</label>\r\n                                            </div>\r\n                                        )}\r\n                                <div id=\"sendingMethodsEditModal\" className=\"modal\" style={{ display: sendingMethodsEditModal ? \"block\" : \"none\" }}>\r\n                                    <div className=\"modal-content\">\r\n                                        <div className=\"modalHeader\">\r\n                                            <h2>Επεξεργασία Τρόπου Αποστολής</h2>\r\n                                        </div>\r\n                                        <ul>\r\n                                            <li>\r\n                                                <label>Τρόπος Αποστολής:</label>\r\n                                                <input value={sendingMethod} onChange={(e) => setSendingMethod(e.target.value)}></input>\r\n                                            </li>\r\n                                            <li>\r\n                                                <label>Κόστος Αποστολής:</label>\r\n                                                <input value={sendingMethodCost} onChange={(e) => setSendingMethodCost(e.target.value)}></input>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <div className=\"okCancelButton-wrapper\">\r\n                                            <button className=\"okCancelButton button\" onClick={sendingMethodModalOkHandler} disabled={sendingMethod === \"\" || sendingMethodCost === \"\"}>OK</button>\r\n                                            <button className=\"okCancelButton button\" onClick={() => setSendingMethodsEditModal(false)}>Ακύρωση</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div id=\"newSendingMethodsEditModal\" className=\"modal\" style={{ display: newSendingMethodsCreateModal ? \"block\" : \"none\" }}>\r\n                                    <div className=\"modal-content\">\r\n                                        <div className=\"modalHeader\">\r\n                                            <h2>Δημιουργία Τρόπου Αποστολής</h2>\r\n                                        </div>\r\n                                        <ul>\r\n                                            <li>\r\n                                                <label>Τρόπος Αποστολής:</label>\r\n                                                <input value={newSendingMethod} onChange={(e) => setNewSendingMethod(e.target.value)}></input>\r\n                                            </li>\r\n                                            <li>\r\n                                                <label>Κόστος Αποστολής:</label>\r\n                                                <input value={newSendingMethodCost} onChange={(e) => setNewSendingMethodCost(e.target.value)}></input>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <div className=\"okCancelButton-wrapper\">\r\n                                            <button className=\"okCancelButton button\" onClick={newSendingMethodModalOkHandler} disabled={newSendingMethod === \"\" || newSendingMethodCost === \"\"}>OK</button>\r\n                                            <button className=\"okCancelButton button\" onClick={() => setNewSendingMethodsCreateModal(false)}>Ακύρωση</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ flexGrow: 2 }}>\r\n                            <label className=\"header-label\">Τρόποι Πληρωμής</label>\r\n                            <div className=\"auto-scroll\">\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Τρόπος Πληρωμής</th>\r\n                                            <th>Κόστος</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {loadingPaymentMethods ? <div>Loading...</div> :\r\n                                            errorPaymentMethods ? <div>{errorPaymentMethods}</div> :\r\n                                                paymentMethods.map(pay =>\r\n                                                    <tr key={pay.paymentMethod_id}>\r\n                                                        <td>{pay.paymentMethod}</td>\r\n                                                        <td>{pay.paymentMethodCost} €</td>\r\n                                                        <td><button className=\"button radio-edit-button\" onClick={() => openPaymentMethodsEditModal(pay.paymentMethod_id, pay.paymentMethod, pay.paymentMethodCost)}>Επεξεργασία</button></td>\r\n                                                        <td><button className=\"button radio-edit-button\" onClick={() => removePaymentMethod(pay.paymentMethod_id)}>Διαγραφή</button></td>\r\n                                                    </tr>\r\n                                                )}\r\n                                    </tbody>\r\n                                </table>\r\n                                <div id=\"paymentMethodsEditModal\" className=\"modal\" style={{ display: paymentMethodsEditModal ? \"block\" : \"none\" }}>\r\n                                    <div className=\"modal-content\">\r\n                                        <div className=\"modalHeader\">\r\n                                            <h2>Επεξεργασία Τρόπου Πληρωμής</h2>\r\n                                        </div>\r\n                                        <ul>\r\n                                            <li>\r\n                                                <label>Τρόπος Πληρωμής:</label>\r\n                                                <input value={paymentMethod} onChange={(e) => setPaymentMethod(e.target.value)}></input>\r\n                                            </li>\r\n                                            <li>\r\n                                                <label>Κόστος Αποστολής:</label>\r\n                                                <input value={paymentMethodCost} onChange={(e) => setPaymentMethodCost(e.target.value)}></input>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <div className=\"okCancelButton-wrapper\">\r\n                                            <button className=\"okCancelButton button\" onClick={paymentMethodEditModalOkHandler} disabled={paymentMethod === \"\" || paymentMethodCost === \"\"}>OK</button>\r\n                                            <button className=\"okCancelButton button\" onClick={() => setPaymentMethodsEditModal(false)}>Ακύρωση</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div id=\"newSendingMethodsEditModal\" className=\"modal\" style={{ display: newPaymentMethodsCreateModal ? \"block\" : \"none\" }}>\r\n                                    <div className=\"modal-content\">\r\n                                        <div className=\"modalHeader\">\r\n                                            <h2>Δημιουργία Τρόπου Πληρωμής</h2>\r\n                                        </div>\r\n                                        <ul>\r\n                                            <li>\r\n                                                <label>Τρόπος Πληρωμής:</label>\r\n                                                <input value={newPaymentMethod} onChange={(e) => setNewPaymentMethod(e.target.value)}></input>\r\n                                            </li>\r\n                                            <li>\r\n                                                <label>Κόστος Πληρωμής:</label>\r\n                                                <input value={newPaymentMethodCost} onChange={(e) => setNewPaymentMethodCost(e.target.value)}></input>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <div className=\"okCancelButton-wrapper\">\r\n                                            <button className=\"okCancelButton button\" onClick={newPaymentMethodModalOkHandler} disabled={newPaymentMethod === \"\" || newPaymentMethodCost === \"\"}>OK</button>\r\n                                            <button className=\"okCancelButton button\" onClick={() => setNewPaymentMethodsCreateModal(false)}>Ακύρωση</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"button continuebtn justify-right\" onClick={() => setNewPaymentMethodsCreateModal(true)} disabled={sendingMethodId === \"\"}>Νέος Τρόπος Πληρωμής</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n\r\n            </div>\r\n            <div className=\"color-wrapper\">\r\n                <div className=\"card-list-header\" onClick={() => setSupplierModal(!supplierModal)}>\r\n                    <h4 className=\"expand\">Προμηθευτές</h4>\r\n                    <i className=\"material-icons expand\">{!supplierModal ? \"expand_more\" : \"expand_less\"}</i>\r\n                </div>\r\n                {supplierModal &&\r\n                    <div className=\"color-info\">\r\n                        <div className=\"auto-scroll\">\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Προμηθευτές</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {suppliersLoading ? <div>Loading...</div> :\r\n                                        suppliersError ? <div>{suppliersError}</div> :\r\n                                            suppliers.map(sup =>\r\n                                                <tr key={sup.supplier_id}>\r\n                                                    <td>{sup.supplier}</td>\r\n                                                    <td><button className=\"button radio-edit-button\" onClick={() => removeSupplierHandler(sup.supplier_id)}>Διαγραφή</button></td>\r\n                                                </tr>)}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"header-label\">Νέος Προμηθευτής</label>\r\n                            <input type=\"text\" value={newSupplier} onChange={(e) => setNewSupplier(e.target.value)} />\r\n                            <button className=\"button continuebtn\" onClick={insertSupplierHandler} disabled={newSupplier === \"\"}>Προσθήκη Προμηθευτής</button>\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n\r\n            <div className=\"color-wrapper\">\r\n                <div className=\"card-list-header\" onClick={() => setBrandModal(!brandModal)}>\r\n                    <h4 className=\"expand\">Κατασκευαστές</h4>\r\n                    <i className=\"material-icons expand\">{!brandModal ? \"expand_more\" : \"expand_less\"}</i>\r\n                </div>\r\n                {brandModal &&\r\n                    <div className=\"color-info\">\r\n                        <div className=\"auto-scroll\">\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Κατασκευαστές</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {loading ? <div>Loading...</div> :\r\n                                        error ? <div>{error}</div> :\r\n                                            manufacturers.map(manufacturer =>\r\n                                                <tr key={manufacturer.manufacturer_id}>\r\n                                                    <td>{manufacturer.name}</td>\r\n                                                    <td><button className=\"button radio-edit-button\" onClick={() => removeManufacturerHandler(manufacturer.manufacturer_id)}>Διαγραφή</button></td>\r\n                                                </tr>)}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"header-label\">Νέος Κατασκευαστής</label>\r\n                            <input type=\"text\" value={newManufacturer} onChange={(e) => setNewManufacturer(e.target.value)} />\r\n                            <button className=\"button continuebtn\" onClick={insertManufacturerHandler} disabled={newManufacturer === \"\"}>Προσθήκη Κατασκευαστή</button>\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n            <div className=\"color-wrapper\">\r\n                <div className=\"card-list-header\" onClick={() => setFeatureNameModal(!featureNameModal)}>\r\n                    <h4 className=\"expand\">Χαρακτηριστικά</h4>\r\n                    <i className=\"material-icons expand\">{!featureNameModal ? \"expand_more\" : \"expand_less\"}</i>\r\n                </div>\r\n                {featureNameModal &&\r\n                    <div className=\"color-info \">\r\n                        <div>\r\n                            <label className=\"header-label\">Τίτλος Χαρακτηριστικού</label>\r\n                            <div className=\"auto-scroll\">\r\n                                {featureTitleLoading ? <div>Loading...</div> :\r\n                                    featureTitleError ? <div>{featureTitleError}</div> :\r\n                                        featureTitles.map(featureTitle =>\r\n                                            <div className=\"radiobutton\" key={featureTitle.feature_title_id}>\r\n                                                <input type=\"radio\" id={featureTitle.feature_title_id} name=\"featureTitles\"\r\n                                                    value={featureTitle.feature_title} onChange={(e) => featureTitlesChangeHandler(e)}></input>\r\n                                                <label htmlFor={featureTitle.feature_title_id}>{featureTitle.feature_title}</label>\r\n                                            </div>\r\n                                        )}\r\n                            </div>\r\n                            <div>\r\n                                <label>Νέος Τίτλος: </label>\r\n                                <input type=\"text\" value={newFeatureTitle} onChange={(e) => setNewFeatureTitle(e.target.value)} />\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"button continuebtn justify-right\" onClick={insertFeatureTitleHandler} disabled={newFeatureTitle === \"\"}>Προσθήκη Τίτλου</button>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"header-label\">Χαρακτηριστικό {featureTitle}</label>\r\n                            {featureNames &&\r\n                                <ul className=\"auto-scroll\">\r\n                                    {featureNamesLoading ? <div>Loading...</div> :\r\n                                        featureNamesError ? <div>{featureNamesError}</div> :\r\n                                            featureNames.map(featureName =>\r\n                                                <li>{featureName.feature_name}</li>)}\r\n                                </ul>}\r\n                            {featureTitle && <div>\r\n                                <div>\r\n                                    <label>Νέο Χαρακτ.</label>\r\n                                    <input type=\"text\" value={newFeatureName} onChange={(e) => setNewFeatureName(e.target.value)} />\r\n                                </div>\r\n                                <div>\r\n                                    <button className=\"button continuebtn justify-right\" onClick={insertFeatureNameHandler} disabled={newFeatureName === \"\"}>Προσθήκη Χαρακτηριστικού</button>\r\n                                </div>\r\n                            </div>}\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n            <div className=\"color-wrapper\">\r\n                <div className=\"card-list-header\" onClick={() => setCompatibilityModal(!compatibilityModal)}>\r\n                    <h4 className=\"expand\">Συμβατότητα</h4>\r\n                    <i className=\"material-icons expand\">{!compatibilityModal ? \"expand_more\" : \"expand_less\"}</i>\r\n                </div>\r\n                {compatibilityModal &&\r\n                    <div className=\"color-info \">\r\n                        <div>\r\n                            <label className=\"header-label\">Εταιρία</label>\r\n                            <div className=\"auto-scroll\">\r\n                                {loadingcompatibilityCompanies ? <div>Loading...</div> :\r\n                                    errorcompatibilityCompanies ? <div>{errorcompatibilityCompanies}</div> :\r\n                                        companies.map(comp =>\r\n                                            <div className=\"radiobutton\" key={comp.compatibility_company_id}>\r\n                                                <input type=\"radio\" id={comp.compatibility_company_id} name=\"compatibilityCompanies\"\r\n                                                    value={comp.company} onChange={(e) => compatibilityCompaniesChangeHandler(e)}></input>\r\n                                                <label htmlFor={comp.compatibility_company_id}>{comp.company}</label>\r\n                                            </div>\r\n                                        )}\r\n                            </div>\r\n                            <div>\r\n                                <label>Νέα Εταιρία: </label>\r\n                                <input type=\"text\" value={newCompatibilityCompany} onChange={(e) => setNewCompatibilityCompany(e.target.value)} />\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"button continuebtn justify-right\" onClick={insertCompatibilityCompanyHandler} disabled={newCompatibilityCompany === \"\"}>Προσθήκη Εταιρίας</button>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"header-label\">Μοντέλο {compatibilityCompany}</label>\r\n                            {models &&\r\n                                <ul className=\"auto-scroll\">\r\n                                    {loadingCompatibilityModels ? <div>Loading...</div> :\r\n                                        errorCompatibilityModels ? <div>{errorCompatibilityModels}</div> :\r\n                                            models.map(mod =>\r\n                                                <li>{mod.model}</li>)}\r\n                                </ul>}\r\n                            {compatibilityCompany && <div>\r\n                                <div>\r\n                                    <label>Νέο Μοντέλο</label>\r\n                                    <input type=\"text\" value={newCompatibilityModel} onChange={(e) => setNewCompatibilityModel(e.target.value)} />\r\n                                </div>\r\n                                <div>\r\n                                    <button className=\"button continuebtn justify-right\" onClick={insertCompatibilityModelHandler} disabled={newCompatibilityModel === \"\"}>Προσθήκη Μοντέλου</button>\r\n                                </div>\r\n                            </div>}\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AdminListsScreen;","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ReturnPolicy.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\CustomerOrdersScreen.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\CustomerOrderDetails.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\ConditionsOfUse.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\screens\\SendingMethodsScreen.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\menu\\MobileMenu.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\editorReducer.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\menuReducer.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\wishListReducer.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\modelReducer.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\userReducer.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\orderReducer.js",["394"],"import {  } from \"../constants/userConstants\";\r\nimport { ORDER_ADD_REQUEST, ORDER_ADD_SUCCESS, ORDER_ADD_FAIL, ORDER_LIST_REQUEST, \r\n    ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DETAIL_REQUEST, ORDER_DETAIL_SUCCESS, \r\n    ORDER_DETAIL_FAIL, ORDER_CHANGE_STATUS_REQUEST, ORDER_CHANGE_STATUS_SUCCESS, \r\n    ORDER_CHANGE_STATUS_FAIL, ORDER_UPDATE_STATUS_FAIL, ORDER_UPDATE_STATUS_SUCCESS, \r\n    ORDER_UPDATE_STATUS_REQUEST, ORDER_DETAILS_CHANGE_REQUEST, \r\n    ORDER_DETAILS_CHANGE_SUCCESS, ORDER_DETAILS_CHANGE_FAIL, \r\n    ORDER_CHARGER_ADDRESS_UPDATE_REQUEST, ORDER_CHARGER_ADDRESS_UPDATE_SUCCESS, \r\n    ORDER_CHARGER_ADDRESS_UPDATE_FAIL, ORDER_SHIPPING_ADDRESS_UPDATE_REQUEST, \r\n    ORDER_SHIPPING_ADDRESS_UPDATE_SUCCESS, ORDER_SHIPPING_ADDRESS_UPDATE_FAIL, \r\n    ORDER_UPDATE_REQUEST, ORDER_UPDATE_SUCCESS, ORDER_UPDATE_FAIL, \r\n    ORDER_DELETED_ITEM_REQUEST, ORDER_DELETED_ITEM_SUCCESS, ORDER_DELETED_ITEM_FAIL, CUSTOMER_ORDER_LIST_REQUEST, CUSTOMER_ORDER_LIST_SUCCESS, CUSTOMER_ORDER_LIST_FAIL, CUSTOMER_ORDER_DETAIL_REQUEST, CUSTOMER_ORDER_DETAIL_SUCCESS, CUSTOMER_ORDER_DETAIL_FAIL} from \"../constants/orderConstrains\";\r\n\r\n\r\nfunction orderReducer (state={orderId:''}, action){\r\n    switch(action.type){\r\n        case ORDER_ADD_REQUEST:\r\n            return {loading:true};\r\n        case ORDER_ADD_SUCCESS:\r\n            return {loading:false, successOrdering:true, orderId:action.payload.data};\r\n        case ORDER_ADD_FAIL:\r\n            return {loading:false, error : action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction orderListReducer(state = { orders: [], searchItems:[],  }, action) {\r\n    switch (action.type) {\r\n      case ORDER_LIST_REQUEST:\r\n        return { loading: true };\r\n      case ORDER_LIST_SUCCESS:\r\n        return { loading: false, orders: action.payload };\r\n      case ORDER_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default: return state;\r\n    }\r\n}\r\n\r\nfunction orderDetailsReducer(state={ order :{}, charger: {}, shippingTo: {}, products: [] }, action){\r\n  switch(action.type){\r\n      case ORDER_DETAIL_REQUEST:\r\n          return {loading:true};\r\n      case ORDER_DETAIL_SUCCESS:\r\n          return {loading:false, success:true, order : action.payload.order, charger:action.payload.billingAddress,\r\n             shippingTo:action.payload.shippingAddress, products: action.payload.products};\r\n      case ORDER_DETAIL_FAIL:\r\n          return {loading:false, error : action.payload};\r\n        case ORDER_DETAILS_CHANGE_REQUEST:\r\n            return {loading:true};\r\n        case ORDER_DETAILS_CHANGE_SUCCESS:console.log(action.payload.data)\r\n            return {loading:false, success: true, ...state, charger:{...state.charger},shippingTo:{...state}, order: action.payload.data};\r\n        case ORDER_DETAILS_CHANGE_FAIL:\r\n            return {loading:false, error : action.payload};\r\n        case ORDER_CHARGER_ADDRESS_UPDATE_REQUEST:\r\n            return {loading:true};\r\n        case ORDER_CHARGER_ADDRESS_UPDATE_SUCCESS:\r\n            return {loading:false, success: true, order: state.order.map(x=>(x.order_id===action.payload.orderId)?(x.paymentType=action.payload.paymentType): x),\r\n            charger: state.charger.map(x=>(x.afm=action.payload.charger.afm,x.companyName=action.payload.charger.companyName,\r\n                x.bussiness=action.payload.charger.bussiness,x.doy=action.payload.charger.doy,\r\n                x.name=action.payload.charger.name,x.subname=action.payload.charger.subname,\r\n                x.country=action.payload.charger.country,x.district=action.payload.charger.district,\r\n                x.city=action.payload.charger.city,x.street=action.payload.charger.street,\r\n                x.postalCode=action.payload.charger.postalCode,x.phoneNumber=action.payload.charger.phoneNumber,\r\n                x.comments=action.payload.charger.comments))};\r\n        case ORDER_CHARGER_ADDRESS_UPDATE_FAIL:\r\n            return {loading:false, error : action.payload};\r\n        case ORDER_SHIPPING_ADDRESS_UPDATE_REQUEST:\r\n            return {loading:true};\r\n        case ORDER_SHIPPING_ADDRESS_UPDATE_SUCCESS:\r\n            return {loading:false, success: true, ...state, charger:{...state.charger},order:{...state.order}, shippingTo: action.payload.data};\r\n        case ORDER_SHIPPING_ADDRESS_UPDATE_FAIL:\r\n            return {loading:false, error : action.payload};\r\n      default:\r\n          return state;\r\n  }\r\n}\r\n\r\nfunction changeOrderStatusReducer (state={}, action){\r\n  switch(action.type){\r\n      case ORDER_CHANGE_STATUS_REQUEST:\r\n          return {loading:true};\r\n      case ORDER_CHANGE_STATUS_SUCCESS:\r\n          return {loading:false, successChangeStatus:true, payload: []};\r\n      case ORDER_CHANGE_STATUS_FAIL:\r\n          return {loading:false, error : action.payload};\r\n      default:\r\n          return state;\r\n  }\r\n}\r\n\r\nfunction updateOrderStatusReducer (state={}, action){\r\n    switch(action.type){\r\n        case ORDER_UPDATE_STATUS_REQUEST:\r\n            return {loading:true};\r\n        case ORDER_UPDATE_STATUS_SUCCESS:\r\n            return {loading:false, success: true, payload: []};\r\n        case ORDER_UPDATE_STATUS_FAIL:\r\n            return {loading:false, error : action.payload};\r\n        default:\r\n            return state;\r\n}\r\n}\r\n\r\nfunction updateOrderReducer (state={}, action){\r\n    switch(action.type){\r\n        case ORDER_UPDATE_REQUEST:\r\n            return {loading:true};\r\n        case ORDER_UPDATE_SUCCESS:\r\n            return {loading:false, success: true, payload: []};\r\n        case ORDER_UPDATE_FAIL:\r\n            return {loading:false, error : action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction deleteOrderItemReducer (state={}, action){\r\n    switch(action.type){\r\n        case ORDER_DELETED_ITEM_REQUEST:\r\n            return {loading:true};\r\n        case ORDER_DELETED_ITEM_SUCCESS:\r\n            return {loading:false, success: true, payload: []};\r\n        case ORDER_DELETED_ITEM_FAIL:\r\n            return {loading:false, error : action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction customerOrderListReducer (state={orders:[]}, action){\r\n    switch(action.type){\r\n        case CUSTOMER_ORDER_LIST_REQUEST:\r\n            return {loading:true};\r\n        case CUSTOMER_ORDER_LIST_SUCCESS:\r\n            return {loading:false, orders: action.payload};\r\n        case CUSTOMER_ORDER_LIST_FAIL:\r\n            return {loading:false, error : action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction customerOrderDetailsReducer(state={ order :{}, charger: {}, shippingTo: {}, products: [] }, action){\r\n    switch(action.type){\r\n        case CUSTOMER_ORDER_DETAIL_REQUEST:\r\n            return {loading:true};\r\n        case CUSTOMER_ORDER_DETAIL_SUCCESS:\r\n            return {loading:false, success:true, order : action.payload.order, charger:action.payload.billingAddress,\r\n               shippingTo:action.payload.shippingAddress, products: action.payload.products};\r\n        case CUSTOMER_ORDER_DETAIL_FAIL:\r\n            return {loading:false, error : action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n  }\r\n\r\n\r\nexport {orderReducer, orderListReducer, orderDetailsReducer,\r\n     changeOrderStatusReducer, updateOrderStatusReducer,\r\n      deleteOrderItemReducer, updateOrderReducer, customerOrderListReducer, \r\n      customerOrderDetailsReducer}","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\collectionReducer.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\paymentReducer.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\reducers\\emailReducer.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\LoadingSpinner.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\collectionActions.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\modelActions.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\CarouselCard.js",["395"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CarouselCard.css';\r\n\r\nfunction CarouselCard (props){\r\n    return (  \r\n        <div className=\"carousel-card\">\r\n            <div className=\"carousel-card-container\">\r\n                <div className=\"carousel-card-image-container\">\r\n                    <img className=\"carousel-card-image\" src={props.src} alt={props.alt}/>\r\n                </div>\r\n                <div className=\"carousel-card-name-price\">\r\n                    <div className=\"carousel-card-name\">{props.productName.length>34?props.productName.slice(0,34)+\"...\":props.productName}</div>\r\n                    <div className=\"carousel-card-price\">{props.price.toFixed(2)} €</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CarouselCard;","C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\product.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\menuActions.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\menu\\ProfileMenu.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\ProductCategories.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\CategoriesContainer.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\emailActions.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\cartActions.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\userActions.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\MapContainer.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\editorConstants.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\orderActions.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\productActions.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\wishListConstants.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\modelConstants.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\emailConstants.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\paymentConstants.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\collectionConstants.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\productConstant.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\orderConstrains.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\constants\\menuConstants.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\wishListActions.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\action\\paymentActions.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\FilterContainer.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\menu\\ProductMenu.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\routes\\Routes.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\data\\data.js",[],"C:\\Users\\Giorgos\\projects\\reactApp\\grand\\frontend\\src\\components\\MyCarousel.js",[],{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","replacedBy":"399"},{"ruleId":"400","severity":1,"message":"401","line":27,"column":8,"nodeType":"402","endLine":27,"endColumn":10,"suggestions":"403"},{"ruleId":"400","severity":1,"message":"401","line":37,"column":8,"nodeType":"402","endLine":37,"endColumn":21,"suggestions":"404"},{"ruleId":"405","severity":1,"message":"406","line":8,"column":10,"nodeType":"407","messageId":"408","endLine":8,"endColumn":24},{"ruleId":"400","severity":1,"message":"409","line":35,"column":8,"nodeType":"402","endLine":35,"endColumn":23,"suggestions":"410"},{"ruleId":"400","severity":1,"message":"411","line":64,"column":8,"nodeType":"402","endLine":64,"endColumn":47,"suggestions":"412"},{"ruleId":"400","severity":1,"message":"413","line":29,"column":7,"nodeType":"402","endLine":29,"endColumn":16,"suggestions":"414"},{"ruleId":"400","severity":1,"message":"415","line":40,"column":7,"nodeType":"402","endLine":40,"endColumn":18,"suggestions":"416"},{"ruleId":"400","severity":1,"message":"401","line":47,"column":7,"nodeType":"402","endLine":47,"endColumn":9,"suggestions":"417"},{"ruleId":"400","severity":1,"message":"415","line":27,"column":8,"nodeType":"402","endLine":27,"endColumn":28,"suggestions":"418"},{"ruleId":"400","severity":1,"message":"419","line":82,"column":7,"nodeType":"402","endLine":82,"endColumn":24,"suggestions":"420"},{"ruleId":"400","severity":1,"message":"421","line":98,"column":7,"nodeType":"402","endLine":98,"endColumn":23,"suggestions":"422"},{"ruleId":"400","severity":1,"message":"409","line":77,"column":7,"nodeType":"402","endLine":77,"endColumn":24,"suggestions":"423"},{"ruleId":"400","severity":1,"message":"421","line":91,"column":7,"nodeType":"402","endLine":91,"endColumn":23,"suggestions":"424"},{"ruleId":"405","severity":1,"message":"425","line":31,"column":12,"nodeType":"407","messageId":"408","endLine":31,"endColumn":34},{"ruleId":"405","severity":1,"message":"426","line":33,"column":26,"nodeType":"407","messageId":"408","endLine":33,"endColumn":41},{"ruleId":"400","severity":1,"message":"401","line":69,"column":8,"nodeType":"402","endLine":69,"endColumn":10,"suggestions":"427"},{"ruleId":"400","severity":1,"message":"428","line":73,"column":8,"nodeType":"402","endLine":73,"endColumn":16,"suggestions":"429"},{"ruleId":"400","severity":1,"message":"430","line":87,"column":8,"nodeType":"402","endLine":87,"endColumn":21,"suggestions":"431"},{"ruleId":"400","severity":1,"message":"428","line":97,"column":8,"nodeType":"402","endLine":97,"endColumn":33,"suggestions":"432"},{"ruleId":"400","severity":1,"message":"433","line":109,"column":8,"nodeType":"402","endLine":109,"endColumn":18,"suggestions":"434"},{"ruleId":"400","severity":1,"message":"435","line":121,"column":8,"nodeType":"402","endLine":121,"endColumn":21,"suggestions":"436"},{"ruleId":"400","severity":1,"message":"437","line":62,"column":8,"nodeType":"402","endLine":62,"endColumn":17,"suggestions":"438"},{"ruleId":"400","severity":1,"message":"411","line":72,"column":8,"nodeType":"402","endLine":72,"endColumn":41,"suggestions":"439"},{"ruleId":"400","severity":1,"message":"440","line":82,"column":8,"nodeType":"402","endLine":82,"endColumn":21,"suggestions":"441"},{"ruleId":"400","severity":1,"message":"401","line":98,"column":8,"nodeType":"402","endLine":98,"endColumn":31,"suggestions":"442"},{"ruleId":"400","severity":1,"message":"443","line":116,"column":8,"nodeType":"402","endLine":116,"endColumn":18,"suggestions":"444"},{"ruleId":"400","severity":1,"message":"445","line":152,"column":8,"nodeType":"402","endLine":152,"endColumn":81,"suggestions":"446"},{"ruleId":"400","severity":1,"message":"401","line":179,"column":8,"nodeType":"402","endLine":179,"endColumn":10,"suggestions":"447"},{"ruleId":"400","severity":1,"message":"401","line":64,"column":8,"nodeType":"402","endLine":64,"endColumn":31,"suggestions":"448"},{"ruleId":"400","severity":1,"message":"449","line":70,"column":8,"nodeType":"402","endLine":70,"endColumn":24,"suggestions":"450"},{"ruleId":"400","severity":1,"message":"451","line":78,"column":8,"nodeType":"402","endLine":78,"endColumn":24,"suggestions":"452"},{"ruleId":"400","severity":1,"message":"453","line":92,"column":8,"nodeType":"402","endLine":92,"endColumn":29,"suggestions":"454"},{"ruleId":"400","severity":1,"message":"455","line":100,"column":8,"nodeType":"402","endLine":100,"endColumn":24,"suggestions":"456"},{"ruleId":"400","severity":1,"message":"455","line":108,"column":8,"nodeType":"402","endLine":108,"endColumn":29,"suggestions":"457"},{"ruleId":"400","severity":1,"message":"458","line":33,"column":7,"nodeType":"402","endLine":33,"endColumn":9,"suggestions":"459"},{"ruleId":"400","severity":1,"message":"460","line":35,"column":3,"nodeType":"402","endLine":35,"endColumn":20,"suggestions":"461"},{"ruleId":"400","severity":1,"message":"409","line":21,"column":8,"nodeType":"402","endLine":21,"endColumn":23,"suggestions":"462"},{"ruleId":"400","severity":1,"message":"401","line":200,"column":8,"nodeType":"402","endLine":200,"endColumn":10,"suggestions":"463"},{"ruleId":"464","severity":1,"message":"465","line":59,"column":76,"nodeType":"466","messageId":"467","endLine":59,"endColumn":77},{"ruleId":"405","severity":1,"message":"468","line":2,"column":10,"nodeType":"407","messageId":"408","endLine":2,"endColumn":14},"no-native-reassign",["469"],"no-negated-in-lhs",["470"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["471"],["472"],"no-unused-vars","'importProducts' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'email'. Either include them or remove the dependency array.",["473"],"React Hook useEffect has a missing dependency: 'offset'. Either include it or remove the dependency array.",["474"],"React Hook useEffect has missing dependencies: 'dispatch', 'email', and 'name'. Either include them or remove the dependency array.",["475"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["476"],["477"],["478"],"React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.",["479"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["480"],["481"],["482"],"'compatibilityCompanyId' is assigned a value but never used.","'setItemsPerPage' is assigned a value but never used.",["483"],"React Hook useEffect has missing dependencies: 'category', 'dispatch', 'subcategory', and 'supplier'. Either include them or remove the dependency array.",["484"],"React Hook useEffect has missing dependencies: 'category', 'dispatch', 'offset', 'subcategory', and 'supplier'. Either include them or remove the dependency array.",["485"],["486"],"React Hook useEffect has missing dependencies: 'categories' and 'dispatch'. Either include them or remove the dependency array.",["487"],"React Hook useEffect has missing dependencies: 'categories', 'category', and 'dispatch'. Either include them or remove the dependency array.",["488"],"React Hook useEffect has a missing dependency: 'findUniqueBrands'. Either include it or remove the dependency array.",["489"],["490"],"React Hook useEffect has missing dependencies: 'data', 'itemsPerPage', and 'offset'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentPageData' needs the current value of 'data'.",["491"],["492"],"React Hook useEffect has a missing dependency: 'sortedData'. Either include it or remove the dependency array.",["493"],"React Hook useEffect has missing dependencies: 'compatibilityCompaniesId', 'compatibilityModelsId', 'features', and 'products'. Either include them or remove the dependency array.",["494"],["495"],["496"],"React Hook useEffect has missing dependencies: 'dispatch' and 'order'. Either include them or remove the dependency array.",["497"],"React Hook useEffect has missing dependencies: 'dispatch', 'order.sendingMethod', and 'orderSendingMethod'. Either include them or remove the dependency array.",["498"],"React Hook useEffect has missing dependencies: 'dispatch' and 'order.order_id'. Either include them or remove the dependency array.",["499"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["500"],["501"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["502"],"React Hook useEffect has missing dependencies: 'comments', 'dispatch', and 'email'. Either include them or remove the dependency array.",["503"],["504"],["505"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"506","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"523","fix":"527"},{"desc":"506","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"506","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"568","fix":"569"},{"desc":"506","fix":"570"},"Update the dependencies array to be: [dispatch]",{"range":"571","text":"572"},"Update the dependencies array to be: [dispatch, successSave]",{"range":"573","text":"574"},"Update the dependencies array to be: [dispatch, email, successAdding]",{"range":"575","text":"576"},"Update the dependencies array to be: [collection, itemsPerPage, currentPage, offset]",{"range":"577","text":"578"},"Update the dependencies array to be: [dispatch, email, name, success]",{"range":"579","text":"580"},"Update the dependencies array to be: [props.history, sendEmail]",{"range":"581","text":"582"},{"range":"583","text":"572"},"Update the dependencies array to be: [userInfo, dispatch, props.history]",{"range":"584","text":"585"},"Update the dependencies array to be: [dispatch, orderId, successOrdering]",{"range":"586","text":"587"},"Update the dependencies array to be: [dispatch, props.history, successSending]",{"range":"588","text":"589"},"Update the dependencies array to be: [dispatch, email, successDeleting]",{"range":"590","text":"591"},{"range":"592","text":"589"},{"range":"593","text":"572"},"Update the dependencies array to be: [category, dispatch, offset, subcategory, supplier]",{"range":"594","text":"595"},"Update the dependencies array to be: [category, dispatch, offset, subcategory, successSave, supplier]",{"range":"596","text":"597"},"Update the dependencies array to be: [category, dispatch, subcategory, successPercentageChange, supplier]",{"range":"598","text":"599"},"Update the dependencies array to be: [categories, category, dispatch]",{"range":"600","text":"601"},"Update the dependencies array to be: [categories, category, dispatch, subcategory]",{"range":"602","text":"603"},"Update the dependencies array to be: [findUniqueBrands, loading]",{"range":"604","text":"605"},"Update the dependencies array to be: [data, itemsPerPage, currentPage, offset]",{"range":"606","text":"607"},"Update the dependencies array to be: [currentPage, data, itemsPerPage, offset]",{"range":"608","text":"609"},"Update the dependencies array to be: [category, dispatch, subcategory]",{"range":"610","text":"611"},"Update the dependencies array to be: [sortType, sortedData]",{"range":"612","text":"613"},"Update the dependencies array to be: [filters, brandFilters, compatibleCompanyFilters, compatibleModelFilters, products, features, compatibilityCompaniesId, compatibilityModelsId]",{"range":"614","text":"615"},{"range":"616","text":"572"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"617","text":"618"},"Update the dependencies array to be: [dispatch, order, orderEditModal]",{"range":"619","text":"620"},"Update the dependencies array to be: [dispatch, order.sendingMethod, orderSendingMethod, sendingMethods]",{"range":"621","text":"622"},"Update the dependencies array to be: [dispatch, order.order_id, successUpdateStatus]",{"range":"623","text":"624"},"Update the dependencies array to be: [dispatch, props.match.params.id, successSending]",{"range":"625","text":"626"},"Update the dependencies array to be: [dispatch, props.match.params.id, successChangeStatus]",{"range":"627","text":"628"},"Update the dependencies array to be: [dispatch, id]",{"range":"629","text":"630"},"Update the dependencies array to be: [comments, dispatch, email, successRemoving]",{"range":"631","text":"632"},"Update the dependencies array to be: [dispatch, email, successUpdate]",{"range":"633","text":"634"},{"range":"635","text":"572"},[1046,1048],"[dispatch]",[1243,1256],"[dispatch, successSave]",[1247,1262],"[dispatch, email, successAdding]",[2497,2536],"[collection, itemsPerPage, currentPage, offset]",[1020,1029],"[dispatch, email, name, success]",[1406,1417],"[props.history, sendEmail]",[1868,1870],[860,880],"[userInfo, dispatch, props.history]",[2879,2896],"[dispatch, orderId, successOrdering]",[3443,3459],"[dispatch, props.history, successSending]",[3290,3307],"[dispatch, email, successDeleting]",[3795,3811],[4157,4159],[4283,4291],"[category, dispatch, offset, subcategory, supplier]",[4641,4654],"[category, dispatch, offset, subcategory, successSave, supplier]",[4911,4936],"[category, dispatch, subcategory, successPercentageChange, supplier]",[5253,5263],"[categories, category, dispatch]",[5586,5599],"[categories, category, dispatch, subcategory]",[3006,3015],"[findUniqueBrands, loading]",[3261,3294],"[data, itemsPerPage, currentPage, offset]",[3542,3555],"[currentPage, data, itemsPerPage, offset]",[4097,4120],"[category, dispatch, subcategory]",[4342,4352],"[sortType, sortedData]",[5440,5513],"[filters, brandFilters, compatibleCompanyFilters, compatibleModelFilters, products, features, compatibilityCompaniesId, compatibilityModelsId]",[6220,6222],[3864,3887],"[dispatch, props.match.params.id]",[4030,4046],"[dispatch, order, orderEditModal]",[4337,4353],"[dispatch, order.sendingMethod, orderSendingMethod, sendingMethods]",[4740,4761],"[dispatch, order.order_id, successUpdateStatus]",[4947,4963],"[dispatch, props.match.params.id, successSending]",[5154,5175],"[dispatch, props.match.params.id, successChangeStatus]",[1270,1272],"[dispatch, id]",[1191,1208],"[comments, dispatch, email, successRemoving]",[789,804],"[dispatch, email, successUpdate]",[8981,8983]]