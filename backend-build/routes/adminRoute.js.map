{"version":3,"sources":["../../backend/routes/adminRoute.js"],"names":["router","express","Router","storageA","multer","diskStorage","destination","req","file","cb","filename","fileName","Date","now","originalname","fileFilter","mimetype","Error","upload","storage","get","isAdmin","res","Product","find","products","send","post","isAuth","single","next","mysqlConnection","getConnection","err","connection","sql","query","body","name","category","brand","subcategory","path","slice","length","price","percentage","description","countInStock","result","fields","status","message","release","put","collectionId","params","id","Object","keys","image","productVisibility","productID","supplier","pricePercentage","console","log","productId","forEach","key","row","product","beginTransaction","manufacturer","rollback","commit","manufacturer_id","featureTitle","featureTitleId","titleId","method","cost","methodId","paymentMethod","paymentMethodCost","paymentMethodId","sendingMethodId","title","featureId","parentId","supplier_id","companyId","company","compatibility_company_id","insertId","model","compatibility_model_id","compat_id","compatId"],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport multer from 'multer';\r\nimport { isAdmin, isAuth } from '../util';\r\nimport mysqlConnection from '../connection';\r\n\r\nconst router = express.Router();\r\n\r\nconst storageA = multer.diskStorage({\r\n  destination: function (req, file, cb) {\r\n    cb(null, 'frontend/public/images/products')\r\n  },\r\n  filename: (req, file, cb) => {\r\n    const fileName = Date.now() + '-' + file.originalname;\r\n    cb(null, fileName);\r\n  }\r\n});\r\n\r\nconst fileFilter = (req, file, cb) => {\r\n  if (file.mimetype == \"image/png\" || file.mimetype == \"image/jpg\" || file.mimetype == \"image/jpeg\" || file.mimetype == \"image/gif\") {\r\n    cb(null, true);\r\n  } else {\r\n    cb(null, false);\r\n    return cb(new Error('Allowed only .png, .jpg, .jpeg and .gif'));\r\n  }\r\n}\r\n\r\nconst upload = multer({ storage: storageA, fileFilter: fileFilter });\r\n\r\n\r\n\r\nrouter.get(\"/\", isAdmin, async (req, res) => {\r\n  const products = await Product.find({});\r\n  res.send(products);\r\n})\r\n\r\nrouter.post(\"/createproduct\", isAuth, isAdmin, upload.single('image'), async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO products (name, category, brand, subcategory, image, price, percentage, description, countInStock) VALUES (?, ?, ?, ?, ?, ?, ?, ?, 10)\";\r\n    connection.query(sql, [req.body.name, req.body.category, req.body.brand, req.body.subcategory, req.file.path.slice(15, req.file.path.length),\r\n    req.body.price, req.body.percentage, req.body.description, req.body.countInStock], function (err, result, fields) {\r\n      if (err) throw err;\r\n      res.status(201).send({ message: 'New product Created' });\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/getcollectionList\", isAuth, isAdmin, upload.single('image'), async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"SELECT * FROM products WHERE category=?\";\r\n    connection.query(sql, [\"Συλλογή\"], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.status(200).send(result);\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/insertcollectionproduct\", isAuth, isAdmin, upload.single('image'), async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO products (name, image, price, description, category) VALUES (?, ?, ?, ?, ?)\";\r\n    connection.query(sql, [req.body.name, req.file.path.slice(15, req.file.path.length),\r\n    req.body.price, req.body.description, \"Συλλογή\"], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.status(201).send({ message: 'New collection product Created' });\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.put(\"/insertcollectionproduct/:id\", isAuth, isAdmin, upload.single('image'), async (req, res, next) => {\r\n  const collectionId = req.params.id;\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = 'SELECT * FROM products WHERE _id=?';\r\n    connection.query(sql, [collectionId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      if (Object.keys(result).length === 0) {\r\n\r\n        res.send({ message: 'Product not found' });\r\n      }\r\n      else {\r\n        sql = \"UPDATE products SET name=?, image=?, price=?, description=? WHERE _id=?\";\r\n        connection.query(sql, [req.body.name, req.body.image, req.body.price, req.body.description, collectionId], function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n        });\r\n\r\n        sql = \"SELECT * FROM products WHERE _id=?\";\r\n        connection.query(sql, [collectionId], function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n          res.send(result);\r\n        });\r\n      }\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.put(\"/changeCollectionVisibility\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    var sql = 'UPDATE products SET visibility=? WHERE _id=?';\r\n    connection.query(sql, [req.body.productVisibility, req.body.collectionId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      sql = \"SELECT * FROM products WHERE _id=?\";\r\n      connection.query(sql, [req.body.collectionId], function (err, result, fields) {\r\n        if (err) throw err;\r\n        res.send(result);\r\n      })\r\n\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n});\r\n\r\nrouter.put(\"/changeVisibility\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = 'UPDATE products SET visibility=? WHERE _id=?';\r\n    connection.query(sql, [req.body.productVisibility, req.body.productID], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      sql = \"SELECT * FROM products WHERE _id=?\";\r\n      connection.query(sql, [req.body.productID], function (err, result, fields) {\r\n        if (err) throw err;\r\n        res.send(result);\r\n      })\r\n\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n});\r\n\r\nrouter.put(\"/category_percentage_change\", isAuth, isAdmin, async (req, res, next) => {\r\n  \r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    if (req.body.supplier === '' || req.body.supplier === 'Επέλεξε Προμηθευτή' || req.body.supplier === null) {\r\n      if (req.body.subcategory === '' || req.body.subcategory === 'Επέλεξε Υποκατηγορία' || req.body.subcategory === null) {\r\n        var sql = 'UPDATE products SET percentage=? WHERE category=?';\r\n        connection.query(sql, [req.body.pricePercentage, req.body.category], function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n          res.send({ message: \"OK\" });\r\n\r\n        });\r\n      }\r\n      else {\r\n        var sql = 'UPDATE products SET percentage=? WHERE category=? && subcategory=?';\r\n        connection.query(sql, [req.body.pricePercentage, req.body.category, req.body.subcategory], function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n          res.send({ message: \"OK\" });\r\n\r\n        });\r\n      }\r\n    }\r\n    else {console.log(req.body.category)\r\n      if (req.body.category === '' || req.body.category === 'Επέλεξε Κατηγορία' || req.body.category === null) {\r\n        var sql = 'UPDATE products SET percentage=? WHERE supplier=?';\r\n        connection.query(sql, [req.body.pricePercentage, req.body.supplier], function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n          res.send({ message: \"OK\" });\r\n\r\n        });\r\n        \r\n      }\r\n      else {\r\n        if (req.body.subcategory === '' || req.body.subcategory === 'Επέλεξε Υποκατηγορία' || req.body.subcategory === null) {\r\n          var sql = 'UPDATE products SET percentage=? WHERE category=? && supplier=?';\r\n          connection.query(sql, [req.body.pricePercentage, req.body.category, req.body.supplier], function (err, result, fields) {\r\n            if (err) throw err;\r\n\r\n            res.send({ message: \"OK\" });\r\n\r\n          });\r\n        }\r\n        else {\r\n          var sql = 'UPDATE products SET percentage=? WHERE category=? && subcategory=? && supplier=?';\r\n          connection.query(sql, [req.body.pricePercentage, req.body.category, req.body.subcategory, req.body.supplier], function (err, result, fields) {\r\n            if (err) throw err;\r\n\r\n            res.send({ message: \"OK\" });\r\n\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n});\r\n\r\nrouter.put(\"/createproduct/:id\", isAuth, isAdmin, upload.single('image'), async (req, res, next) => {\r\n  const productId = req.params.id;\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = 'SELECT * FROM products WHERE _ID=?';\r\n    connection.query(sql, [productId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      if (Object.keys(result).length === 0) {\r\n\r\n        res.send({ message: 'Product not found' });\r\n      }\r\n    });\r\n\r\n    sql = \"UPDATE products SET name=?, category=?, brand=?, subcategory=?, image=?, price=?, percentage=?, description=? WHERE _id=?\";\r\n    connection.query(sql, [req.body.name, req.body.category, req.body.brand, req.body.subcategory,\r\n    req.body.image, req.body.price, req.body.percentage, req.body.description, productId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n    });\r\n\r\n    sql = \"SELECT * FROM products WHERE _id=?\";\r\n    connection.query(sql, [productId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      if (Object.keys(result).length !== 0) {\r\n        Object.keys(result).forEach(function (key) {\r\n          var row = result[key];\r\n          const product = {\r\n            name: row.name,\r\n            category: row.category,\r\n            brand: row.brand,\r\n            //image: row.image,\r\n            price: row.price,\r\n            percentage: row.percentage,\r\n            description: row.description,\r\n            countInStock: row.countInStock\r\n          };\r\n\r\n          res.send({\r\n            product\r\n          })\r\n        });\r\n      }\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n});\r\n\r\nrouter.post(\"/createcategory\", isAuth, isAdmin, upload.single('image'), async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO categories (category, image) VALUES (?, ?)\";\r\n    connection.query(sql, [req.body.category, req.file.path.slice(15, req.file.path.length)], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.status(201).send({ message: 'New product Created' });\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/manufacturerslist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('SELECT * FROM manufacturers ORDER BY name', function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertmanufacturer\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"INSERT INTO manufacturers (name) VALUES (?)\";\r\n      connection.query(sql, [req.body.manufacturer], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT * FROM manufacturers ORDER BY name\";\r\n        connection.query(sql, function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          res.send(result);\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/deletemanufacturer\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"DELETE FROM manufacturers WHERE manufacturer_id=?\";\r\n      connection.query(sql, [req.body.manufacturer_id], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT * FROM manufacturers ORDER BY name\";\r\n        connection.query(sql, function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          res.send(result);\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/featuretitlelist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('SELECT * FROM feature_titles ORDER BY feature_title', function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertfeaturetitle\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"INSERT INTO feature_titles (feature_title) VALUES (?)\";\r\n      connection.query(sql, [req.body.featureTitle], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT * FROM feature_titles ORDER BY feature_title\";\r\n        connection.query(sql, function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          res.send(result);\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/featurenames\", isAuth, isAdmin, async (req, res) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = 'SELECT DISTINCT feature_name FROM feature_names WHERE feature_title_id=? ORDER BY feature_name';\r\n    connection.query(sql, [req.body.featureTitleId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertfeaturename\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"INSERT INTO feature_names (feature_title_id, feature_name) VALUES (?, ?)\";\r\n      connection.query(sql, [req.body.titleId, req.body.name], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT * FROM feature_names WHERE feature_title_id=? ORDER BY feature_name \";\r\n        connection.query(sql, [req.body.titleId], function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          res.send(result);\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/sendinglist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('SELECT * FROM sendingMethods', function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/editsendingmethod\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('UPDATE sendingMethods SET sendingMethod=?, sendingMethodCost=? WHERE sendingMethod_id=?',\r\n      [req.body.method, req.body.cost, req.body.methodId], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        let sql = \"SELECT * FROM sendingMethods\";\r\n        connection.query(sql, function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n          res.send(result);\r\n        })\r\n\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/createsendingmethod\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    let sql = \"INSERT INTO sendingMethods (sendingMethod, sendingMethodCost) VALUES (?, ?)\";\r\n    connection.query(sql, [req.body.method, req.body.cost], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      sql = \"SELECT * FROM sendingMethods\";\r\n      connection.query(sql, function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        res.send(result);\r\n      })\r\n\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/removesendingmethod\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    let sql = \"DELETE FROM sendingMethods WHERE sendingMethod_id=?\";\r\n    connection.query(sql, [req.body.methodId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      sql = \"SELECT * FROM sendingMethods\";\r\n      connection.query(sql, function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        res.send(result);\r\n      })\r\n\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/paymentlist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    let sql = \"SELECT * FROM paymentMethods WHERE sendingMethod_id=? \";\r\n    connection.query(sql, [req.body.methodId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/editpaymentlist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('UPDATE paymentMethods SET paymentMethod=?, paymentMethodCost=? WHERE paymentMethod_id=?',\r\n      [req.body.paymentMethod, req.body.paymentMethodCost, req.body.paymentMethodId], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        let sql = \"SELECT * FROM paymentMethods WHERE sendingMethod_id=? \";\r\n        connection.query(sql, [req.body.sendingMethodId], function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n          res.send(result);\r\n        })\r\n\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/createpaymentlist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    let sql = \"INSERT INTO paymentMethods (paymentMethod, paymentMethodCost,sendingMethod_id) VALUES (?, ?, ?)\";\r\n    connection.query(sql, [req.body.paymentMethod, req.body.paymentMethodCost, req.body.sendingMethodId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      sql = \"SELECT * FROM paymentMethods WHERE sendingMethod_id=? \";\r\n      connection.query(sql, [req.body.sendingMethodId], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        res.send(result);\r\n      })\r\n\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/removepaymentlist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    let sql = \"DELETE FROM paymentMethods WHERE paymentMethod_id=?\";\r\n    connection.query(sql, [req.body.paymentMethodId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      sql = \"SELECT * FROM paymentMethods WHERE sendingMethod_id=? \";\r\n      connection.query(sql, [req.body.sendingMethodId], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        res.send(result);\r\n      })\r\n\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/featurelist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('SELECT * FROM features WHERE product_id=?', [req.body.productId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertfeature\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"INSERT INTO features (product_id, feature_title, feature) VALUES (?, ?, ?)\";\r\n      connection.query(sql, [req.body.productId, req.body.title, req.body.name], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT * FROM features WHERE product_id=?\";\r\n        connection.query(sql, [req.body.productId], function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          res.send(result);\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/deletefeature\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"DELETE FROM features WHERE features_id=?\";\r\n      connection.query(sql, [req.body.featureId], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT * FROM features WHERE product_id=?\";\r\n        connection.query(sql, [req.body.productId], function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          res.send(result);\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/categories\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('SELECT * FROM categories', function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/subcategories\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.query('SELECT * FROM categories WHERE parent_id=?', [req.body.parentId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/suppliers\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.query('SELECT * FROM suppliers ORDER BY supplier', function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertsupplier\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"INSERT INTO suppliers (supplier) VALUES (?)\";\r\n      connection.query(sql, [req.body.supplier], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT * FROM suppliers ORDER BY supplier\";\r\n        connection.query(sql, function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          res.send(result);\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/deletesupplier\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"DELETE FROM suppliers WHERE supplier_id=?\";\r\n      connection.query(sql, [req.body.supplier_id], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT * FROM suppliers ORDER BY supplier\";\r\n        connection.query(sql, function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          res.send(result);\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/compatibilitycompanylist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.query('SELECT * FROM compatibility_company ORDER BY company', function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/compatibilitymodelslist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.query('SELECT * FROM compatibility_model WHERE compatibility_company_id=? ORDER BY model', [req.body.companyId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertcompatibilitycompany\", isAuth, isAdmin, async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO compatibility_company (company) VALUES (?)\";\r\n    connection.query(sql, [req.body.company], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      let compatibility_company_id = result.insertId;\r\n\r\n      sql = \"SELECT * FROM compatibility_company WHERE compatibility_company_id=?\";\r\n      connection.query(sql, [compatibility_company_id], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        res.status(201).send(result);\r\n      });\r\n    });\r\n\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/insertcompatibilitymodel\", isAuth, isAdmin, async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO compatibility_model (compatibility_company_id,model) VALUES (?,?)\";\r\n    connection.query(sql, [req.body.companyId, req.body.model], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      let compatibility_model_id = result.insertId;\r\n\r\n      sql = \"SELECT * FROM compatibility_model WHERE compatibility_model_id=?\";\r\n      connection.query(sql, [compatibility_model_id], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        res.status(201).send(result);\r\n      });\r\n    });\r\n\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/insertcompatibility\", isAuth, isAdmin, async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO compatibilities (product_id,compatibility_company,compatibility_model) VALUES (?,?,?)\";\r\n    connection.query(sql, [req.body.productId, req.body.company, req.body.model], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      let compat_id = result.insertId;\r\n\r\n      sql = \"SELECT * FROM compatibilities WHERE compatibility_id=?\";\r\n      connection.query(sql, [compat_id], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        res.status(201).send(result);\r\n      });\r\n    });\r\n\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/getproductcompatibilities\", isAuth, isAdmin, async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"SELECT * FROM compatibilities WHERE product_id=? ORDER BY compatibility_model\";\r\n    connection.query(sql, [req.body.productId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.status(200).send(result);\r\n      connection.release();\r\n    })\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/deletecompatibility\", isAuth, isAdmin, async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"DELETE FROM compatibilities WHERE compatibility_id=?\";\r\n    connection.query(sql, [req.body.compatId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.status(200).send({ message: \"OK\" });\r\n      connection.release();\r\n    })\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\n\r\nexport default router;"],"file":"adminRoute.js"}