{"version":3,"sources":["../../backend/routes/adminRoute.js"],"names":["fs","require","router","express","Router","storageA","multer","diskStorage","destination","req","file","cb","filename","fileName","Date","now","originalname","fileFilter","mimetype","Error","upload","storage","get","isAdmin","res","Product","find","products","send","post","isAuth","single","next","mysqlConnection","getConnection","err","connection","sql","query","body","name","category","brand","subcategory","supplier","path","slice","length","typicalImage","price","percentage","availability","description","user","username","countInStock","result","fields","insertedId","insertId","status","message","release","put","collectionId","params","id","Object","keys","imagePath","image","unlink","console","error","productVisibility","beginTransaction","productID","commit","rollback","pricePercentage","product","i","_id","idArray","push","ID","log","productId","forEach","key","row","manufacturer","manufacturer_id","featureTitle","featureTitleId","titleId","method","cost","methodId","paymentMethod","paymentMethodCost","paymentMethodId","sendingMethodId","title","featureId","parentId","supplier_id","companyId","company","compatibility_company_id","companyID","phoneID","phone_brand_id","model","compatibility_model_id","modelID","brandID","compatibilityCompanyId","count","compat_id","compatibilities","product_id","compatId","isSuperAdmin","bcrypt","hash","password","email","admins","productHistory","compHistory","featHistory","resp","orderId","orderStatusHistory","orderSendingPaymentHistory","billingAddressHistory","shippingAddressHistory","orderProductHistory","itemsPerPage","offset","newsletterList"],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport multer from 'multer';\r\nimport bcrypt from 'bcrypt';\r\nimport { isAdmin, isAuth, isSuperAdmin } from '../util';\r\nimport mysqlConnection from '../connection';\r\nconst fs = require('fs')\r\n\r\nconst router = express.Router();\r\n\r\nconst storageA = multer.diskStorage({\r\n  destination: function (req, file, cb) {\r\n    cb(null, 'frontend/public/images/products')\r\n  },\r\n  filename: (req, file, cb) => {\r\n    const fileName = Date.now() + '-' + file.originalname;\r\n    cb(null, fileName);\r\n  }\r\n});\r\n\r\nconst fileFilter = (req, file, cb) => {\r\n  if (file.mimetype == \"image/png\" || file.mimetype == \"image/jpg\" || file.mimetype == \"image/jpeg\" || file.mimetype == \"image/gif\" || file.mimetype == \"image/webp\") {\r\n    cb(null, true);\r\n  } else {\r\n    cb(null, false);\r\n    return cb(new Error('Allowed only .png, .jpg, .jpeg and .gif'));\r\n  }\r\n}\r\n\r\nconst upload = multer({ storage: storageA, fileFilter: fileFilter });\r\n\r\n\r\n\r\nrouter.get(\"/\", isAdmin, async (req, res) => {\r\n  const products = await Product.find({});\r\n  res.send(products);\r\n})\r\n\r\nrouter.post(\"/createproduct\", isAuth, isAdmin, upload.single('image'), async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO products (name, category, brand, subcategory, supplier, image, typicalImage, price, percentage,availability, description, CreatedBy, CreatedAt, countInStock) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 10)\";\r\n    connection.query(sql, [req.body.name, req.body.category, req.body.brand, req.body.subcategory, req.body.supplier, req.file.path.slice(15, req.file.path.length),\r\n    req.body.typicalImage,req.body.price, req.body.percentage, req.body.availability, req.body.description, req.user.username, new Date, req.body.countInStock], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      let insertedId = result.insertId\r\n\r\n      sql = \"INSERT INTO productsHistory (product_id, name, category, brand, subcategory, supplier, image, typicalImage, price, percentage, availability, description, CreatedBy, CreatedAt, countInStock) SELECT _id, name, category, brand, subcategory, supplier, image, price, percentage, availability, description, CreatedBy, CreatedAt, countInStock FROM products WHERE _id=?\";\r\n      connection.query(sql, [insertedId], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n      })\r\n      res.status(201).send({ message: 'New product Created' });\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/getcollectionList\", isAuth, isAdmin, upload.single('image'), async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"SELECT * FROM products WHERE category=?\";\r\n    connection.query(sql, [\"Συλλογή\"], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.status(200).send(result);\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/insertcollectionproduct\", isAuth, isAdmin, upload.single('image'), async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO products (name, image, price, description, category) VALUES (?, ?, ?, ?, ?)\";\r\n    connection.query(sql, [req.body.name, req.file.path.slice(15, req.file.path.length),\r\n    req.body.price, req.body.description, \"Συλλογή\"], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.status(201).send({ message: 'New collection product Created' });\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.put(\"/insertcollectionproduct/:id\", isAuth, isAdmin, upload.single('image'), async (req, res, next) => {\r\n  const collectionId = req.params.id;\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = 'SELECT * FROM products WHERE _id=?';\r\n    connection.query(sql, [collectionId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      if (Object.keys(result).length === 0) {\r\n\r\n        res.send({ message: 'Product not found' });\r\n      }\r\n      else {\r\n\r\n        let imagePath = ''\r\n\r\n        if (req.body.image === result[0].image) {\r\n          imagePath = req.body.image\r\n        }\r\n        else {\r\n          fs.unlink('frontend/public' + result[0].image, (err) => {\r\n            if (err) {\r\n              console.error(err)\r\n              return\r\n            }\r\n\r\n            //file removed\r\n          })\r\n          imagePath = req.file.path.slice(15, req.file.path.length)\r\n        }\r\n\r\n        sql = \"UPDATE products SET name=?, image=?, price=?, description=? WHERE _id=?\";\r\n        connection.query(sql, [req.body.name, imagePath, req.body.price, req.body.description, collectionId], function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n        });\r\n\r\n        sql = \"SELECT * FROM products WHERE _id=?\";\r\n        connection.query(sql, [collectionId], function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n          res.send(result);\r\n        });\r\n      }\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.put(\"/changeCollectionVisibility\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    var sql = 'UPDATE products SET visibility=? WHERE _id=?';\r\n    connection.query(sql, [req.body.productVisibility, req.body.collectionId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      sql = \"SELECT * FROM products WHERE _id=?\";\r\n      connection.query(sql, [req.body.collectionId], function (err, result, fields) {\r\n        if (err) throw err;\r\n        res.send(result);\r\n      })\r\n\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n});\r\n\r\nrouter.put(\"/changeVisibility\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      var sql = 'UPDATE products SET visibility=? WHERE _id=?';\r\n      connection.query(sql, [req.body.productVisibility, req.body.productID], function (err, result, fields) {\r\n        if (err) throw err;\r\n        // sql = \"INSERT INTO productsHistory (product_id, name, category, brand, subcategory, supplier, image, price, percentage, availability, visibility, description, CreatedBy, CreatedAt, countInStock, UpdatedBy, UpdatedAt) SELECT _id, name, category, brand, subcategory, supplier, image, price, percentage, availability, visibility, description, CreatedBy, CreatedAt, countInStock, ?, ? FROM products WHERE _id=?\";\r\n        // connection.query(sql, [req.user.username, new Date, req.body.productID], function (err, result, fields) {\r\n        //   if (err) {\r\n        //     connection.rollback(function () {\r\n        //       throw err;\r\n        //     });\r\n        //   }\r\n\r\n        sql = \"SELECT * FROM products WHERE _id=?\";\r\n        connection.query(sql, [req.body.productID], function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n            res.send(result);\r\n          })\r\n          // })\r\n        });\r\n      });\r\n    });\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n});\r\n\r\nrouter.put(\"/category_percentage_change\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    if (req.body.supplier === '' || req.body.supplier === 'Επέλεξε Προμηθευτή' || req.body.supplier === null) {\r\n      if (req.body.subcategory === '' || req.body.subcategory === 'Επέλεξε Υποκατηγορία' || req.body.subcategory === null) {\r\n        connection.beginTransaction(function (err) {\r\n          var sql = 'UPDATE products SET percentage=? WHERE category=?';\r\n          connection.query(sql, [req.body.pricePercentage, req.body.category], function (err, result, fields) {\r\n            if (err) throw err;\r\n\r\n            sql = \"INSERT INTO productsHistory (product_id, name, category, brand, subcategory, supplier, image, price, percentage, description, CreatedBy, CreatedAt, countInStock, UpdatedBy, UpdatedAt) SELECT _id, name, category, brand, subcategory, supplier, image, price, percentage, description, CreatedBy, CreatedAt, countInStock, ?, ? FROM products WHERE category=?\";\r\n            connection.query(sql, [req.user.username, new Date, req.body.category], function (err, result, fields) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n\r\n              sql = \"SELECT _id FROM products WHERE category=?\";\r\n              connection.query(sql, [req.body.category], function (err, result, fields) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n\r\n                let product = result;\r\n\r\n                for (let i = 0; i < product.length; i++) {\r\n                  sql = \"SELECT ID FROM productsHistory WHERE product_id=? ORDER BY UpdatedAt DESC LIMIT 5\";\r\n                  connection.query(sql, [product[i]._id], function (err, result, fields) {\r\n                    if (err) {\r\n                      connection.rollback(function () {\r\n                        throw err;\r\n                      });\r\n                    }\r\n\r\n                    let idArray = []\r\n                    for (let i = 0; i < result.length; i++) {\r\n                      idArray.push(result[i].ID)\r\n                    }\r\n\r\n                    sql = \"DELETE FROM productsHistory WHERE product_id=? && ID NOT IN (?)\";\r\n                    connection.query(sql, [product[i]._id, idArray], function (err, result, fields) {\r\n                      if (err) {\r\n                        connection.rollback(function () {\r\n                          throw err;\r\n                        });\r\n                      }\r\n                    })\r\n                  })\r\n                }\r\n\r\n                connection.commit(function (err) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n                  console.log('Transaction Completed Successfully.');\r\n                  res.send({ message: \"OK\" });\r\n                });\r\n              })\r\n            })\r\n          })\r\n        });\r\n      }\r\n      else {\r\n        connection.beginTransaction(function (err) {\r\n          var sql = 'UPDATE products SET percentage=? WHERE category=? && subcategory=?';\r\n          connection.query(sql, [req.body.pricePercentage, req.body.category, req.body.subcategory], function (err, result, fields) {\r\n            if (err) throw err;\r\n\r\n            sql = \"INSERT INTO productsHistory (product_id, name, category, brand, subcategory, supplier, image, price, percentage, description, CreatedBy, CreatedAt, countInStock, UpdatedBy, UpdatedAt) SELECT _id, name, category, brand, subcategory, supplier, image, price, percentage, description, CreatedBy, CreatedAt, countInStock, ?, ? FROM products WHERE category=? && subcategory=?\";\r\n            connection.query(sql, [req.user.username, new Date, req.body.category, req.body.subcategory], function (err, result, fields) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n\r\n              sql = \"SELECT _id FROM products WHERE category=? && subcategory=?\";\r\n              connection.query(sql, [req.body.category, req.body.subcategory], function (err, result, fields) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n\r\n                let product = result;\r\n\r\n                for (let i = 0; i < product.length; i++) {\r\n                  sql = \"SELECT ID FROM productsHistory WHERE product_id=? ORDER BY UpdatedAt DESC LIMIT 5\";\r\n                  connection.query(sql, [product[i]._id], function (err, result, fields) {\r\n                    if (err) {\r\n                      connection.rollback(function () {\r\n                        throw err;\r\n                      });\r\n                    }\r\n\r\n                    let idArray = []\r\n                    for (let i = 0; i < result.length; i++) {\r\n                      idArray.push(result[i].ID)\r\n                    }\r\n\r\n                    sql = \"DELETE FROM productsHistory WHERE product_id=? && ID NOT IN (?)\";\r\n                    connection.query(sql, [product[i]._id, idArray], function (err, result, fields) {\r\n                      if (err) {\r\n                        connection.rollback(function () {\r\n                          throw err;\r\n                        });\r\n                      }\r\n                    })\r\n                  })\r\n                }\r\n\r\n                connection.commit(function (err) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n                  console.log('Transaction Completed Successfully.');\r\n                  res.send({ message: \"OK\" });\r\n                });\r\n              })\r\n            })\r\n          })\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      if (req.body.category === '' || req.body.category === 'Επέλεξε Κατηγορία' || req.body.category === null) {\r\n        connection.beginTransaction(function (err) {\r\n          var sql = 'UPDATE products SET percentage=? WHERE supplier=?';\r\n          connection.query(sql, [req.body.pricePercentage, req.body.supplier], function (err, result, fields) {\r\n            if (err) throw err;\r\n\r\n            sql = \"INSERT INTO productsHistory (product_id, name, category, brand, subcategory, supplier, image, price, percentage, description, CreatedBy, CreatedAt, countInStock, UpdatedBy, UpdatedAt) SELECT _id, name, category, brand, subcategory, supplier, image, price, percentage, description, CreatedBy, CreatedAt, countInStock, ?, ? FROM products WHERE supplier=?\";\r\n            connection.query(sql, [req.user.username, new Date, req.body.supplier], function (err, result, fields) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n\r\n              sql = \"SELECT _id FROM products WHERE supplier=?\";\r\n              connection.query(sql, [req.body.supplier], function (err, result, fields) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n\r\n                let product = result;\r\n\r\n                for (let i = 0; i < product.length; i++) {\r\n                  sql = \"SELECT ID FROM productsHistory WHERE product_id=? ORDER BY UpdatedAt DESC LIMIT 5\";\r\n                  connection.query(sql, [product[i]._id], function (err, result, fields) {\r\n                    if (err) {\r\n                      connection.rollback(function () {\r\n                        throw err;\r\n                      });\r\n                    }\r\n\r\n                    let idArray = []\r\n                    for (let i = 0; i < result.length; i++) {\r\n                      idArray.push(result[i].ID)\r\n                    }\r\n\r\n                    sql = \"DELETE FROM productsHistory WHERE product_id=? && ID NOT IN (?)\";\r\n                    connection.query(sql, [product[i]._id, idArray], function (err, result, fields) {\r\n                      if (err) {\r\n                        connection.rollback(function () {\r\n                          throw err;\r\n                        });\r\n                      }\r\n                    })\r\n                  })\r\n                }\r\n\r\n                connection.commit(function (err) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n                  console.log('Transaction Completed Successfully.');\r\n                  res.send({ message: \"OK\" });\r\n                });\r\n              })\r\n            })\r\n          })\r\n        });\r\n      }\r\n      else {\r\n        if (req.body.subcategory === '' || req.body.subcategory === 'Επέλεξε Υποκατηγορία' || req.body.subcategory === null) {\r\n          connection.beginTransaction(function (err) {\r\n            var sql = 'UPDATE products SET percentage=? WHERE category=? && supplier=?';\r\n            connection.query(sql, [req.body.pricePercentage, req.body.category, req.body.supplier], function (err, result, fields) {\r\n              if (err) throw err;\r\n\r\n              sql = \"INSERT INTO productsHistory (product_id, name, category, brand, subcategory, supplier, image, price, percentage, description, CreatedBy, CreatedAt, countInStock, UpdatedBy, UpdatedAt) SELECT _id, name, category, brand, subcategory, supplier, image, price, percentage, description, CreatedBy, CreatedAt, countInStock, ?, ? FROM products WHERE category=? && supplier=?\";\r\n              connection.query(sql, [req.user.username, new Date, req.body.category, req.body.supplier], function (err, result, fields) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n\r\n                sql = \"SELECT _id FROM products WHERE category=? && supplier=?\";\r\n                connection.query(sql, [req.body.category, req.body.supplier], function (err, result, fields) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n\r\n                  let product = result;\r\n\r\n                  for (let i = 0; i < product.length; i++) {\r\n                    sql = \"SELECT ID FROM productsHistory WHERE product_id=? ORDER BY UpdatedAt DESC LIMIT 5\";\r\n                    connection.query(sql, [product[i]._id], function (err, result, fields) {\r\n                      if (err) {\r\n                        connection.rollback(function () {\r\n                          throw err;\r\n                        });\r\n                      }\r\n\r\n                      let idArray = []\r\n                      for (let i = 0; i < result.length; i++) {\r\n                        idArray.push(result[i].ID)\r\n                      }\r\n\r\n                      sql = \"DELETE FROM productsHistory WHERE product_id=? && ID NOT IN (?)\";\r\n                      connection.query(sql, [product[i]._id, idArray], function (err, result, fields) {\r\n                        if (err) {\r\n                          connection.rollback(function () {\r\n                            throw err;\r\n                          });\r\n                        }\r\n                      })\r\n                    })\r\n                  }\r\n\r\n                  connection.commit(function (err) {\r\n                    if (err) {\r\n                      connection.rollback(function () {\r\n                        throw err;\r\n                      });\r\n                    }\r\n                    console.log('Transaction Completed Successfully.');\r\n                    res.send({ message: \"OK\" });\r\n                  });\r\n                })\r\n              })\r\n            })\r\n          });\r\n        }\r\n        else {\r\n          connection.beginTransaction(function (err) {\r\n            var sql = 'UPDATE products SET percentage=? WHERE category=? && subcategory=? && supplier=?';\r\n            connection.query(sql, [req.body.pricePercentage, req.body.category, req.body.subcategory, req.body.supplier], function (err, result, fields) {\r\n              if (err) throw err;\r\n\r\n              sql = \"INSERT INTO productsHistory (product_id, name, category, brand, subcategory, supplier, image, price, percentage, description, CreatedBy, CreatedAt, countInStock, UpdatedBy, UpdatedAt) SELECT _id, name, category, brand, subcategory, supplier, image, price, percentage, description, CreatedBy, CreatedAt, countInStock, ?, ? FROM products WHERE category=? && subcategory=? && supplier=?\";\r\n              connection.query(sql, [req.user.username, new Date, req.body.category, req.body.subcategory, req.body.supplier], function (err, result, fields) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n\r\n                sql = \"SELECT _id FROM products WHERE category=? && subcategory=? && supplier=?\";\r\n                connection.query(sql, [req.body.category, req.body.subcategory, req.body.supplier], function (err, result, fields) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n\r\n                  let product = result;\r\n\r\n                  for (let i = 0; i < product.length; i++) {\r\n                    sql = \"SELECT ID FROM productsHistory WHERE product_id=? ORDER BY UpdatedAt DESC LIMIT 5\";\r\n                    connection.query(sql, [product[i]._id], function (err, result, fields) {\r\n                      if (err) {\r\n                        connection.rollback(function () {\r\n                          throw err;\r\n                        });\r\n                      }\r\n\r\n                      let idArray = []\r\n                      for (let i = 0; i < result.length; i++) {\r\n                        idArray.push(result[i].ID)\r\n                      }\r\n\r\n                      sql = \"DELETE FROM productsHistory WHERE product_id=? && ID NOT IN (?)\";\r\n                      connection.query(sql, [product[i]._id, idArray], function (err, result, fields) {\r\n                        if (err) {\r\n                          connection.rollback(function () {\r\n                            throw err;\r\n                          });\r\n                        }\r\n                      })\r\n                    })\r\n                  }\r\n\r\n                  connection.commit(function (err) {\r\n                    if (err) {\r\n                      connection.rollback(function () {\r\n                        throw err;\r\n                      });\r\n                    }\r\n                    console.log('Transaction Completed Successfully.');\r\n                    res.send({ message: \"OK\" });\r\n                  });\r\n                })\r\n              })\r\n            })\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n});\r\n\r\nrouter.put(\"/createproduct/:id\", isAuth, isAdmin, upload.single('image'), async (req, res, next) => {\r\n  const productId = req.params.id;\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      var sql = 'SELECT * FROM products WHERE _ID=?';\r\n      connection.query(sql, [productId], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        if (Object.keys(result).length === 0) {\r\n\r\n          res.send({ message: 'Product not found' });\r\n          return\r\n        }\r\n\r\n        let imagePath = \"\"\r\n\r\n        if (req.body.image === result[0].image) {\r\n          imagePath = req.body.image\r\n        }\r\n        else {\r\n          fs.unlink('frontend/public' + result[0].image, (err) => {\r\n            if (err) {\r\n              console.error(err)\r\n              return\r\n            }\r\n\r\n            //file removed\r\n          })\r\n          imagePath = req.file.path.slice(15, req.file.path.length)\r\n        }\r\n\r\n        let typicalImage=false;\r\n        if(req.body.typicalImage==='true')\r\n        {\r\n          typicalImage=true\r\n        }\r\n        \r\n        console.log(typicalImage)\r\n        sql = `UPDATE products SET name=?, category=?, brand=?, subcategory=?, \r\n        supplier=?, image=?, price=?, percentage=?, availability=?, description=?, \r\n        typicalImage=? WHERE _id=?`;\r\n        connection.query(sql, [req.body.name, req.body.category, req.body.brand, \r\n          req.body.subcategory, req.body.supplier, imagePath, req.body.price, \r\n          req.body.percentage, req.body.availability, req.body.description,\r\n          typicalImage, productId], function (err, result, fields) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            sql = \"INSERT INTO productsHistory (product_id, name, category, brand, subcategory, supplier, image, typicalImage, price, percentage, availability, visibility, description, CreatedBy, CreatedAt, countInStock, UpdatedBy, UpdatedAt) SELECT _id, name, category, brand, subcategory, supplier, image, typicalImage, price, percentage, availability, visibility, description, CreatedBy, CreatedAt, countInStock, ?, ? FROM products WHERE _id=?\";\r\n            connection.query(sql, [req.user.username, new Date, productId], function (err, result, fields) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n\r\n              sql = \"SELECT ID FROM productsHistory WHERE product_id=? ORDER BY UpdatedAt DESC LIMIT 5\";\r\n              connection.query(sql, [productId], function (err, result, fields) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n\r\n                let idArray = []\r\n                for (let i = 0; i < result.length; i++) {\r\n                  idArray.push(result[i].ID)\r\n                }\r\n\r\n                sql = \"DELETE FROM productsHistory WHERE product_id=? && ID NOT IN (?)\";\r\n                connection.query(sql, [productId, idArray], function (err, result, fields) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n\r\n                  sql = \"SELECT * FROM products WHERE _id=?\";\r\n                  connection.query(sql, [productId], function (err, result, fields) {\r\n                    if (err) {\r\n                      connection.rollback(function () {\r\n                        throw err;\r\n                      });\r\n                    }\r\n\r\n                    let product = {}\r\n\r\n                    if (Object.keys(result).length !== 0) {\r\n                      Object.keys(result).forEach(function (key) {\r\n                        var row = result[key];\r\n                        product = {\r\n                          name: row.name,\r\n                          category: row.category,\r\n                          brand: row.brand,\r\n                          subcategory: row.subcategory,\r\n                          supplier: row.supplier,\r\n                          price: row.price,\r\n                          percentage: row.percentage,\r\n                          description: row.description,\r\n                          countInStock: row.countInStock,\r\n                          typicalImage: row.typicalImage\r\n                        };\r\n\r\n                      });\r\n                    }\r\n\r\n                    connection.commit(function (err) {\r\n                      if (err) {\r\n                        connection.rollback(function () {\r\n                          throw err;\r\n                        });\r\n                      }\r\n                      console.log('Transaction Completed Successfully.');\r\n                      res.status(200).send(product);\r\n                      connection.release();\r\n                    });\r\n                  });\r\n\r\n                })\r\n\r\n              })\r\n\r\n            })\r\n\r\n          });\r\n\r\n      });\r\n    })\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n});\r\n\r\nrouter.post(\"/createcategory\", isAuth, isAdmin, upload.single('image'), async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO categories (category, image) VALUES (?, ?)\";\r\n    connection.query(sql, [req.body.category, req.file.path.slice(15, req.file.path.length)], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.status(201).send({ message: 'New product Created' });\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/manufacturerslist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('SELECT * FROM manufacturers ORDER BY name', function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertmanufacturer\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"INSERT INTO manufacturers (name) VALUES (?)\";\r\n      connection.query(sql, [req.body.manufacturer], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT * FROM manufacturers ORDER BY name\";\r\n        connection.query(sql, function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          res.send(result);\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/deletemanufacturer\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"DELETE FROM manufacturers WHERE manufacturer_id=?\";\r\n      connection.query(sql, [req.body.manufacturer_id], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT * FROM manufacturers ORDER BY name\";\r\n        connection.query(sql, function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          res.send(result);\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/featuretitlelist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('SELECT * FROM feature_titles ORDER BY feature_title', function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertfeaturetitle\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"INSERT INTO feature_titles (feature_title) VALUES (?)\";\r\n      connection.query(sql, [req.body.featureTitle], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT * FROM feature_titles ORDER BY feature_title\";\r\n        connection.query(sql, function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          res.send(result);\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/featurenames\", isAuth, isAdmin, async (req, res) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = 'SELECT DISTINCT feature_name FROM feature_names WHERE feature_title_id=? ORDER BY feature_name';\r\n    connection.query(sql, [req.body.featureTitleId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertfeaturename\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"INSERT INTO feature_names (feature_title_id, feature_name) VALUES (?, ?)\";\r\n      connection.query(sql, [req.body.titleId, req.body.name], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT * FROM feature_names WHERE feature_title_id=? ORDER BY feature_name \";\r\n        connection.query(sql, [req.body.titleId], function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          res.send(result);\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/sendinglist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('SELECT * FROM sendingMethods', function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/editsendingmethod\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('UPDATE sendingMethods SET sendingMethod=?, sendingMethodCost=? WHERE sendingMethod_id=?',\r\n      [req.body.method, req.body.cost, req.body.methodId], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        let sql = \"SELECT * FROM sendingMethods\";\r\n        connection.query(sql, function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n          res.send(result);\r\n        })\r\n\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/createsendingmethod\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    let sql = \"INSERT INTO sendingMethods (sendingMethod, sendingMethodCost) VALUES (?, ?)\";\r\n    connection.query(sql, [req.body.method, req.body.cost], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      sql = \"SELECT * FROM sendingMethods\";\r\n      connection.query(sql, function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        res.send(result);\r\n      })\r\n\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/removesendingmethod\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    let sql = \"DELETE FROM sendingMethods WHERE sendingMethod_id=?\";\r\n    connection.query(sql, [req.body.methodId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      sql = \"SELECT * FROM sendingMethods\";\r\n      connection.query(sql, function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        res.send(result);\r\n      })\r\n\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/paymentlist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    let sql = \"SELECT * FROM paymentMethods WHERE sendingMethod_id=? \";\r\n    connection.query(sql, [req.body.methodId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/editpaymentlist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('UPDATE paymentMethods SET paymentMethod=?, paymentMethodCost=? WHERE paymentMethod_id=?',\r\n      [req.body.paymentMethod, req.body.paymentMethodCost, req.body.paymentMethodId], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        let sql = \"SELECT * FROM paymentMethods WHERE sendingMethod_id=? \";\r\n        connection.query(sql, [req.body.sendingMethodId], function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n          res.send(result);\r\n        })\r\n\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/createpaymentlist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    let sql = \"INSERT INTO paymentMethods (paymentMethod, paymentMethodCost,sendingMethod_id) VALUES (?, ?, ?)\";\r\n    connection.query(sql, [req.body.paymentMethod, req.body.paymentMethodCost, req.body.sendingMethodId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      sql = \"SELECT * FROM paymentMethods WHERE sendingMethod_id=? \";\r\n      connection.query(sql, [req.body.sendingMethodId], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        res.send(result);\r\n      })\r\n\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/removepaymentlist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    let sql = \"DELETE FROM paymentMethods WHERE paymentMethod_id=?\";\r\n    connection.query(sql, [req.body.paymentMethodId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      sql = \"SELECT * FROM paymentMethods WHERE sendingMethod_id=? \";\r\n      connection.query(sql, [req.body.sendingMethodId], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        res.send(result);\r\n      })\r\n\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/featurelist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('SELECT * FROM features WHERE product_id=? ORDER BY feature_title,feature', [req.body.productId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertfeature\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"INSERT INTO features (product_id, feature_title, feature) VALUES (?, ?, ?)\";\r\n      connection.query(sql, [req.body.productId, req.body.title, req.body.name], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n        var sql = \"INSERT INTO featuresHistory (product_id, feature_title, feature, UpdatedBy, UpdatedAt, actions) VALUES (?,?,?,?,?,?)\";\r\n        connection.query(sql, [req.body.productId, req.body.title, req.body.name, req.user.username, new Date, \"Προσθήκη\"], function (err, result, fields) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          sql = \"SELECT * FROM features WHERE product_id=? ORDER BY feature_title,feature\";\r\n          connection.query(sql, [req.body.productId], function (err, result) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            res.send(result);\r\n\r\n            connection.commit(function (err) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n\r\n            });\r\n          });\r\n        })\r\n      });\r\n      connection.release();\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/deletefeature\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      var sql = \"INSERT INTO featuresHistory (product_id, feature_title, feature, UpdatedBy, UpdatedAt, actions) SELECT  features.product_id, features.feature_title, features.feature, ?, ? , ? FROM features WHERE features_id=?\";\r\n      connection.query(sql, [req.user.username, new Date, \"Διαγραφή\", req.body.featureId], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        let sql = \"DELETE FROM features WHERE features_id=?\";\r\n        connection.query(sql, [req.body.featureId], function (err, result, fields) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          sql = \"SELECT * FROM features WHERE product_id=?\";\r\n          connection.query(sql, [req.body.productId], function (err, result) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            res.send(result);\r\n\r\n            connection.commit(function (err) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n            });\r\n          });\r\n        });\r\n      });\r\n      connection.release();\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/categories\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('SELECT * FROM categories ORDER BY category', function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/subcategories\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.query('SELECT * FROM categories WHERE parent_id=? ORDER BY category', [req.body.parentId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/suppliers\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.query('SELECT * FROM suppliers ORDER BY supplier', function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertsupplier\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"INSERT INTO suppliers (supplier) VALUES (?)\";\r\n      connection.query(sql, [req.body.supplier], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT * FROM suppliers ORDER BY supplier\";\r\n        connection.query(sql, function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          res.send(result);\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/deletesupplier\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"DELETE FROM suppliers WHERE supplier_id=?\";\r\n      connection.query(sql, [req.body.supplier_id], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT * FROM suppliers ORDER BY supplier\";\r\n        connection.query(sql, function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          res.send(result);\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/compatibilitycompanylist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.query('SELECT * FROM compatibility_company ORDER BY company', function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/compatibilitymodelslist\", isAuth, isAdmin, async (req, res) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.query('SELECT * FROM compatibility_model WHERE compatibility_company_id=? ORDER BY model', [req.body.companyId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertcompatibilitycompany\", isAuth, isAdmin, async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO compatibility_company (company) VALUES (?)\";\r\n    connection.query(sql, [req.body.company], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      let compatibility_company_id = result.insertId;\r\n\r\n      sql = \"SELECT * FROM compatibility_company WHERE compatibility_company_id=?\";\r\n      connection.query(sql, [compatibility_company_id], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        res.status(201).send(result);\r\n      });\r\n    });\r\n\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/deletecompatibilitycompany\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"DELETE FROM compatibility_model WHERE compatibility_company_id=?\";\r\n      connection.query(sql, [req.body.companyID], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"DELETE FROM compatibility_company WHERE compatibility_company_id=?\";\r\n        connection.query(sql, [req.body.companyID], function (err, result, fields) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          let sql = \"SELECT phone_brand_id FROM phone_brands WHERE brand=? \";\r\n          connection.query(sql, [req.body.company], function (err, result) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            let phoneID = result[0]?.phone_brand_id;\r\n\r\n            if (phoneID > 0) {\r\n\r\n              sql = \"DELETE FROM phone_models WHERE phone_brand_id=?\";\r\n              connection.query(sql, [phoneID], function (err, result, fields) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n\r\n                sql = \"DELETE FROM phone_brands WHERE phone_brand_id=?\";\r\n                connection.query(sql, [phoneID], function (err, result, fields) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n\r\n                  sql = \"SELECT * FROM compatibility_company ORDER BY company \";\r\n                  connection.query(sql, [req.body.companyID], function (err, result) {\r\n                    if (err) {\r\n                      connection.rollback(function () {\r\n                        throw err;\r\n                      });\r\n                    }\r\n                    console.log(\"Read phone brands succeed\");\r\n\r\n                    connection.commit(function (err) {\r\n                      if (err) {\r\n                        connection.rollback(function () {\r\n                          throw err;\r\n                        });\r\n                      }\r\n                    });\r\n\r\n                    res.send(result);\r\n                    console.log('Transaction Completed Successfully.');\r\n                    connection.release();\r\n\r\n                  });\r\n\r\n                });\r\n\r\n              });\r\n\r\n            }\r\n            else {\r\n              sql = \"SELECT * FROM compatibility_company ORDER BY company \";\r\n              connection.query(sql, [req.body.companyID], function (err, result) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n                console.log(\"Read phone brands succeed\");\r\n\r\n\r\n                connection.commit(function (err) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n                  res.send(result);\r\n                  console.log('Transaction Completed Successfully.');\r\n                  connection.release();\r\n                });\r\n              });\r\n            }\r\n\r\n          });\r\n\r\n        });\r\n\r\n      })\r\n\r\n    });\r\n    /* End transaction */\r\n  })\r\n\r\n})\r\n\r\nrouter.post(\"/insertcompatibilitymodel\", isAuth, isAdmin, async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO compatibility_model (compatibility_company_id,model) VALUES (?,?)\";\r\n    connection.query(sql, [req.body.companyId, req.body.model], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      let compatibility_model_id = result.insertId;\r\n\r\n      sql = \"SELECT * FROM compatibility_model WHERE compatibility_model_id=?\";\r\n      connection.query(sql, [compatibility_model_id], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        res.status(201).send(result);\r\n      });\r\n    });\r\n\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/deletecompatibilitymodel/\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"DELETE FROM compatibility_model WHERE compatibility_model_id=?\";\r\n      connection.query(sql, [req.body.modelID], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = \"SELECT phone_brand_id FROM phone_brands WHERE brand=?\";\r\n        connection.query(sql, [req.body.company], function (err, result) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          let brandID = result[0]?.phone_brand_id;\r\n\r\n          if (brandID > 0) {\r\n            sql = \"DELETE FROM phone_models WHERE phone_brand_id=? AND model=? \";\r\n            connection.query(sql, [brandID, req.body.model], function (err, result) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n\r\n              sql = \"SELECT * FROM compatibility_model WHERE compatibility_company_id=? ORDER BY model \";\r\n              connection.query(sql, [req.body.compatibilityCompanyId], function (err, result) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n                console.log(\"Read phone brands succeed\");\r\n\r\n                connection.commit(function (err) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n                  res.send(result);\r\n                  console.log('Transaction Completed Successfully.');\r\n                  connection.release();\r\n                });\r\n              });\r\n            })\r\n          }\r\n          else {\r\n            sql = \"SELECT * FROM compatibility_model WHERE compatibility_company_id=? ORDER BY model \";\r\n            connection.query(sql, [req.body.compatibilityCompanyId], function (err, result) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n              console.log(\"Read phone brands succeed\");\r\n\r\n              connection.commit(function (err) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n                res.send(result);\r\n                console.log('Transaction Completed Successfully.');\r\n                connection.release();\r\n              });\r\n            });\r\n          }\r\n        });\r\n\r\n      });\r\n\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/insertcompatibility\", isAuth, isAdmin, async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      var sql = `SELECT COUNT(*) as count FROM compatibilities\r\n                WHERE product_id=? \r\n                AND compatibility_company=?\r\n                AND compatibility_model=?`;\r\n      connection.query(sql, [req.body.productId, req.body.company, req.body.model], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        let count = result[0];\r\n\r\n        if (count.count === 0) {\r\n          var sql = `INSERT INTO compatibilities (product_id,compatibility_company,compatibility_model) VALUES (?,?,?)`;\r\n          connection.query(sql, [req.body.productId, req.body.company, req.body.model], function (err, result, fields) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            let compat_id = result.insertId;\r\n\r\n            var sql = \"INSERT INTO compatibilitiesHistory (product_id, compatibility_company, compatibility_model, UpdatedBy, UpdatedAt, actions) VALUES (?,?,?,?,?,?)\";\r\n            connection.query(sql, [req.body.productId, req.body.company, req.body.model, req.user.username, new Date, \"Προσθήκη\"], function (err, result, fields) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n\r\n              sql = \"SELECT * FROM compatibilities WHERE product_id=? ORDER BY compatibility_company ASC, compatibility_model ASC\";\r\n              connection.query(sql, [req.body.productId], function (err, result, fields) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n\r\n                const compatibilities = result;\r\n\r\n                connection.commit(function (err) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n                  res.status(201).send(compatibilities);\r\n                  console.log('Transaction Completed Successfully.');\r\n                });\r\n              });\r\n            });\r\n          });\r\n        }\r\n        else {\r\n          let sql = \"SELECT * FROM compatibilities WHERE product_id=? ORDER BY compatibility_company ASC, compatibility_model ASC\";\r\n          connection.query(sql, [req.body.productId], function (err, result, fields) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n            res.status(200).send(result);\r\n          })\r\n        }\r\n\r\n      });\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/insertallphonescompatibility\", isAuth, isAdmin, async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      var sql = `INSERT INTO compatibilities (product_id,compatibility_company,compatibility_model)\r\n                SELECT ${req.body.productId},phone_brands.brand,phone_models.model \r\n                FROM phone_brands\r\n                INNER JOIN phone_models\r\n                ON phone_brands.phone_brand_id=phone_models.phone_brand_id\r\n                WHERE (SELECT COUNT(*) FROM compatibilities\r\n                WHERE product_id=${req.body.productId}\r\n                AND compatibility_company=phone_brands.brand\r\n                AND compatibility_model=phone_models.model )=0`;\r\n      connection.query(sql, function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        var sql = `INSERT INTO compatibilitiesHistory (product_id, compatibility_company, compatibility_model, UpdatedBy, UpdatedAt, actions)\r\n                  SELECT ${req.body.productId},phone_brands.brand,phone_models.model, ?, ?, \"Μαζική Προσθήκη\" FROM phone_brands\r\n                  INNER JOIN phone_models\r\n                  ON phone_brands.phone_brand_id=phone_models.phone_brand_id\r\n                  WHERE (SELECT COUNT(*) FROM compatibilitiesHistory\r\n                  WHERE product_id=${req.body.productId}\r\n                  AND compatibility_company=phone_brands.brand\r\n                  AND compatibility_model=phone_models.model )=0`;\r\n        connection.query(sql, [req.user.username, new Date], function (err, result, fields) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          var sql = \"SELECT * FROM compatibilities WHERE product_id=? ORDER BY compatibility_company ASC,compatibility_model ASC\";\r\n          connection.query(sql, [req.body.productId], function (err, result, fields) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            const compatibilities = result;\r\n\r\n            connection.commit(function (err) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n              res.status(201).send(compatibilities);\r\n              console.log('Transaction Completed Successfully.');\r\n            });\r\n          });\r\n        });\r\n      });\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/deleteallcompatibilities\", isAuth, isAdmin, async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = `DELETE FROM compatibilities WHERE product_id=?`;\r\n    connection.query(sql, [req.body.product_id], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      sql = \"SELECT * FROM compatibilities WHERE product_id=? ORDER BY compatibility_company ASC,compatibility_model ASC\";\r\n      connection.query(sql, [req.body.product_id], function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        res.status(201).send(result);\r\n      });\r\n    });\r\n\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/getproductcompatibilities\", isAuth, isAdmin, async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"SELECT * FROM compatibilities WHERE product_id=? ORDER BY compatibility_company ASC,compatibility_model ASC\";\r\n    connection.query(sql, [req.body.productId], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.status(200).send(result);\r\n\r\n    })\r\n    connection.release();\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/deletecompatibility\", isAuth, isAdmin, async (req, res, next) => {\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      var sql = \"INSERT INTO compatibilitiesHistory (product_id, compatibility_company, compatibility_model, UpdatedBy, UpdatedAt, actions) SELECT  compatibilities.product_id, compatibilities.compatibility_company, compatibilities.compatibility_model, ?, ? , ? FROM compatibilities WHERE compatibility_id=?\";\r\n      connection.query(sql, [req.user.username, new Date, \"Διαγραφή\", req.body.compatId], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        var sql = \"DELETE FROM compatibilities WHERE compatibility_id=?\";\r\n        connection.query(sql, [req.body.compatId], function (err, result, fields) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n            res.status(200).send({ message: \"OK\" });\r\n            console.log('Transaction Completed Successfully.');\r\n          });\r\n        })\r\n      })\r\n    })\r\n    connection.release();\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n\r\n})\r\n\r\nrouter.post(\"/getAdmins\", isAuth, isAdmin, isSuperAdmin, async (req, res) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = 'SELECT username, email, isAdmin FROM users WHERE isAdmin=1 ORDER BY username';\r\n    connection.query(sql, function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertAdmin\", isAuth, isAdmin, isSuperAdmin, async (req, res) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      bcrypt.hash(req.body.password, 10, (err, hash) => {\r\n        // Store hash in your password DB.\r\n\r\n        var sql = \"INSERT INTO users (username,email,password,isAdmin) VALUES (?,?,?,?)\";\r\n        connection.query(sql, [req.body.username, req.body.email, hash, \"1\"], function (err, result, fields) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          sql = 'SELECT username, email, isAdmin FROM users WHERE isAdmin=1 ORDER BY username';\r\n          connection.query(sql, function (err, result, fields) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            var admins = result;\r\n\r\n            connection.commit(function (err) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n              res.send(admins);\r\n            });\r\n          })\r\n        });\r\n      });\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    });\r\n  });\r\n})\r\n\r\nrouter.post(\"/deleteAdmin\", isAuth, isAdmin, isSuperAdmin, async (req, res) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n      var sql = \"DELETE FROM users WHERE email=?\";\r\n      connection.query(sql, [req.body.email], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = 'SELECT username, email, isAdmin FROM users WHERE isAdmin=1 ORDER BY username';\r\n        connection.query(sql, function (err, result, fields) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          var admins = result;\r\n\r\n          connection.commit(function (err) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n            res.send(admins);\r\n          });\r\n        })\r\n      });\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    });\r\n  });\r\n})\r\n\r\nrouter.post(\"/getProductHistory\", isAuth, isAdmin, isSuperAdmin, async (req, res) => {\r\n  const productId = req.body.productId;\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n      var sql = \"SELECT * FROM productsHistory WHERE product_id=? ORDER BY UpdatedAt DESC\";\r\n      connection.query(sql, [productId], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        let productHistory = result;\r\n\r\n        sql = \"SELECT * FROM compatibilitiesHistory WHERE product_id=? ORDER BY UpdatedAt DESC\";\r\n        connection.query(sql, [productId], function (err, result, fields) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          let compHistory = result;\r\n\r\n          sql = \"SELECT * FROM featuresHistory WHERE product_id=? ORDER BY UpdatedAt DESC\";\r\n          connection.query(sql, [productId], function (err, result, fields) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            let featHistory = result;\r\n\r\n            connection.commit(function (err) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n              let resp = { productHistory, compHistory, featHistory }\r\n              res.send(resp);\r\n            });\r\n          })\r\n        })\r\n      });\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    });\r\n  });\r\n})\r\n\r\nrouter.post(\"/getOrderHistory\", isAuth, isAdmin, isSuperAdmin, async (req, res) => {\r\n  const orderId = req.body.orderId;\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n      var sql = \"SELECT * FROM orderStatusHistory WHERE order_id=? ORDER BY UpdatedAt DESC\";\r\n      connection.query(sql, [orderId], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        let orderStatusHistory = result;\r\n\r\n        sql = \"SELECT * FROM orderSendingPaymentHistory WHERE order_id=? ORDER BY UpdatedAt DESC\";\r\n        connection.query(sql, [orderId], function (err, result, fields) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          let orderSendingPaymentHistory = result;\r\n\r\n          sql = \"SELECT * FROM billingAddressHistory WHERE order_id=? ORDER BY UpdatedAt DESC\";\r\n          connection.query(sql, [orderId], function (err, result, fields) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            let billingAddressHistory = result;\r\n\r\n            sql = \"SELECT * FROM shippingAddressHistory WHERE order_id=? ORDER BY UpdatedAt DESC\";\r\n            connection.query(sql, [orderId], function (err, result, fields) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n\r\n              let shippingAddressHistory = result;\r\n\r\n              sql = \"SELECT orderProductHistory.product_id, orderProductHistory.model, orderProductHistory.quantity, orderProductHistory.image_case, orderProductHistory.UpdatedBy, orderProductHistory.UpdatedAt, orderProductHistory.actions, products.name, products.category, products.brand, products.image FROM orderProductHistory INNER JOIN products ON orderProductHistory.product_id=products._id  WHERE orderProductHistory.order_id=? ORDER BY orderProductHistory.product_id , UpdatedAt DESC\";\r\n              connection.query(sql, [orderId], function (err, result, fields) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n\r\n                let orderProductHistory = result;\r\n\r\n                connection.commit(function (err) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n                  let resp = { orderStatusHistory, orderSendingPaymentHistory, billingAddressHistory, shippingAddressHistory, orderProductHistory }\r\n                  res.send(resp);\r\n                });\r\n              });\r\n            })\r\n          })\r\n        })\r\n      });\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    });\r\n  });\r\n})\r\n\r\nrouter.post(\"/newsletterlist\", isAuth, isAdmin, async (req, res) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      var sql = 'SELECT * FROM newsletters ORDER BY email LIMIT ? OFFSET ?';\r\n      connection.query(sql, [req.body.itemsPerPage, req.body.offset], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        let newsletterList = result;\r\n\r\n        connection.query('SELECT COUNT(*) AS count FROM newsletters',\r\n          function (err, result, fields) {\r\n            if (err) throw err;\r\n            let count = result;\r\n\r\n            connection.commit(function (err) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n              res.send({ newsletterList, count });\r\n            });\r\n            connection.release();\r\n\r\n            // Handle error after the release.\r\n            if (err) throw err;\r\n          })\r\n      })\r\n    });\r\n  });\r\n})\r\n\r\n\r\n\r\n\r\nexport default router;"],"file":"adminRoute.js"}