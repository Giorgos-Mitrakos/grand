{"version":3,"sources":["../../backend/routes/adminRoute.js"],"names":["router","express","Router","storageA","multer","diskStorage","destination","req","file","cb","filename","fileName","Date","now","originalname","fileFilter","mimetype","Error","upload","storage","get","isAdmin","res","Product","find","products","send","post","isAuth","single","next","mysqlConnection","getConnection","err","connection","sql","query","body","name","category","brand","subcategory","path","slice","length","price","percentage","description","countInStock","result","fields","status","message","release","put","collectionId","params","id","Object","keys","image","productVisibility","productID","pricePercentage","productId","forEach","key","row","product","beginTransaction","manufacturer","rollback","commit","featureTitle","featureTitleId","titleId","method","cost","methodId","paymentMethod","paymentMethodCost","paymentMethodId","sendingMethodId","title","featureId","parentId","companyId","company","compatibility_company_id","insertId","model","compatibility_model_id","compat_id","compatId"],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport multer from 'multer';\r\nimport {isAdmin, isAuth} from '../util';\r\nimport mysqlConnection from '../connection';\r\n\r\nconst router= express.Router();\r\n\r\nconst storageA = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        cb(null, 'frontend/public/images/products')\r\n    },\r\n    filename: (req, file, cb) => {\r\n      const fileName = Date.now() + '-' + file.originalname;\r\n      cb(null, fileName);\r\n    }\r\n});\r\n \r\nconst fileFilter = (req, file, cb) => {\r\n    if (file.mimetype == \"image/png\" || file.mimetype == \"image/jpg\" || file.mimetype == \"image/jpeg\" || file.mimetype == \"image/gif\") {\r\n        cb(null, true);\r\n    } else {\r\n        cb(null, false);\r\n        return cb(new Error('Allowed only .png, .jpg, .jpeg and .gif'));\r\n    }\r\n  }\r\n  \r\nconst upload = multer({ storage: storageA, fileFilter: fileFilter });\r\n\r\n\r\n\r\nrouter.get(\"/\",isAdmin, async (req, res) =>{\r\n    const products = await Product.find({});\r\n    res.send(products);\r\n})\r\n\r\nrouter.post(\"/createproduct\", isAuth, isAdmin,  upload.single('image'), async (req,res,next) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO products (name, category, brand, subcategory, image, price, percentage, description, countInStock) VALUES (?, ?, ?, ?, ?, ?, ?, ?, 10)\";\r\n    connection.query(sql, [req.body.name, req.body.category, req.body.brand, req.body.subcategory, req.file.path.slice(15,req.file.path.length),\r\n      req.body.price, req.body.percentage, req.body.description, req.body.countInStock], function (err, result, fields) {\r\n    if (err) throw err;\r\n    res.status(201).send({message:'New product Created'});\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });  \r\n \r\n})\r\n\r\nrouter.post(\"/getcollectionList\", isAuth, isAdmin,  upload.single('image'), async (req,res,next) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"SELECT * FROM products WHERE category=?\";\r\n    connection.query(sql,[\"Συλλογή\"], function (err, result, fields) {\r\n    if (err) throw err;\r\n    \r\n    res.status(200).send(result);\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });  \r\n \r\n})\r\n\r\nrouter.post(\"/insertcollectionproduct\", isAuth, isAdmin,  upload.single('image'), async (req,res,next) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO products (name, image, price, description, category) VALUES (?, ?, ?, ?, ?)\";\r\n    connection.query(sql, [req.body.name, req.file.path.slice(15,req.file.path.length),\r\n      req.body.price, req.body.description, \"Συλλογή\"], function (err, result, fields) {\r\n    if (err) throw err;\r\n    \r\n    res.status(201).send({message:'New collection product Created'});\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });  \r\n \r\n})\r\n\r\nrouter.put(\"/insertcollectionproduct/:id\", isAuth, isAdmin,  upload.single('image'), async (req,res,next) =>{\r\n  const collectionId = req.params.id;  \r\n  \r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql ='SELECT * FROM products WHERE _id=?';\r\n    connection.query(sql, [collectionId], function (err, result, fields) {\r\n      if (err) throw err;\r\n    \r\n      if(Object.keys(result).length===0){\r\n        \r\n        res.send({message:'Product not found'});\r\n      }\r\n      else\r\n      {\r\n        sql = \"UPDATE products SET name=?, image=?, price=?, description=? WHERE _id=?\";\r\n        connection.query(sql, [req.body.name,req.body.image,req.body.price, req.body.description,collectionId], function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n        });\r\n\r\n        sql = \"SELECT * FROM products WHERE _id=?\";\r\n        connection.query(sql, [collectionId], function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n          res.send(result);\r\n        });\r\n      }\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });  \r\n \r\n})\r\n\r\nrouter.put(\"/changeCollectionVisibility\", isAuth, isAdmin, async (req,res,next) =>{\r\n  \r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n    var sql ='UPDATE products SET visibility=? WHERE _id=?';\r\n    connection.query(sql, [req.body.productVisibility,req.body.collectionId], function (err, result, fields) {\r\n      if (err) throw err;\r\n    \r\n      sql = \"SELECT * FROM products WHERE _id=?\";\r\n      connection.query(sql, [req.body.collectionId], function (err, result, fields) {\r\n        if (err) throw err;\r\n        res.send(result);\r\n      })\r\n\r\n    });\r\n\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n  });\r\n});\r\n\r\nrouter.put(\"/changeVisibility\", isAuth, isAdmin, async (req,res,next) =>{\r\n  \r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql ='UPDATE products SET visibility=? WHERE _id=?';\r\n    connection.query(sql, [req.body.productVisibility,req.body.productID], function (err, result, fields) {\r\n      if (err) throw err;\r\n    \r\n      sql = \"SELECT * FROM products WHERE _id=?\";\r\n      connection.query(sql, [req.body.productID], function (err, result, fields) {\r\n        if (err) throw err;\r\n        res.send(result);\r\n      })\r\n\r\n    });\r\n\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n  });\r\n});\r\n\r\nrouter.put(\"/category_percentage_change\", isAuth, isAdmin, async (req,res,next) =>{\r\n  \r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n    if(req.body.subcategory===''||req.body.subcategory==='Επέλεξε Υποκατηγορία'|| req.body.subcategory===null)\r\n    {\r\n      var sql ='UPDATE products SET percentage=? WHERE category=?';\r\n      connection.query(sql, [req.body.pricePercentage,req.body.category], function (err, result, fields) {\r\n        if (err) throw err;\r\n      \r\n        res.send({message:\"OK\"});\r\n        \r\n      });\r\n    }\r\n    else\r\n    {\r\n      var sql ='UPDATE products SET percentage=? WHERE category=? && subcategory=?';\r\n      connection.query(sql, [req.body.pricePercentage,req.body.category, req.body.subcategory], function (err, result, fields) {\r\n        if (err) throw err;\r\n      \r\n        res.send({message:\"OK\"});\r\n        \r\n      });\r\n    }\r\n\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n  });\r\n});\r\n\r\nrouter.put(\"/createproduct/:id\", isAuth, isAdmin, upload.single('image'), async (req,res,next) =>{\r\n  const productId = req.params.id;  \r\n  \r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql ='SELECT * FROM products WHERE _ID=?';\r\n    connection.query(sql, [productId], function (err, result, fields) {\r\n      if (err) throw err;\r\n    \r\n      if(Object.keys(result).length===0){\r\n        \r\n        res.send({message:'Product not found'});\r\n      }\r\n    });\r\n\r\n    sql = \"UPDATE products SET name=?, category=?, brand=?, subcategory=?, image=?, price=?, percentage=?, description=? WHERE _id=?\";\r\n        connection.query(sql, [req.body.name,req.body.category,req.body.brand, req.body.subcategory,\r\n          req.body.image,req.body.price,req.body.percentage, req.body.description,productId], function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n        });\r\n\r\n        sql = \"SELECT * FROM products WHERE _id=?\";\r\n        connection.query(sql, [productId], function (err, result, fields) {\r\n          if (err) throw err;\r\n\r\n          if(Object.keys(result).length!==0){\r\n            Object.keys(result).forEach(function(key) {\r\n                var row = result[key];\r\n                const product = {\r\n                    name: row.name,\r\n                    category: row.category,\r\n                    brand: row.brand,\r\n                    //image: row.image,\r\n                    price: row.price,\r\n                    percentage: row.percentage,\r\n                    description: row.description,\r\n                    countInStock: row.countInStock\r\n                };\r\n\r\n                res.send({\r\n                    product\r\n                })\r\n            });\r\n        }\r\n        });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });\r\n});\r\n\r\nrouter.post(\"/createcategory\", isAuth, isAdmin, upload.single('image'), async (req,res,next) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO categories (category, image) VALUES (?, ?)\";\r\n    connection.query(sql, [req.body.category, req.file.path.slice(15,req.file.path.length)], function (err, result, fields) {\r\n      if (err) throw err;\r\n      \r\n      res.status(201).send({message:'New product Created'});\r\n    });\r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });  \r\n \r\n})\r\n\r\nrouter.post(\"/manufacturerslist\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n      if (err) throw err; // not connected!\r\n      \r\n      connection.query('SELECT * FROM manufacturers ORDER BY name', function (err, result, fields) {\r\n      if (err) throw err;\r\n      \r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertmanufacturer\", isAuth, isAdmin, async (req,res,next) =>{\r\n  \r\n  mysqlConnection.getConnection(function(err, connection){\r\n    if (err) throw err; // not connected!\r\n    \r\n    /* Begin transaction */\r\n    connection.beginTransaction(function(err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"INSERT INTO manufacturers (name) VALUES (?)\";\r\n      connection.query(sql, [req.body.manufacturer], function(err, result, fields) {\r\n        if (err) { \r\n          connection.rollback(function() {\r\n            throw err;\r\n          });\r\n        }\r\n    \r\n        sql=\"SELECT * FROM manufacturers ORDER BY name\";\r\n        connection.query(sql, function(err, result) {\r\n          if (err) { \r\n            connection.rollback(function() {\r\n              throw err;\r\n            });\r\n          }\r\n          \r\n            res.send(result);\r\n\r\n          connection.commit(function(err) {\r\n            if (err) { \r\n              connection.rollback(function() {\r\n                throw err;\r\n              });\r\n            }\r\n            \r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })  \r\n}); \r\n\r\nrouter.post(\"/featuretitlelist\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n      if (err) throw err; // not connected!\r\n      \r\n      connection.query('SELECT * FROM feature_titles ORDER BY feature_title', function (err, result, fields) {\r\n      if (err) throw err;\r\n      \r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertfeaturetitle\", isAuth, isAdmin, async (req,res,next) =>{\r\n  \r\n  mysqlConnection.getConnection(function(err, connection){\r\n    if (err) throw err; // not connected!\r\n    \r\n    /* Begin transaction */\r\n    connection.beginTransaction(function(err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"INSERT INTO feature_titles (feature_title) VALUES (?)\";\r\n      connection.query(sql, [req.body.featureTitle], function(err, result, fields) {\r\n        if (err) { \r\n          connection.rollback(function() {\r\n            throw err;\r\n          });\r\n        }\r\n    \r\n        sql=\"SELECT * FROM feature_titles ORDER BY feature_title\";\r\n        connection.query(sql, function(err, result) {\r\n          if (err) { \r\n            connection.rollback(function() {\r\n              throw err;\r\n            });\r\n          }\r\n          \r\n            res.send(result);\r\n\r\n          connection.commit(function(err) {\r\n            if (err) { \r\n              connection.rollback(function() {\r\n                throw err;\r\n              });\r\n            }\r\n            \r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })  \r\n}); \r\n\r\nrouter.post(\"/featurenames\", isAuth, isAdmin, async (req, res)=>{\r\n\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n      if (err) throw err; // not connected!\r\n\r\n      var sql='SELECT DISTINCT feature_name FROM feature_names WHERE feature_title_id=? ORDER BY feature_name';\r\n      connection.query(sql, [req.body.featureTitleId], function (err, result, fields) {\r\n      if (err) throw err;\r\n      \r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertfeaturename\", isAuth, isAdmin, async (req,res,next) =>{\r\n  \r\n  mysqlConnection.getConnection(function(err, connection){\r\n    if (err) throw err; // not connected!\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function(err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"INSERT INTO feature_names (feature_title_id, feature_name) VALUES (?, ?)\";\r\n      connection.query(sql, [req.body.titleId, req.body.name], function(err, result, fields) {\r\n        if (err) { \r\n          connection.rollback(function() {\r\n            throw err;\r\n          });\r\n        }\r\n    \r\n        sql=\"SELECT * FROM feature_names WHERE feature_title_id=? ORDER BY feature_name \";\r\n        connection.query(sql,[req.body.titleId], function(err, result) {\r\n          if (err) { \r\n            connection.rollback(function() {\r\n              throw err;\r\n            });\r\n          }\r\n          \r\n            res.send(result);\r\n\r\n          connection.commit(function(err) {\r\n            if (err) { \r\n              connection.rollback(function() {\r\n                throw err;\r\n              });\r\n            }\r\n            \r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })  \r\n}); \r\n\r\nrouter.post(\"/sendinglist\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n      if (err) throw err; // not connected!\r\n      \r\n      connection.query('SELECT * FROM sendingMethods', function (err, result, fields) {\r\n      if (err) throw err;\r\n      \r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/editsendingmethod\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n      if (err) throw err; // not connected!\r\n      \r\n      connection.query('UPDATE sendingMethods SET sendingMethod=?, sendingMethodCost=? WHERE sendingMethod_id=?', \r\n        [req.body.method,req.body.cost,req.body.methodId],function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        let sql = \"SELECT * FROM sendingMethods\";\r\n        connection.query(sql, function (err, result, fields) {\r\n          if (err) throw err;\r\n          \r\n          res.send(result);\r\n        })\r\n        \r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/createsendingmethod\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n      if (err) throw err; // not connected!\r\n      \r\n      let sql = \"INSERT INTO sendingMethods (sendingMethod, sendingMethodCost) VALUES (?, ?)\";\r\n      connection.query(sql,[req.body.method,req.body.cost],function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        sql = \"SELECT * FROM sendingMethods\";\r\n        connection.query(sql, function (err, result, fields) {\r\n          if (err) throw err;\r\n          \r\n          res.send(result);\r\n        })\r\n        \r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/removesendingmethod\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n      if (err) throw err; // not connected!\r\n      \r\n      let sql = \"DELETE FROM sendingMethods WHERE sendingMethod_id=?\";\r\n      connection.query(sql,[req.body.methodId],function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        sql = \"SELECT * FROM sendingMethods\";\r\n        connection.query(sql, function (err, result, fields) {\r\n          if (err) throw err;\r\n          \r\n          res.send(result);\r\n        })\r\n        \r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/paymentlist\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n      if (err) throw err; // not connected!\r\n      \r\n      let sql=\"SELECT * FROM paymentMethods WHERE sendingMethod_id=? \";\r\n      connection.query(sql,[req.body.methodId], function (err, result, fields) {\r\n      if (err) throw err;\r\n      \r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/editpaymentlist\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n      if (err) throw err; // not connected!\r\n      \r\n      connection.query('UPDATE paymentMethods SET paymentMethod=?, paymentMethodCost=? WHERE paymentMethod_id=?', \r\n        [req.body.paymentMethod,req.body.paymentMethodCost,req.body.paymentMethodId],function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        let sql = \"SELECT * FROM paymentMethods WHERE sendingMethod_id=? \";\r\n        connection.query(sql,[req.body.sendingMethodId], function (err, result, fields) {\r\n          if (err) throw err;\r\n          \r\n          res.send(result);\r\n        })\r\n        \r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/createpaymentlist\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n      if (err) throw err; // not connected!\r\n      \r\n      let sql=\"INSERT INTO paymentMethods (paymentMethod, paymentMethodCost,sendingMethod_id) VALUES (?, ?, ?)\";\r\n      connection.query(sql,[req.body.paymentMethod,req.body.paymentMethodCost,req.body.sendingMethodId],function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        sql = \"SELECT * FROM paymentMethods WHERE sendingMethod_id=? \";\r\n        connection.query(sql,[req.body.sendingMethodId], function (err, result, fields) {\r\n          if (err) throw err;\r\n          \r\n          res.send(result);\r\n        })\r\n        \r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/removepaymentlist\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n      if (err) throw err; // not connected!\r\n      \r\n      let sql=\"DELETE FROM paymentMethods WHERE paymentMethod_id=?\";\r\n      connection.query(sql,[req.body.paymentMethodId],function (err, result, fields) {\r\n        if (err) throw err;\r\n\r\n        sql = \"SELECT * FROM paymentMethods WHERE sendingMethod_id=? \";\r\n        connection.query(sql,[req.body.sendingMethodId], function (err, result, fields) {\r\n          if (err) throw err;\r\n          \r\n          res.send(result);\r\n        })\r\n        \r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/featurelist\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n      if (err) throw err; // not connected!\r\n      \r\n      connection.query('SELECT * FROM features WHERE product_id=?', [req.body.productId], function (err, result, fields) {\r\n      if (err) throw err;\r\n      \r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertfeature\", isAuth, isAdmin, async (req,res,next) =>{\r\n  \r\n  mysqlConnection.getConnection(function(err, connection){\r\n    if (err) throw err; // not connected!\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function(err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = \"INSERT INTO features (product_id, feature_title, feature) VALUES (?, ?, ?)\";\r\n      connection.query(sql, [req.body.productId, req.body.title, req.body.name], function(err, result, fields) {\r\n        if (err) { \r\n          connection.rollback(function() {\r\n            throw err;\r\n          });\r\n        }\r\n    \r\n        sql=\"SELECT * FROM features WHERE product_id=?\";\r\n        connection.query(sql,[req.body.productId], function(err, result) {\r\n          if (err) { \r\n            connection.rollback(function() {\r\n              throw err;\r\n            });\r\n          }\r\n          \r\n            res.send(result);\r\n\r\n          connection.commit(function(err) {\r\n            if (err) { \r\n              connection.rollback(function() {\r\n                throw err;\r\n              });\r\n            }\r\n            \r\n            connection.release();\r\n          });\r\n        });\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })  \r\n}); \r\n\r\nrouter.post(\"/deletefeature\", isAuth, isAdmin, async (req,res,next) =>{\r\n  \r\n  mysqlConnection.getConnection(function(err, connection){\r\n    if (err) throw err; // not connected!\r\n\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function(err) {\r\n  if (err) { throw err; }\r\n\r\n  let sql = \"DELETE FROM features WHERE features_id=?\";\r\n  connection.query(sql, [req.body.featureId], function(err, result, fields) {\r\n    if (err) { \r\n      connection.rollback(function() {\r\n        throw err;\r\n      });\r\n    }\r\n \r\n    sql=\"SELECT * FROM features WHERE product_id=?\";\r\n    connection.query(sql, [req.body.productId], function(err, result) {\r\n      if (err) { \r\n        connection.rollback(function() {\r\n          throw err;\r\n        });\r\n      }\r\n      \r\n        res.send(result);\r\n\r\n      connection.commit(function(err) {\r\n        if (err) { \r\n          connection.rollback(function() {\r\n            throw err;\r\n          });\r\n        }\r\n        \r\n        connection.release();\r\n      });\r\n    });\r\n  });\r\n});\r\n    /* End transaction */\r\n  })  \r\n}); \r\n\r\nrouter.post(\"/categories\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n      if (err) throw err; // not connected!\r\n      \r\n      connection.query('SELECT * FROM categories', function (err, result, fields) {\r\n      if (err) throw err;\r\n      \r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/subcategories\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n      if (err) throw err; // not connected!\r\n      connection.query('SELECT * FROM categories WHERE parent_id=?',[req.body.parentId], function (err, result, fields) {\r\n      if (err) throw err;\r\n      \r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n      })\r\n  });\r\n})\r\n\r\nrouter.post(\"/compatibilitycompanylist\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.query('SELECT * FROM compatibility_company ORDER BY company', function (err, result, fields) {\r\n    if (err) throw err;\r\n    \r\n    res.send(result);\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n    })\r\n});\r\n})\r\n\r\nrouter.post(\"/compatibilitymodelslist\", isAuth, isAdmin, async (req, res) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n    connection.query('SELECT * FROM compatibility_model WHERE compatibility_company_id=? ORDER BY model',[req.body.companyId], function (err, result, fields) {\r\n    if (err) throw err;\r\n    \r\n    res.send(result);\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n    })\r\n});\r\n})\r\n\r\nrouter.post(\"/insertcompatibilitycompany\", isAuth, isAdmin, async (req,res,next) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO compatibility_company (company) VALUES (?)\";\r\n    connection.query(sql, [req.body.company], function (err, result, fields) {\r\n    if (err) throw err;\r\n\r\n    let compatibility_company_id=result.insertId;\r\n\r\n    sql = \"SELECT * FROM compatibility_company WHERE compatibility_company_id=?\";\r\n    connection.query(sql, [compatibility_company_id], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.status(201).send(result);\r\n      });\r\n    });\r\n    \r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });  \r\n \r\n})\r\n\r\nrouter.post(\"/insertcompatibilitymodel\", isAuth, isAdmin, async (req,res,next) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO compatibility_model (compatibility_company_id,model) VALUES (?,?)\";\r\n    connection.query(sql, [req.body.companyId, req.body.model], function (err, result, fields) {\r\n    if (err) throw err;\r\n\r\n    let compatibility_model_id=result.insertId;\r\n\r\n    sql = \"SELECT * FROM compatibility_model WHERE compatibility_model_id=?\";\r\n    connection.query(sql, [compatibility_model_id], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.status(201).send(result);\r\n      });\r\n    });\r\n    \r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });  \r\n \r\n})\r\n\r\nrouter.post(\"/insertcompatibility\", isAuth, isAdmin, async (req,res,next) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"INSERT INTO compatibilities (product_id,compatibility_company,compatibility_model) VALUES (?,?,?)\";\r\n    connection.query(sql, [req.body.productId, req.body.company, req.body.model], function (err, result, fields) {\r\n    if (err) throw err;\r\n\r\n    let compat_id=result.insertId;\r\n\r\n    sql = \"SELECT * FROM compatibilities WHERE compatibility_id=?\";\r\n    connection.query(sql, [compat_id], function (err, result, fields) {\r\n      if (err) throw err;\r\n\r\n      res.status(201).send(result);\r\n      });\r\n    });\r\n    \r\n\r\n    connection.release();\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });  \r\n \r\n})\r\n\r\nrouter.post(\"/getproductcompatibilities\", isAuth, isAdmin, async (req,res,next) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"SELECT * FROM compatibilities WHERE product_id=? ORDER BY compatibility_model\";\r\n    connection.query(sql, [req.body.productId], function (err, result, fields) {\r\n    if (err) throw err;\r\n\r\n    res.status(200).send(result);\r\n    connection.release();\r\n    })\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });  \r\n \r\n})\r\n\r\nrouter.post(\"/deletecompatibility\", isAuth, isAdmin, async (req,res,next) =>{\r\n  mysqlConnection.getConnection(function(err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = \"DELETE FROM compatibilities WHERE compatibility_id=?\";\r\n    connection.query(sql, [req.body.compatId], function (err, result, fields) {\r\n    if (err) throw err;\r\n\r\n    res.status(200).send({message:\"OK\"});\r\n    connection.release();\r\n    })\r\n\r\n    // Handle error after the release.\r\n    if (err) throw err;\r\n  });  \r\n \r\n})\r\n\r\n\r\nexport default router;"],"file":"adminRoute.js"}