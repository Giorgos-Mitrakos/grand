{"version":3,"sources":["../../backend/routes/paymentRoute.js"],"names":["router","express","Router","get","req","res","mysqlConnection","getConnection","err","connection","query","result","fields","send","release","post","sql","body","sendingMethodId"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,MAAM,GAAEC,oBAAQC,MAAR,EAAd;;AAEAF,MAAM,CAACG,GAAP,CAAW,iBAAX;AAAA,qEAA8B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAE1BC,mCAAgBC,aAAhB,CAA8B,UAASC,GAAT,EAAcC,UAAd,EAA0B;AACpD,kBAAID,GAAJ,EAAS,MAAMA,GAAN,CAD2C,CAChC;;AAEpBC,cAAAA,UAAU,CAACC,KAAX,CAAiB,8BAAjB,EAAiD,UAAUF,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAChF,oBAAIJ,GAAJ,EAAS,MAAMA,GAAN;AACTH,gBAAAA,GAAG,CAACQ,IAAJ,CAASF,MAAT;AACAF,gBAAAA,UAAU,CAACK,OAAX,GAHgF,CAKhF;;AACA,oBAAIN,GAAJ,EAAS,MAAMA,GAAN;AACR,eAPD;AAQH,aAXD;;AAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;AAgBAR,MAAM,CAACe,IAAP,CAAY,iBAAZ;AAAA,sEAA+B,kBAAOX,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAC3BC,mCAAgBC,aAAhB,CAA8B,UAASC,GAAT,EAAcC,UAAd,EAA0B;AACpD,kBAAID,GAAJ,EAAS,MAAMA,GAAN,CAD2C,CAChC;;AAEpB,kBAAIQ,GAAG,GAAG,qFAAV;AACAP,cAAAA,UAAU,CAACC,KAAX,CAAiBM,GAAjB,EAAsB,CAACZ,GAAG,CAACa,IAAJ,CAASC,eAAV,CAAtB,EAAkD,UAASV,GAAT,EAAcG,MAAd,EAAsB;AACpE,oBAAIH,GAAJ,EAAS,MAAMA,GAAN;AAETH,gBAAAA,GAAG,CAACQ,IAAJ,CAASF,MAAT;AACH,eAJD;AAKAF,cAAAA,UAAU,CAACK,OAAX,GAToD,CAWpD;;AACA,kBAAIN,GAAJ,EAAS,MAAMA,GAAN;AACZ,aAbD;;AAD2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;eAkBeR,M","sourcesContent":["import express from 'express';\r\nimport { getToken, isAuth, isAdmin } from '../util.js';\r\nimport mysqlConnection from '../connection';\r\n\r\nconst router= express.Router();\r\n\r\nrouter.get(\"/sendingmethods\", async (req, res)=>{\r\n    \r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT * FROM sendingMethods', function (err, result, fields) {\r\n        if (err) throw err;\r\n        res.send(result);\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.post(\"/paymentmethods\", async (req, res) =>{\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        let sql = \"SELECT paymentMethod,paymentMethodCost FROM paymentMethods WHERE sendingMethod_id=?\";\r\n        connection.query(sql, [req.body.sendingMethodId], function(err, result) {\r\n            if (err) throw err;\r\n            \r\n            res.send(result);\r\n        });\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n    });\r\n})\r\n\r\n\r\nexport default router;"],"file":"paymentRoute.js"}