{"version":3,"sources":["../../backend/routes/wishlistRoute.js"],"names":["router","express","Router","post","isAuth","req","res","mysqlConnection","getConnection","err","connection","sql","query","body","user_email","product_id","model","result","fields","console","log","send","release","status","message","beginTransaction","rollback","commit"],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport { getToken, isAuth } from '../util.js';\r\nimport mysqlConnection from '../connection';\r\n\r\nconst router= express.Router();\r\n\r\nrouter.post(\"/additem\", isAuth, async (req,res) =>{ \r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        let sql = \"INSERT INTO wishlists (user_email, product_id, model) VALUES (?,?,?)\";\r\n        connection.query(sql, [req.body.user_email,req.body.product_id,req.body.model], function (err, result, fields) {\r\n            if( err & err != \"ER_DUP_ENTRY\" ){\r\n                console.log(\"Entry is already\");\r\n            }\r\n        })\r\n                \r\n        sql = \"SELECT products._id, products.name, products.category, products.brand, products.image, products.description, products.price FROM wishlists INNER JOIN products ON wishlists.product_id = products._id WHERE wishlists.user_email=?\";\r\n        connection.query(sql, [req.body.user_email], function(err, result) {\r\n            if (err) throw err;\r\n\r\n            res.send(result);\r\n        });\r\n\r\n        connection.release();\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n         \r\n    });\r\n\r\n});\r\n\r\nrouter.post(\"/removeitem\", isAuth, async (req,res) =>{ \r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        let sql = \"DELETE FROM wishlists WHERE user_email=? && product_id=?\";\r\n        connection.query(sql, [req.body.user_email,req.body.product_id], function (err, result, fields) {\r\n            if (err) throw err;\r\n\r\n            res.status(200).send({message:\"Product deleted from wishlist\"});\r\n        })\r\n    });\r\n\r\n    connection.release();\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n    \r\n});\r\n\r\nrouter.post(\"/getwishlist\", isAuth, async (req, res) =>{\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        let sql = \"SELECT products._id, products.name, products.category, products.brand, products.image, products.description, products.price FROM wishlists INNER JOIN products ON wishlists.product_id = products._id WHERE wishlists.user_email=?\";\r\n        connection.query(sql,[req.body.user_email], function (err, result, fields) {\r\n        if (err) throw err;\r\n        console.log(\"Read products succeed\");\r\n        res.send(result);\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.post(\"/movetocart\", isAuth, async (req, res) =>{\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n        /* Begin transaction */\r\n        connection.beginTransaction(function(err) {\r\n            if (err) { throw err; }\r\n\r\n            var sql = \"INSERT INTO cart (user_email, product_id, model, quantity) VALUES (?, ?, ?, 1)\";\r\n            connection.query(sql, [req.body.user_email, req.body.product_id, req.body.model], function(err, result) {\r\n                if( err & err != \"ER_DUP_ENTRY\" ){\r\n                    console.log(\"Entry is already\");\r\n                }\r\n                \r\n                sql = \"DELETE FROM wishlists WHERE user_email=? && product_id=? && model=?\";\r\n                connection.query(sql, [req.body.user_email, req.body.product_id, req.body.model], function(err, result) {\r\n                    if (err) { \r\n                    connection.rollback(function() {\r\n                        throw err;\r\n                    });\r\n                    }\r\n                    \r\n                    connection.commit(function(err) {\r\n                    if (err) { \r\n                        connection.rollback(function() {\r\n                        throw err;\r\n                        });\r\n                    }\r\n                    console.log('Transaction Completed Successfully.');\r\n                    res.status(200).send(\"Transaction Completed Successfully.\")\r\n                    \r\n                    connection.release();\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    /* End transaction */\r\n    })\r\n});\r\n\r\nexport default router;"],"file":"wishlistRoute.js"}