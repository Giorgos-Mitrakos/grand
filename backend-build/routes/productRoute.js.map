{"version":3,"sources":["../../backend/routes/productRoute.js"],"names":["router","express","Router","get","req","res","mysqlConnection","getConnection","err","connection","query","result","fields","console","log","send","release","sql","status","collectionId","params","id","beginTransaction","rollback","commit","post","body","category","subcategory","isAuth","isAdmin","supplier","undefined","offset","resp","count","productId","sp","searchText","trim","split","search","i","length","filters","itemsPerPage","categories","subcategories"],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport mysqlConnection from '../connection';\r\nimport { isAdmin, isAuth } from '../util';\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT * FROM products WHERE visibility=1', function (err, result, fields) {\r\n            if (err) throw err;\r\n            console.log(result);\r\n            res.send(result);\r\n            connection.release();\r\n\r\n            // Handle error after the release.\r\n            if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.get(\"/collectionlist\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        var sql = `SELECT _id, name, category, brand, image, description,\r\n        countInStock, numReview, subcategory, weight, supplier, availability, \r\n        visibility, totalPrice FROM products WHERE category=? && visibility=1`;\r\n        connection.query(sql, [\"Συλλογή\"], function (err, result, fields) {\r\n            if (err) throw err;\r\n\r\n            res.status(200).send(result);\r\n        });\r\n\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n    });\r\n\r\n})\r\n\r\nrouter.get(\"/collectionrandomlist\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        var sql = `SELECT _id, name, category, brand, image, description,\r\n        countInStock, numReview, subcategory, weight, supplier, availability, \r\n        visibility, totalPrice FROM products WHERE category=? && visibility=1\r\n        ORDER BY RAND() LIMIT 10`;\r\n        connection.query(sql, [\"Συλλογή\"], function (err, result, fields) {\r\n            if (err) throw err;\r\n\r\n            res.status(200).send(result);\r\n        });\r\n\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n    });\r\n\r\n})\r\n\r\nrouter.get(\"/collectionDetails/:id\", async (req, res) => {\r\n    const collectionId = req.params.id;\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        /* Begin transaction */\r\n        connection.beginTransaction(function (err) {\r\n            if (err) { throw err; }\r\n\r\n            var sql = 'UPDATE products set numReview= numReview+1 WHERE _id=?';\r\n            connection.query(sql, collectionId, function (err, result) {\r\n                if (err) {\r\n                    connection.rollback(function () {\r\n                        throw err;\r\n                    });\r\n                }\r\n\r\n                var sql = 'SELECT _id, name, category, brand, image, description,countInStock, numReview, subcategory, weight, supplier, availability, visibility, totalPrice FROM products WHERE _id=?';\r\n                connection.query(sql, collectionId, function (err, result, fields) {\r\n                    if (err) {\r\n                        connection.rollback(function () {\r\n                            throw err;\r\n                        });\r\n                    }\r\n\r\n                    res.status(200).send(result[0]);\r\n                    connection.commit(function (err) {\r\n                        if (err) {\r\n                            connection.rollback(function () {\r\n                                throw err;\r\n                            });\r\n                        }\r\n                        console.log('Transaction Completed Successfully.');\r\n                        connection.release();\r\n\r\n                        // Handle error after the release.\r\n                        if (err) throw err;\r\n                    });\r\n                });\r\n            });\r\n        });\r\n        /* End transaction */\r\n    });\r\n})\r\n\r\nrouter.post(\"/products_by_category\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT _id, name, category, brand, image, description,countInStock, numReview, subcategory, weight, supplier, availability, visibility, totalPrice FROM products WHERE products.category=? && products.subcategory=? && products.visibility=1',\r\n            [req.body.category, req.body.subcategory], function (err, result, fields) {\r\n                if (err) throw err;\r\n                console.log(\"Read products succeed\");\r\n                res.send(result);\r\n                connection.release();\r\n\r\n                // Handle error after the release.\r\n                if (err) throw err;\r\n            })\r\n    });\r\n})\r\n\r\nrouter.get(\"/featurelist\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT * FROM features', function (err, result, fields) {\r\n            if (err) throw err;\r\n            console.log(\"Read product features succeed\");\r\n            res.send(result);\r\n            connection.release();\r\n\r\n            // Handle error after the release.\r\n            if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.post(\"/feature_title_by_category\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT DISTINCT features.feature_title FROM products LEFT JOIN features ON products._id=features.product_id WHERE products.category=? && products.subcategory=? && products.visibility=1 && features.feature_title IS NOT NULL',\r\n            [req.body.category, req.body.subcategory], function (err, result, fields) {\r\n                if (err) throw err;\r\n                console.log(\"Read products succeed\");\r\n                res.send(result);\r\n                connection.release();\r\n\r\n                // Handle error after the release.\r\n                if (err) throw err;\r\n            })\r\n    });\r\n})\r\n\r\nrouter.post(\"/feature_name_by_category\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT DISTINCT features.feature_title,features.feature FROM products LEFT JOIN features ON products._id=features.product_id WHERE products.category=? && products.subcategory=? && products.visibility=1 && features.feature_title IS NOT NULL',\r\n            [req.body.category, req.body.subcategory], function (err, result, fields) {\r\n                if (err) throw err;\r\n                console.log(\"Read products succeed\");\r\n                res.send(result);\r\n                connection.release();\r\n\r\n                // Handle error after the release.\r\n                if (err) throw err;\r\n            })\r\n    });\r\n})\r\n\r\nrouter.post(\"/compatibilities_by_category\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT * FROM products LEFT JOIN compatibilities ON products._id=compatibilities.product_id WHERE products.category=? && products.subcategory=? && products.visibility=1 && compatibilities.compatibility_company IS NOT NULL ORDER BY compatibilities.compatibility_company,compatibilities.compatibility_model ',\r\n            [req.body.category, req.body.subcategory], function (err, result, fields) {\r\n                if (err) throw err;\r\n                console.log(\"Read compatibility companies succeed\");\r\n                res.send(result);\r\n                connection.release();\r\n\r\n                // Handle error after the release.\r\n                if (err) throw err;\r\n            })\r\n    });\r\n})\r\n\r\nrouter.post(\"/products_by_category_admin\", isAuth, isAdmin, async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        if (req.body.supplier === '' || req.body.supplier === 'Επέλεξε Προμηθευτή' || req.body.supplier === null || req.body.supplier === undefined) {\r\n            if (req.body.subcategory === '' || req.body.subcategory === 'Επέλεξε Υποκατηγορία' || req.body.subcategory === null || req.body.subcategory === undefined) {\r\n                connection.query('SELECT * FROM products WHERE category=? LIMIT 20 OFFSET ? ',\r\n                    [req.body.category, req.body.offset], function (err, result, fields) {\r\n                        if (err) throw err;\r\n                        let resp = result;\r\n\r\n                        connection.query('SELECT COUNT(*) AS count FROM products WHERE category=?',\r\n                            [req.body.category], function (err, result, fields) {\r\n                                if (err) throw err;\r\n                                let count = result;\r\n\r\n                                res.send({ resp, count });\r\n                            })\r\n\r\n                    })\r\n            }\r\n            else {\r\n                connection.query('SELECT * FROM products WHERE category=? && subcategory=? LIMIT 20 OFFSET ?',\r\n                    [req.body.category, req.body.subcategory, req.body.offset], function (err, result, fields) {\r\n                        if (err) throw err;\r\n                        let resp = result;\r\n\r\n                        connection.query('SELECT COUNT(*) AS count FROM products WHERE category=? && subcategory=?',\r\n                            [req.body.category, req.body.subcategory], function (err, result, fields) {\r\n                                if (err) throw err;\r\n                                let count = result;\r\n\r\n                                res.send({ resp, count });\r\n                            })\r\n                    })\r\n            }\r\n        }\r\n        else {\r\n            if (req.body.category === '' || req.body.category === 'Επέλεξε Κατηγορία' || req.body.category === null || req.body.category === undefined) {\r\n                connection.query('SELECT * FROM products WHERE  supplier=? LIMIT 20 OFFSET ?',\r\n                    [req.body.supplier, req.body.offset], function (err, result, fields) {\r\n                        if (err) throw err;\r\n                        let resp = result;\r\n\r\n                        connection.query('SELECT COUNT(*) AS count FROM products WHERE supplier=?',\r\n                            [req.body.supplier], function (err, result, fields) {\r\n                                if (err) throw err;\r\n                                let count = result;\r\n\r\n                                res.send({ resp, count });\r\n                            })\r\n                    })\r\n            }\r\n            else {\r\n                if (req.body.subcategory === '' || req.body.subcategory === 'Επέλεξε Υποκατηγορία' || req.body.subcategory === null || req.body.subcategory === undefined) {\r\n                    connection.query('SELECT * FROM products WHERE category=? && supplier=? LIMIT 20 OFFSET ?',\r\n                        [req.body.category, req.body.supplier, req.body.offset], function (err, result, fields) {\r\n                            if (err) throw err;\r\n                            let resp = result;\r\n\r\n                            connection.query('SELECT COUNT(*) AS count FROM products WHERE category=? && supplier=?',\r\n                                [req.body.category, req.body.supplier], function (err, result, fields) {\r\n                                    if (err) throw err;\r\n                                    let count = result;\r\n\r\n                                    res.send({ resp, count });\r\n                                })\r\n                        })\r\n                }\r\n                else {\r\n                    connection.query('SELECT * FROM products WHERE category=? && subcategory=? && supplier=? LIMIT 20 OFFSET ?',\r\n                        [req.body.category, req.body.subcategory, req.body.supplier, req.body.offset], function (err, result, fields) {\r\n                            if (err) throw err;\r\n                            let resp = result;\r\n\r\n                            connection.query('SELECT COUNT(*) AS count FROM products WHERE category=? && subcategory=? && supplier=?',\r\n                                [req.body.category, req.body.subcategory, req.body.supplier], function (err, result, fields) {\r\n                                    if (err) throw err;\r\n                                    let count = result;\r\n\r\n                                    res.send({ resp, count });\r\n                                })\r\n                        })\r\n                }\r\n            }\r\n        }\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n    });\r\n})\r\n\r\nrouter.get(\"/:id\", async (req, res) => {\r\n    const productId = req.params.id;\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        /* Begin transaction */\r\n        connection.beginTransaction(function (err) {\r\n            if (err) { throw err; }\r\n\r\n            var sql = 'UPDATE products set numReview= numReview+1 WHERE _id=?';\r\n            connection.query(sql, productId, function (err, result) {\r\n                if (err) {\r\n                    connection.rollback(function () {\r\n                        throw err;\r\n                    });\r\n                }\r\n\r\n                var sql = 'SELECT _id, name, category, brand, image, description,countInStock, numReview, subcategory, weight, supplier, availability, visibility, totalPrice FROM products WHERE _id=?';\r\n                connection.query(sql, productId, function (err, result, fields) {\r\n                    if (err) {\r\n                        connection.rollback(function () {\r\n                            throw err;\r\n                        });\r\n                    }\r\n\r\n                    res.status(200).send(result[0]);\r\n                    connection.commit(function (err) {\r\n                        if (err) {\r\n                            connection.rollback(function () {\r\n                                throw err;\r\n                            });\r\n                        }\r\n                        console.log('Transaction Completed Successfully.');\r\n                        connection.release();\r\n\r\n                        // Handle error after the release.\r\n                        if (err) throw err;\r\n                    });\r\n                });\r\n            });\r\n        });\r\n        /* End transaction */\r\n    });\r\n})\r\n\r\nrouter.post(\"/most_viewed\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT _id, name, category, brand, image, description,countInStock, numReview, subcategory, weight, supplier, availability, visibility, totalPrice FROM products WHERE visibility=1 ORDER BY numReview DESC LIMIT 10', function (err, result, fields) {\r\n            if (err) throw err;\r\n            console.log(\"Most viewed products succeed\");\r\n            res.send(result);\r\n            connection.release();\r\n\r\n            // Handle error after the release.\r\n            if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.post(\"/searchForItems\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        let sp = req.body.searchText.trim().split(\" \")\r\n        let search = '';\r\n        for (let i = 0; i < sp.length; i++) {\r\n            if (i !== 0) {\r\n                search += ' && '\r\n            }\r\n            search += 'name LIKE ' + \"'%\" + sp[i] + \"%'\"\r\n        };\r\n\r\n        let filters = '';\r\n        if (req.body.filters!==null && req.body.filters.length !== 0 ) {\r\n            filters += '&&('\r\n            for (let i = 0; i < req.body.filters.length; i++) {\r\n                if (i !== 0) {\r\n                    filters += ' OR (category=\"' + req.body.filters[i].category + '\" && subcategory=\"' + req.body.filters[i].subcategory + '\")'\r\n                }\r\n                else {\r\n                    filters += ' (category=\"' + req.body.filters[i].category + '\" && subcategory=\"' + req.body.filters[i].subcategory + '\")'\r\n                }\r\n            }\r\n            filters += ')'\r\n        }\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query(`SELECT _id, name, category, brand, image, description,\r\n        countInStock, numReview, subcategory, weight, supplier, availability, \r\n        visibility, totalPrice FROM products \r\n        WHERE visibility=1 && \r\n        ${search} \r\n        ${filters}         \r\n        ORDER BY numReview DESC LIMIT ${req.body.itemsPerPage} OFFSET ${req.body.offset}`, function (err, result, fields) {\r\n            if (err) throw err;\r\n\r\n            let resp = result;\r\n\r\n            connection.query(`SELECT COUNT(*) AS count FROM products \r\n                    WHERE visibility=1 && \r\n                    ${search} \r\n                    ${filters}`,\r\n                function (err, result, fields) {\r\n                    if (err) throw err;\r\n                    let count = result;\r\n\r\n                    connection.query(`SELECT DISTINCT category FROM products \r\n                            WHERE visibility=1 && \r\n                            ${search}`,\r\n                        function (err, result, fields) {\r\n                            if (err) throw err;\r\n                            let categories = result;\r\n\r\n                            connection.query(`SELECT DISTINCT category, subcategory FROM products \r\n                            WHERE visibility=1 && \r\n                            ${search}`,\r\n                                function (err, result, fields) {\r\n                                    if (err) throw err;\r\n                                    let subcategories = result;\r\n\r\n                                    res.send({ resp, count, categories, subcategories });\r\n                                })\r\n                        })\r\n                })\r\n            connection.release();\r\n\r\n            // Handle error after the release.\r\n            if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nexport default router;"],"file":"productRoute.js"}