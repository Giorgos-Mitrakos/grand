{"version":3,"sources":["../../backend/routes/productRoute.js"],"names":["router","express","Router","get","req","res","mysqlConnection","getConnection","err","connection","query","result","fields","console","log","send","release","sql","status","collectionId","params","id","beginTransaction","rollback","commit","post","body","category","subcategory","undefined","productId"],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport mysqlConnection from '../connection';\r\n\r\nconst router= express.Router();\r\n\r\nrouter.get(\"/\", async (req, res) =>{\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT * FROM products WHERE visibility=1', function (err, result, fields) {\r\n        if (err) throw err;\r\n        console.log(result);\r\n        res.send(result);\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.get(\"/collectionlist\", async (req, res) =>{\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n    \r\n        var sql = `SELECT _id, name, category, brand, image, description,\r\n        countInStock, numReview, subcategory, weight, supplier, availability, \r\n        visibility, totalPrice FROM products WHERE category=? && visibility=1`;\r\n        connection.query(sql,[\"Συλλογή\"], function (err, result, fields) {\r\n        if (err) throw err;\r\n        \r\n        res.status(200).send(result);\r\n        });\r\n    \r\n        connection.release();\r\n    \r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n      });  \r\n     \r\n})\r\n\r\nrouter.get(\"/collectionrandomlist\", async (req, res) =>{\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n    \r\n        var sql = `SELECT _id, name, category, brand, image, description,\r\n        countInStock, numReview, subcategory, weight, supplier, availability, \r\n        visibility, totalPrice FROM products WHERE category=? && visibility=1\r\n        ORDER BY RAND() LIMIT 10`;\r\n        connection.query(sql,[\"Συλλογή\"], function (err, result, fields) {\r\n        if (err) throw err;\r\n        \r\n        res.status(200).send(result);\r\n        });\r\n    \r\n        connection.release();\r\n    \r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n      });  \r\n     \r\n})\r\n\r\nrouter.get(\"/collectionDetails/:id\", async (req, res) =>{\r\n    const collectionId = req.params.id;\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n       if (err) throw err; // not connected!\r\n\r\n       /* Begin transaction */\r\n       connection.beginTransaction(function(err) {\r\n           if (err) { throw err; }\r\n\r\n           var sql ='UPDATE products set numReview= numReview+1 WHERE _id=?';\r\n           connection.query(sql, collectionId, function(err, result) {\r\n           if (err) { \r\n               connection.rollback(function() {\r\n               throw err;\r\n               });\r\n           }\r\n                   \r\n           var sql ='SELECT _id, name, category, brand, image, description,countInStock, numReview, subcategory, weight, supplier, availability, visibility, totalPrice FROM products WHERE _id=?';\r\n           connection.query(sql,collectionId, function (err, result, fields) {\r\n               if (err) { \r\n               connection.rollback(function() {\r\n                   throw err;\r\n               });\r\n               }\r\n               \r\n               res.status(200).send(result[0]);\r\n               connection.commit(function(err) {\r\n               if (err) { \r\n                   connection.rollback(function() {\r\n                   throw err;\r\n                   });\r\n               }\r\n               console.log('Transaction Completed Successfully.');\r\n               connection.release();\r\n\r\n               // Handle error after the release.\r\n               if (err) throw err;\r\n               });\r\n           });\r\n           });\r\n       });\r\n       /* End transaction */\r\n   });\r\n})\r\n\r\nrouter.post(\"/products_by_category\", async (req, res) =>{\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT _id, name, category, brand, image, description,countInStock, numReview, subcategory, weight, supplier, availability, visibility, totalPrice FROM products WHERE products.category=? && products.subcategory=? && products.visibility=1',\r\n        [req.body.category,req.body.subcategory], function (err, result, fields) {\r\n        if (err) throw err;\r\n        console.log(\"Read products succeed\");\r\n        res.send(result);\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.get(\"/featurelist\", async (req, res) =>{\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n        \r\n        connection.query('SELECT * FROM features', function (err, result, fields) {\r\n        if (err) throw err;\r\n        console.log(\"Read product features succeed\");\r\n        res.send(result);\r\n        connection.release();\r\n  \r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n        })\r\n    });\r\n  })\r\n\r\nrouter.post(\"/feature_title_by_category\", async (req, res) =>{\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT DISTINCT features.feature_title FROM products LEFT JOIN features ON products._id=features.product_id WHERE products.category=? && products.subcategory=? && products.visibility=1 && features.feature_title IS NOT NULL',\r\n        [req.body.category,req.body.subcategory], function (err, result, fields) {\r\n        if (err) throw err;\r\n        console.log(\"Read products succeed\");\r\n        res.send(result);\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.post(\"/feature_name_by_category\", async (req, res) =>{\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT DISTINCT features.feature_title,features.feature FROM products LEFT JOIN features ON products._id=features.product_id WHERE products.category=? && products.subcategory=? && products.visibility=1 && features.feature_title IS NOT NULL',\r\n        [req.body.category,req.body.subcategory], function (err, result, fields) {\r\n        if (err) throw err;\r\n        console.log(\"Read products succeed\");\r\n        res.send(result);\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.post(\"/compatibilities_by_category\", async (req, res) =>{\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT * FROM products LEFT JOIN compatibilities ON products._id=compatibilities.product_id WHERE products.category=? && products.subcategory=? && products.visibility=1 && compatibilities.compatibility_company IS NOT NULL ORDER BY compatibilities.compatibility_company,compatibilities.compatibility_model ',\r\n        [req.body.category,req.body.subcategory], function (err, result, fields) {\r\n        if (err) throw err;\r\n        console.log(\"Read compatibility companies succeed\");\r\n        res.send(result);\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.post(\"/products_by_category_admin\", async (req, res) =>{\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        if(req.body.subcategory==='' || req.body.subcategory==='Επέλεξε Υποκατηγορία'|| req.body.subcategory===null || req.body.subcategory===undefined)\r\n        {\r\n            connection.query('SELECT * FROM products WHERE category=?',\r\n            [req.body.category,req.body.subcategory], function (err, result, fields) {\r\n            if (err) throw err;\r\n            console.log(\"Read products succeed\");\r\n            res.send(result);\r\n            })\r\n        }\r\n        else\r\n        {\r\n            connection.query('SELECT * FROM products WHERE category=? && subcategory=?',\r\n            [req.body.category,req.body.subcategory], function (err, result, fields) {\r\n            if (err) throw err;\r\n            console.log(\"Read products succeed\");\r\n            res.send(result);\r\n            })\r\n        }\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n    });\r\n})\r\n\r\nrouter.get(\"/:id\", async (req, res) =>{\r\n         const productId = req.params.id;\r\n         mysqlConnection.getConnection(function(err, connection) {\r\n            if (err) throw err; // not connected!\r\n\r\n            /* Begin transaction */\r\n            connection.beginTransaction(function(err) {\r\n                if (err) { throw err; }\r\n\r\n                var sql ='UPDATE products set numReview= numReview+1 WHERE _id=?';\r\n                connection.query(sql, productId, function(err, result) {\r\n                if (err) { \r\n                    connection.rollback(function() {\r\n                    throw err;\r\n                    });\r\n                }\r\n                        \r\n                var sql ='SELECT _id, name, category, brand, image, description,countInStock, numReview, subcategory, weight, supplier, availability, visibility, totalPrice FROM products WHERE _id=?';\r\n                connection.query(sql,productId, function (err, result, fields) {\r\n                    if (err) { \r\n                    connection.rollback(function() {\r\n                        throw err;\r\n                    });\r\n                    }\r\n                    \r\n                    res.status(200).send(result[0]);\r\n                    connection.commit(function(err) {\r\n                    if (err) { \r\n                        connection.rollback(function() {\r\n                        throw err;\r\n                        });\r\n                    }\r\n                    console.log('Transaction Completed Successfully.');\r\n                    connection.release();\r\n\r\n                    // Handle error after the release.\r\n                    if (err) throw err;\r\n                    });\r\n                });\r\n                });\r\n            });\r\n            /* End transaction */\r\n        });\r\n    })\r\n\r\nrouter.post(\"/most_viewed\", async (req, res) =>{\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT _id, name, category, brand, image, description,countInStock, numReview, subcategory, weight, supplier, availability, visibility, totalPrice FROM products WHERE visibility=1 ORDER BY numReview DESC LIMIT 10', function (err, result, fields) {\r\n        if (err) throw err;\r\n        console.log(\"Most viewed products succeed\");\r\n        res.send(result);\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n        })\r\n    });\r\n})\r\n    \r\nexport default router;"],"file":"productRoute.js"}