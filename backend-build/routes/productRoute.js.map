{"version":3,"sources":["../../backend/routes/productRoute.js"],"names":["router","express","Router","get","req","res","mysqlConnection","getConnection","err","connection","query","result","fields","console","log","send","release","sql","status","collectionId","params","id","beginTransaction","rollback","commit","post","brandsStr","body","brandFilters","length","filt","i","brand","features","filter","feature","split","compCompanyStr","compCompanyFilter","compCompFilter","compModelFilter","company","j","model","page","parseInt","iPerPage","itemsPerPage","offset","sortedBy","sortType","category","subcategory","count","products","dictinctBrands","excludedBrands","isAuth","isAdmin","supplier","undefined","resp","nameSearch","productName","trim","productId","product","compatibilities","sp","searchText","search","filters","sortBy","categories","subcategories"],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport mysqlConnection from '../connection';\r\nimport { isAdmin, isAuth } from '../util';\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT * FROM products WHERE visibility=1', function (err, result, fields) {\r\n            if (err) throw err;\r\n            console.log(result);\r\n            res.send(result);\r\n            connection.release();\r\n\r\n            // Handle error after the release.\r\n            if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.get(\"/collectionlist\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        var sql = `SELECT _id, name, category, brand, image, description,\r\n        countInStock, numReview, subcategory, weight, supplier, availability, \r\n        visibility, totalPrice FROM products WHERE category=? && visibility=1`;\r\n        connection.query(sql, [\"Συλλογή\"], function (err, result, fields) {\r\n            if (err) throw err;\r\n\r\n            res.status(200).send(result);\r\n        });\r\n\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n    });\r\n\r\n})\r\n\r\nrouter.get(\"/collectionrandomlist\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        var sql = `SELECT _id, name, category, brand, image, description,\r\n        countInStock, numReview, subcategory, weight, supplier, availability, \r\n        visibility, totalPrice FROM products WHERE category=? && visibility=1\r\n        ORDER BY RAND() LIMIT 10`;\r\n        connection.query(sql, [\"Συλλογή\"], function (err, result, fields) {\r\n            if (err) throw err;\r\n\r\n            res.status(200).send(result);\r\n        });\r\n\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n    });\r\n\r\n})\r\n\r\nrouter.get(\"/collectionDetails/:id\", async (req, res) => {\r\n    const collectionId = req.params.id;\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        /* Begin transaction */\r\n        connection.beginTransaction(function (err) {\r\n            if (err) { throw err; }\r\n\r\n            var sql = 'UPDATE products set numReview= numReview+1 WHERE _id=?';\r\n            connection.query(sql, collectionId, function (err, result) {\r\n                if (err) {\r\n                    connection.rollback(function () {\r\n                        throw err;\r\n                    });\r\n                }\r\n\r\n                var sql = 'SELECT _id, name, category, brand, image, description,countInStock, numReview, subcategory, weight, supplier, availability, visibility, totalPrice FROM products WHERE _id=?';\r\n                connection.query(sql, collectionId, function (err, result, fields) {\r\n                    if (err) {\r\n                        connection.rollback(function () {\r\n                            throw err;\r\n                        });\r\n                    }\r\n\r\n                    res.status(200).send(result[0]);\r\n                    connection.commit(function (err) {\r\n                        if (err) {\r\n                            connection.rollback(function () {\r\n                                throw err;\r\n                            });\r\n                        }\r\n                        console.log('Transaction Completed Successfully.');\r\n                        connection.release();\r\n\r\n                        // Handle error after the release.\r\n                        if (err) throw err;\r\n                    });\r\n                });\r\n            });\r\n        });\r\n        /* End transaction */\r\n    });\r\n})\r\n\r\nrouter.post(\"/products_by_category\", async (req, res) => {\r\n\r\n    let brandsStr = \"\";\r\n    if (req.body.brandFilters.length != 0) {\r\n        let filt = req.body.brandFilters;\r\n        for (let i = 0; i < filt.length; i++) {\r\n            let brand = filt[i]\r\n            if (i === 0) {\r\n                brandsStr += `&& (products.brand= '${brand}'`\r\n            }\r\n            else {\r\n                brandsStr += ` OR products.brand= '${brand}'`\r\n            }\r\n        }\r\n        brandsStr += `)`\r\n    }\r\n\r\n    let features = \"\";\r\n    if (req.body.filter.length != 0) {\r\n        features += `EXISTS\r\n        ( SELECT product_id \r\n            FROM features \r\n            WHERE products._id=features.product_id`\r\n        let filt = req.body.filter;\r\n        for (let i = 0; i < filt.length; i++) {\r\n            let feature = filt[i].split('_')\r\n            if (i === 0) {\r\n                features += ` AND ((feature_title= '${feature[0]}' \r\n                AND feature= '${feature[1]}')`\r\n            }\r\n            else {\r\n                features += ` OR (feature_title= '${feature[0]}' \r\n                AND feature= '${feature[1]}')`\r\n            }\r\n        }\r\n        features += `)) AND`\r\n    }\r\n\r\n    let compCompanyStr = \"\";\r\n    if (req.body.compCompanyFilter.length > 0) {\r\n        let compCompFilter = req.body.compCompanyFilter;\r\n        let compModelFilter = req.body.compModelFilter;\r\n\r\n        compCompanyStr += `EXISTS\r\n        ( SELECT product_id \r\n            FROM compatibilities \r\n            WHERE products._id=compatibilities.product_id`\r\n\r\n        if (req.body.compModelFilter.length === 0) {\r\n\r\n            for (let i = 0; i < compCompFilter.length; i++) {\r\n                let company = compCompFilter[i]\r\n                if (i === 0) {\r\n                    compCompanyStr += ` AND ((compatibility_company= '${company}')`\r\n                }\r\n                else {\r\n                    compCompanyStr += ` OR (compatibility_company= '${company}')`\r\n                }\r\n            }\r\n\r\n            compCompanyStr += `)) AND`\r\n        }\r\n        else\r\n        {\r\n            for (let i = 0; i < compCompFilter.length; i++) {\r\n                let company = compCompFilter[i]\r\n                if (i === 0) {                    \r\n                    for (let j = 0; j < compModelFilter.length; j++) {\r\n                        let model = compModelFilter[j];\r\n                        if(j===0)\r\n                        {\r\n                            compCompanyStr += ` AND ((`\r\n                        }\r\n                        else\r\n                        {\r\n                            compCompanyStr += ` OR (`\r\n                        }\r\n                        compCompanyStr += `compatibility_company= '${company}'\r\n                        AND compatibility_model='${model}')`\r\n                    }                    \r\n                }\r\n                else {\r\n                    for (let j = 0; j < compModelFilter.length; j++) {\r\n                        let model = compModelFilter[j];\r\n                        compCompanyStr += ` OR (`\r\n                        \r\n                        compCompanyStr += `compatibility_company= '${company}'\r\n                        AND compatibility_model='${model}')`\r\n                    }\r\n                    \r\n                }\r\n            }\r\n\r\n            compCompanyStr += `)) AND`\r\n        }\r\n        console.log(compCompanyStr)\r\n    }\r\n\r\n    let page = parseInt(req.body.page) || 0\r\n    let iPerPage = parseInt(req.body.itemsPerPage) || 12\r\n    let offset = page * iPerPage\r\n    let sortedBy = \"\";\r\n    switch (req.body.sortType) {\r\n        case \"alphabetic\":\r\n            sortedBy = \"ORDER BY name\"\r\n            break;\r\n\r\n        case \"alphabeticDESC\":\r\n            sortedBy = \"ORDER BY name DESC\"\r\n            break;\r\n\r\n        case \"price\":\r\n            sortedBy = \"ORDER BY totalPrice\"\r\n            break;\r\n\r\n        case \"priceDESC\":\r\n            sortedBy = \"ORDER BY totalPrice DESC\"\r\n            break;\r\n\r\n        default:\r\n            sortedBy = \"ORDER BY name\"\r\n            break;\r\n    }\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n        connection.beginTransaction(function (err) {\r\n            if (err) { throw err; }\r\n            var sql = `SELECT Count(*) as count\r\n            FROM products\r\n            WHERE \r\n            ${features} \r\n            ${compCompanyStr}\r\n            products.category=? \r\n            && products.subcategory=? \r\n            && products.visibility=1\r\n            ${brandsStr}\r\n            `;\r\n            connection.query(sql, [req.body.category, req.body.subcategory], function (err, result, fields) {\r\n                if (err) {\r\n                    connection.rollback(function () {\r\n                        throw err;\r\n                    });\r\n                }\r\n\r\n                let count = result[0].count;\r\n\r\n                connection.query(`SELECT _id, name, category, brand, image, description,countInStock, numReview, subcategory, weight, supplier, availability, visibility, totalPrice \r\n                FROM products\r\n                WHERE \r\n                ${features}\r\n                ${compCompanyStr}\r\n                products.category=? \r\n                && products.subcategory=? \r\n                && products.visibility=1\r\n                ${brandsStr}\r\n                ${sortedBy}\r\n                LIMIT ?\r\n                OFFSET ?`,\r\n                    [req.body.category, req.body.subcategory, iPerPage, offset], function (err, result, fields) {\r\n                        if (err) {\r\n                            connection.rollback(function () {\r\n                                throw err;\r\n                            });\r\n                        }\r\n\r\n                        let products = result;\r\n\r\n                        connection.query(`SELECT DISTINCT brand\r\n                            FROM products\r\n                            WHERE products.category=? \r\n                            && products.subcategory=? \r\n                            && products.visibility=1`,\r\n                            [req.body.category, req.body.subcategory], function (err, result, fields) {\r\n                                if (err) {\r\n                                    connection.rollback(function () {\r\n                                        throw err;\r\n                                    });\r\n                                }\r\n\r\n                                let dictinctBrands = result;\r\n\r\n                                connection.query(`SELECT DISTINCT brand\r\n                                        FROM products                                        \r\n                                        WHERE \r\n                                        ${features}\r\n                                        ${compCompanyStr}\r\n                                        products.category=? \r\n                                        && products.subcategory=? \r\n                                        && products.visibility=1`,\r\n                                    [req.body.category, req.body.subcategory], function (err, result, fields) {\r\n                                        if (err) {\r\n                                            connection.rollback(function () {\r\n                                                throw err;\r\n                                            });\r\n                                        }\r\n\r\n                                        let excludedBrands = result;\r\n\r\n                                        connection.commit(function (err) {\r\n                                            if (err) {\r\n                                                connection.rollback(function () {\r\n                                                    throw err;\r\n                                                });\r\n                                            }\r\n                                            res.status(200).send({ products, count, dictinctBrands, excludedBrands });\r\n                                            console.log('Transaction Completed Successfully.');\r\n                                        });\r\n                                    });\r\n                            });\r\n                    })\r\n                connection.release();\r\n\r\n                // Handle error after the release.\r\n                if (err) throw err;\r\n            })\r\n        })\r\n    });\r\n})\r\n\r\nrouter.get(\"/featurelist\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT * FROM features', function (err, result, fields) {\r\n            if (err) throw err;\r\n            console.log(\"Read product features succeed\");\r\n            res.send(result);\r\n            connection.release();\r\n\r\n            // Handle error after the release.\r\n            if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.post(\"/feature_title_by_category\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT DISTINCT features.feature_title FROM products LEFT JOIN features ON products._id=features.product_id WHERE products.category=? && products.subcategory=? && products.visibility=1 && features.feature_title IS NOT NULL',\r\n            [req.body.category, req.body.subcategory], function (err, result, fields) {\r\n                if (err) throw err;\r\n                console.log(\"Read products succeed\");\r\n                res.send(result);\r\n                connection.release();\r\n\r\n                // Handle error after the release.\r\n                if (err) throw err;\r\n            })\r\n    });\r\n})\r\n\r\nrouter.post(\"/feature_name_by_category\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT DISTINCT features.feature_title,features.feature FROM products LEFT JOIN features ON products._id=features.product_id WHERE products.category=? && products.subcategory=? && products.visibility=1 && features.feature_title IS NOT NULL',\r\n            [req.body.category, req.body.subcategory], function (err, result, fields) {\r\n                if (err) throw err;\r\n                console.log(\"Read products succeed\");\r\n                res.send(result);\r\n                connection.release();\r\n\r\n                // Handle error after the release.\r\n                if (err) throw err;\r\n            })\r\n    });\r\n})\r\n\r\nrouter.post(\"/compatibilities_by_category\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query(`SELECT compatibility_id,product_id,compatibility_company,compatibility_model \r\n        FROM compatibilities LEFT JOIN products \r\n        ON products._id=compatibilities.product_id \r\n        WHERE products.category=? && products.subcategory=? && products.visibility=1 && compatibilities.compatibility_company IS NOT NULL \r\n        ORDER BY compatibilities.compatibility_company,compatibilities.compatibility_model `,\r\n            [req.body.category, req.body.subcategory], function (err, result, fields) {\r\n                if (err) throw err;\r\n                console.log(\"Read compatibility companies succeed\");\r\n                res.send(result);\r\n                connection.release();\r\n\r\n                // Handle error after the release.\r\n                if (err) throw err;\r\n            })\r\n    });\r\n})\r\n\r\nrouter.post(\"/products_by_category_admin\", isAuth, isAdmin, async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        if (req.body.supplier === '' || req.body.supplier === 'Επέλεξε Προμηθευτή' || req.body.supplier === null || req.body.supplier === undefined) {\r\n            if (req.body.subcategory === '' || req.body.subcategory === 'Επέλεξε Υποκατηγορία' || req.body.subcategory === null || req.body.subcategory === undefined) {\r\n                connection.query('SELECT * FROM products WHERE category=? LIMIT 20 OFFSET ? ',\r\n                    [req.body.category, req.body.offset], function (err, result, fields) {\r\n                        if (err) throw err;\r\n                        let resp = result;\r\n\r\n                        connection.query('SELECT COUNT(*) AS count FROM products WHERE category=?',\r\n                            [req.body.category], function (err, result, fields) {\r\n                                if (err) throw err;\r\n                                let count = result;\r\n\r\n                                res.send({ resp, count });\r\n                            })\r\n\r\n                    })\r\n            }\r\n            else {\r\n                connection.query('SELECT * FROM products WHERE category=? && subcategory=? LIMIT 20 OFFSET ?',\r\n                    [req.body.category, req.body.subcategory, req.body.offset], function (err, result, fields) {\r\n                        if (err) throw err;\r\n                        let resp = result;\r\n\r\n                        connection.query('SELECT COUNT(*) AS count FROM products WHERE category=? && subcategory=?',\r\n                            [req.body.category, req.body.subcategory], function (err, result, fields) {\r\n                                if (err) throw err;\r\n                                let count = result;\r\n\r\n                                res.send({ resp, count });\r\n                            })\r\n                    })\r\n            }\r\n        }\r\n        else {\r\n            if (req.body.category === '' || req.body.category === 'Επέλεξε Κατηγορία' || req.body.category === null || req.body.category === undefined) {\r\n                connection.query('SELECT * FROM products WHERE  supplier=? LIMIT 20 OFFSET ?',\r\n                    [req.body.supplier, req.body.offset], function (err, result, fields) {\r\n                        if (err) throw err;\r\n                        let resp = result;\r\n\r\n                        connection.query('SELECT COUNT(*) AS count FROM products WHERE supplier=?',\r\n                            [req.body.supplier], function (err, result, fields) {\r\n                                if (err) throw err;\r\n                                let count = result;\r\n\r\n                                res.send({ resp, count });\r\n                            })\r\n                    })\r\n            }\r\n            else {\r\n                if (req.body.subcategory === '' || req.body.subcategory === 'Επέλεξε Υποκατηγορία' || req.body.subcategory === null || req.body.subcategory === undefined) {\r\n                    connection.query('SELECT * FROM products WHERE category=? && supplier=? LIMIT 20 OFFSET ?',\r\n                        [req.body.category, req.body.supplier, req.body.offset], function (err, result, fields) {\r\n                            if (err) throw err;\r\n                            let resp = result;\r\n\r\n                            connection.query('SELECT COUNT(*) AS count FROM products WHERE category=? && supplier=?',\r\n                                [req.body.category, req.body.supplier], function (err, result, fields) {\r\n                                    if (err) throw err;\r\n                                    let count = result;\r\n\r\n                                    res.send({ resp, count });\r\n                                })\r\n                        })\r\n                }\r\n                else {\r\n                    connection.query('SELECT * FROM products WHERE category=? && subcategory=? && supplier=? LIMIT 20 OFFSET ?',\r\n                        [req.body.category, req.body.subcategory, req.body.supplier, req.body.offset], function (err, result, fields) {\r\n                            if (err) throw err;\r\n                            let resp = result;\r\n\r\n                            connection.query('SELECT COUNT(*) AS count FROM products WHERE category=? && subcategory=? && supplier=?',\r\n                                [req.body.category, req.body.subcategory, req.body.supplier], function (err, result, fields) {\r\n                                    if (err) throw err;\r\n                                    let count = result;\r\n\r\n                                    res.send({ resp, count });\r\n                                })\r\n                        })\r\n                }\r\n            }\r\n        }\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n    });\r\n})\r\n\r\nrouter.post(\"/product_by_name_admin\", isAuth, isAdmin, async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        const nameSearch = `%${req.body.productName.trim()}%`\r\n\r\n        connection.query('SELECT * FROM products WHERE name LIKE ? LIMIT 20 OFFSET ? ',\r\n            [nameSearch, req.body.offset], function (err, result, fields) {\r\n                if (err) throw err;\r\n                let resp = result;\r\n\r\n                connection.query('SELECT COUNT(*) AS count FROM products WHERE name LIKE ?',\r\n                    [nameSearch], function (err, result, fields) {\r\n                        if (err) throw err;\r\n                        let count = result;\r\n\r\n                        res.send({ resp, count });\r\n                    })\r\n\r\n            })\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n    });\r\n})\r\n\r\nrouter.get(\"/:id\", async (req, res) => {\r\n    const productId = req.params.id;\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        /* Begin transaction */\r\n        connection.beginTransaction(function (err) {\r\n            if (err) { throw err; }\r\n\r\n            var sql = 'UPDATE products set numReview= numReview+1 WHERE _id=?';\r\n            connection.query(sql, productId, function (err, result) {\r\n                if (err) {\r\n                    connection.rollback(function () {\r\n                        throw err;\r\n                    });\r\n                }\r\n\r\n                sql = 'SELECT _id, name, category, brand, image, typicalImage, description,countInStock, numReview, subcategory, weight, supplier, availability, visibility, totalPrice FROM products WHERE _id=?';\r\n                connection.query(sql, productId, function (err, result, fields) {\r\n                    if (err) {\r\n                        connection.rollback(function () {\r\n                            throw err;\r\n                        });\r\n                    }\r\n\r\n                    var product = result[0]\r\n\r\n                    sql = 'SELECT compatibility_company, compatibility_model FROM compatibilities WHERE product_id=?';\r\n                    connection.query(sql, productId, function (err, result, fields) {\r\n                        if (err) {\r\n                            connection.rollback(function () {\r\n                                throw err;\r\n                            });\r\n                        }\r\n\r\n                        var compatibilities = result;\r\n\r\n                        sql = 'SELECT feature_title, feature FROM features WHERE product_id=?';\r\n                        connection.query(sql, productId, function (err, result, fields) {\r\n                            if (err) {\r\n                                connection.rollback(function () {\r\n                                    throw err;\r\n                                });\r\n                            }\r\n\r\n                            var features = result;\r\n\r\n                            res.status(200).send({ product, compatibilities, features });\r\n                            connection.commit(function (err) {\r\n                                if (err) {\r\n                                    connection.rollback(function () {\r\n                                        throw err;\r\n                                    });\r\n                                }\r\n                                console.log('Transaction Completed Successfully.');\r\n                                connection.release();\r\n\r\n                                // Handle error after the release.\r\n                                if (err) throw err;\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n        /* End transaction */\r\n    });\r\n})\r\n\r\nrouter.post(\"/most_viewed\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT _id, name, category, brand, image, description,countInStock, numReview, subcategory, weight, supplier, availability, visibility, totalPrice FROM products WHERE visibility=1 ORDER BY numReview DESC LIMIT 10', function (err, result, fields) {\r\n            if (err) throw err;\r\n            console.log(\"Most viewed products succeed\");\r\n            res.send(result);\r\n            connection.release();\r\n\r\n            // Handle error after the release.\r\n            if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.post(\"/searchForItems\", async (req, res) => {\r\n    mysqlConnection.getConnection(function (err, connection) {\r\n        let sp = req.body.searchText.trim().split(\" \")\r\n        let search = '(';\r\n        for (let i = 0; i < sp.length; i++) {\r\n            if (i !== 0) {\r\n                search += ' && '\r\n            }\r\n            search += 'name LIKE ' + \"'%\" + sp[i] + \"%'\"\r\n        };\r\n        search += ' OR( '\r\n        for (let i = 0; i < sp.length; i++) {\r\n            if (i !== 0) {\r\n                search += ' && '\r\n            }\r\n            search += 'subcategory LIKE ' + \"'%\" + sp[i] + \"%'\"\r\n        };\r\n        search += ' ) '\r\n        search += ' OR( '\r\n        for (let i = 0; i < sp.length; i++) {\r\n            if (i !== 0) {\r\n                search += ' && '\r\n            }\r\n            search += 'category LIKE ' + \"'%\" + sp[i] + \"%'\"\r\n        };\r\n        search += ' )) '\r\n\r\n        let filters = '';\r\n        if (req.body.filters !== null && req.body.filters.length !== 0) {\r\n            filters += '&&('\r\n            for (let i = 0; i < req.body.filters.length; i++) {\r\n                if (i !== 0) {\r\n                    filters += ' OR (category=\"' + req.body.filters[i].category + '\" && subcategory=\"' + req.body.filters[i].subcategory + '\")'\r\n                }\r\n                else {\r\n                    filters += ' (category=\"' + req.body.filters[i].category + '\" && subcategory=\"' + req.body.filters[i].subcategory + '\")'\r\n                }\r\n            }\r\n            filters += ')'\r\n        }\r\n\r\n        let sortBy = ''\r\n        switch (req.body.sortType) {\r\n            case 'Αλφαβητικά: Α-Ω':\r\n                sortBy = 'name'\r\n                break;\r\n            case 'Αλφαβητικά: Ω-Α':\r\n                sortBy = 'name DESC'\r\n                break;\r\n            case 'Τιμή αύξουσα':\r\n                sortBy = 'totalPrice'\r\n                break;\r\n            case 'Τιμή φθίνουσα':\r\n                sortBy = 'totalPrice DESC'\r\n                break;\r\n            default:\r\n                sortBy = 'numReview DESC'\r\n                break;\r\n        }\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query(`SELECT _id, name, category, brand, image, description,\r\n        countInStock, numReview, subcategory, weight, supplier, availability, \r\n        visibility, totalPrice FROM products \r\n        WHERE visibility=1 &&\r\n        ${search} \r\n        ${filters}         \r\n        ORDER BY ${sortBy} LIMIT ${req.body.itemsPerPage} OFFSET ${req.body.offset}`, function (err, result, fields) {\r\n            if (err) throw err;\r\n\r\n            let resp = result;\r\n\r\n            connection.query(`SELECT COUNT(*) AS count FROM products \r\n                    WHERE visibility=1 && \r\n                    ${search} \r\n                    ${filters}`,\r\n                function (err, result, fields) {\r\n                    if (err) throw err;\r\n                    let count = result;\r\n\r\n                    connection.query(`SELECT DISTINCT category FROM products \r\n                            WHERE visibility=1 && \r\n                            ${search}`,\r\n                        function (err, result, fields) {\r\n                            if (err) throw err;\r\n                            let categories = result;\r\n\r\n                            connection.query(`SELECT DISTINCT category, subcategory FROM products \r\n                            WHERE visibility=1 && \r\n                            ${search}`,\r\n                                function (err, result, fields) {\r\n                                    if (err) throw err;\r\n                                    let subcategories = result;\r\n\r\n                                    res.send({ resp, count, categories, subcategories });\r\n                                })\r\n                        })\r\n                })\r\n            connection.release();\r\n\r\n            // Handle error after the release.\r\n            if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nexport default router;"],"file":"productRoute.js"}