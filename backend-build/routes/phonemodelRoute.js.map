{"version":3,"sources":["../../backend/routes/phonemodelRoute.js"],"names":["router","express","Router","get","req","res","mysqlConnection","getConnection","err","connection","query","result","fields","console","log","send","release","post","isAuth","isAdmin","next","beginTransaction","sql","body","brand","rollback","countBrands","count","countCompany","commit","brand_id","phone_brand","brandID","compatibility_company_id","phoneBrandId","model","countModels","brandId","phoneBrand","undefined","companyID","countCompModels","companyId","insertId","phone_model_id","phone_model","modelID","compatibility_model_id"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEAF,MAAM,CAACG,GAAP,CAAW,GAAX;AAAA,qEAAgB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAEdC,mCAAgBC,aAAhB,CAA8B,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACvD,kBAAID,GAAJ,EAAS,MAAMA,GAAN,CAD8C,CACnC;;AAEpBC,cAAAA,UAAU,CAACC,KAAX,CAAiB,2IAAjB,EAA8J,UAAUF,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAC3L,oBAAIJ,GAAJ,EAAS,MAAMA,GAAN;AACTK,gBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAT,gBAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AACAF,gBAAAA,UAAU,CAACO,OAAX,GAJ2L,CAM3L;;AACA,oBAAIR,GAAJ,EAAS,MAAMA,GAAN;AACV,eARD;AASD,aAZD;;AAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;AAiBAR,MAAM,CAACG,GAAP,CAAW,cAAX;AAAA,sEAA2B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAEzBC,mCAAgBC,aAAhB,CAA8B,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACvD,kBAAID,GAAJ,EAAS,MAAMA,GAAN,CAD8C,CACnC;;AAEpBC,cAAAA,UAAU,CAACC,KAAX,CAAiB,2CAAjB,EAA8D,UAAUF,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAC3F,oBAAIJ,GAAJ,EAAS,MAAMA,GAAN;AACTK,gBAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAT,gBAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AACAF,gBAAAA,UAAU,CAACO,OAAX,GAJ2F,CAM3F;;AACA,oBAAIR,GAAJ,EAAS,MAAMA,GAAN;AACV,eARD;AASD,aAZD;;AAFyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;AAiBAR,MAAM,CAACiB,IAAP,CAAY,eAAZ,EAA6BC,YAA7B,EAAqCC,aAArC;AAAA,sEAA8C,kBAAOf,GAAP,EAAYC,GAAZ,EAAiBe,IAAjB;AAAA;AAAA;AAAA;AAAA;AAE5Cd,mCAAgBC,aAAhB,CAA8B,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACvD,kBAAID,GAAJ,EAAS,MAAMA,GAAN,CAD8C,CACnC;;AACpB;;AACAC,cAAAA,UAAU,CAACY,gBAAX,CAA4B,UAAUb,GAAV,EAAe;AACzC,oBAAIA,GAAJ,EAAS;AAAE,wBAAMA,GAAN;AAAY;;AAEvB,oBAAIc,GAAG,6DAAP;AACAb,gBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASC,KAAV,CAAtB,EAAwC,UAAUhB,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AACrE,sBAAIJ,GAAJ,EAAS;AACPC,oBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,4BAAMjB,GAAN;AACD,qBAFD;AAGD;;AAED,sBAAIkB,WAAW,GAAGf,MAAM,CAAC,CAAD,CAAN,CAAUgB,KAA5B;;AAEA,sBAAID,WAAW,KAAK,CAApB,EAAuB;AAErB,wBAAIJ,IAAG,gDAAP;AACAb,oBAAAA,UAAU,CAACC,KAAX,CAAiBY,IAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASC,KAAV,CAAtB,EAAwC,UAAUhB,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AACrE,0BAAIJ,GAAJ,EAAS;AACPC,wBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,gCAAMjB,GAAN;AACD,yBAFD;AAGD;;AAEDc,sBAAAA,IAAG,wEAAH;AACAb,sBAAAA,UAAU,CAACC,KAAX,CAAiBY,IAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASC,KAAV,CAAtB,EAAwC,UAAUhB,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AACrE,4BAAIJ,GAAJ,EAAS;AACPC,0BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,kCAAMjB,GAAN;AACD,2BAFD;AAGD;;AAED,4BAAIoB,YAAY,GAAGjB,MAAM,CAAC,CAAD,CAAN,CAAUgB,KAA7B;;AAEA,4BAAIC,YAAY,KAAK,CAArB,EAAwB;AACtBN,0BAAAA,IAAG,GAAG,wDAAN;AACAb,0BAAAA,UAAU,CAACC,KAAX,CAAiBY,IAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASC,KAAV,CAAtB,EAAwC,UAAUhB,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AACrE,gCAAIJ,GAAJ,EAAS;AACPC,8BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,sCAAMjB,GAAN;AACD,+BAFD;AAGD;;AAEDc,4BAAAA,IAAG,GAAG,2CAAN;AACAb,4BAAAA,UAAU,CAACC,KAAX,CAAiBY,IAAjB,EAAsB,UAAUd,GAAV,EAAeG,MAAf,EAAuB;AAC3C,kCAAIH,GAAJ,EAAS;AACPC,gCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,wCAAMjB,GAAN;AACD,iCAFD;AAGD;;AACDK,8BAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAT,8BAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AAEAF,8BAAAA,UAAU,CAACoB,MAAX,CAAkB,UAAUrB,GAAV,EAAe;AAC/B,oCAAIA,GAAJ,EAAS;AACPC,kCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,0CAAMjB,GAAN;AACD,mCAFD;AAGD;;AACDK,gCAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,gCAAAA,UAAU,CAACO,OAAX;AACD,+BARD;AASD,6BAlBD;AAmBD,2BA3BD;AA4BD,yBA9BD,MA+BK;AACHM,0BAAAA,IAAG,GAAG,2CAAN;AACAb,0BAAAA,UAAU,CAACC,KAAX,CAAiBY,IAAjB,EAAsB,UAAUd,GAAV,EAAeG,MAAf,EAAuB;AAC3C,gCAAIH,GAAJ,EAAS;AACPC,8BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,sCAAMjB,GAAN;AACD,+BAFD;AAGD;;AACDK,4BAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAT,4BAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AAEAF,4BAAAA,UAAU,CAACoB,MAAX,CAAkB,UAAUrB,GAAV,EAAe;AAC/B,kCAAIA,GAAJ,EAAS;AACPC,gCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,wCAAMjB,GAAN;AACD,iCAFD;AAGD;;AACDK,8BAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,8BAAAA,UAAU,CAACO,OAAX;AACD,6BARD;AASD,2BAlBD;AAmBD;AACF,uBA9DD;AA+DD,qBAvED;AAwED,mBA3ED,MA4EK;AACHM,oBAAAA,GAAG,GAAG,2CAAN;AACAb,oBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,UAAUd,GAAV,EAAeG,MAAf,EAAuB;AAC3C,0BAAIH,GAAJ,EAAS;AACPC,wBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,gCAAMjB,GAAN;AACD,yBAFD;AAGD;;AACDK,sBAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAT,sBAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AAEAF,sBAAAA,UAAU,CAACoB,MAAX,CAAkB,UAAUrB,GAAV,EAAe;AAC/B,4BAAIA,GAAJ,EAAS;AACPC,0BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,kCAAMjB,GAAN;AACD,2BAFD;AAGD;;AACDK,wBAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,wBAAAA,UAAU,CAACO,OAAX;AACD,uBARD;AASD,qBAlBD;AAmBD;AACF,iBA3GD;AA4GD,eAhHD;AAiHA;AACD,aArHD;;AAF4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9C;;AAAA;AAAA;AAAA;AAAA;AA0HAhB,MAAM,CAACiB,IAAP,CAAY,eAAZ,EAA6BC,YAA7B,EAAqCC,aAArC;AAAA,sEAA8C,kBAAOf,GAAP,EAAYC,GAAZ,EAAiBe,IAAjB;AAAA;AAAA;AAAA;AAAA;AAE5Cd,mCAAgBC,aAAhB,CAA8B,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACvD,kBAAID,GAAJ,EAAS,MAAMA,GAAN,CAD8C,CACnC;;AACpB;;AACAC,cAAAA,UAAU,CAACY,gBAAX,CAA4B,UAAUb,GAAV,EAAe;AACzC,oBAAIA,GAAJ,EAAS;AAAE,wBAAMA,GAAN;AAAY;;AAEvB,oBAAIc,GAAG,oDAAP;AACAb,gBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASO,QAAV,CAAtB,EAA2C,UAAUtB,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AACxE,sBAAIJ,GAAJ,EAAS;AACPC,oBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,4BAAMjB,GAAN;AACD,qBAFD;AAGD;;AAEDc,kBAAAA,GAAG,oDAAH;AACAb,kBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASO,QAAV,CAAtB,EAA2C,UAAUtB,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AACxE,wBAAIJ,GAAJ,EAAS;AACPC,sBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,8BAAMjB,GAAN;AACD,uBAFD;AAGD;;AAEDc,oBAAAA,GAAG,+EAAH;AACAb,oBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASQ,WAAV,CAAtB,EAA8C,UAAUvB,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAAA;;AAC3E,0BAAIJ,GAAJ,EAAS;AACPC,wBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,gCAAMjB,GAAN;AACD,yBAFD;AAGD;;AAED,0BAAIwB,OAAO,eAAGrB,MAAM,CAAC,CAAD,CAAT,6CAAG,SAAWsB,wBAAzB;;AAEA,0BAAID,OAAO,GAAG,CAAd,EAAiB;AACfV,wBAAAA,GAAG,GAAG,kEAAN;AACAb,wBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAACU,OAAD,CAAtB,EAAiC,UAAUxB,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAC9D,8BAAIJ,GAAJ,EAAS;AACPC,4BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,oCAAMjB,GAAN;AACD,6BAFD;AAGD;;AAEDc,0BAAAA,GAAG,GAAG,oEAAN;AACAb,0BAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAACU,OAAD,CAAtB,EAAiC,UAAUxB,GAAV,EAAeG,MAAf,EAAuB;AACtD,gCAAIH,GAAJ,EAAS;AACPC,8BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,sCAAMjB,GAAN;AACD,+BAFD;AAGD;;AAEDc,4BAAAA,GAAG,GAAG,2CAAN;AACAb,4BAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,UAAUd,GAAV,EAAeG,MAAf,EAAuB;AAC3C,kCAAIH,GAAJ,EAAS;AACPC,gCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,wCAAMjB,GAAN;AACD,iCAFD;AAGD;;AACDH,8BAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AAEAF,8BAAAA,UAAU,CAACoB,MAAX,CAAkB,UAAUrB,GAAV,EAAe;AAC/B,oCAAIA,GAAJ,EAAS;AACPC,kCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,0CAAMjB,GAAN;AACD,mCAFD;AAGD;;AACDK,gCAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,gCAAAA,UAAU,CAACO,OAAX;AACD,+BARD;AASD,6BAjBD;AAkBD,2BA1BD;AA2BD,yBAnCD;AAoCD,uBAtCD,MAuCK;AACHM,wBAAAA,GAAG,GAAG,2CAAN;AACAb,wBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,UAAUd,GAAV,EAAeG,MAAf,EAAuB;AAC3C,8BAAIH,GAAJ,EAAS;AACPC,4BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,oCAAMjB,GAAN;AACD,6BAFD;AAGD;;AACDH,0BAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AAEAF,0BAAAA,UAAU,CAACoB,MAAX,CAAkB,UAAUrB,GAAV,EAAe;AAC/B,gCAAIA,GAAJ,EAAS;AACPC,8BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,sCAAMjB,GAAN;AACD,+BAFD;AAGD;;AACDK,4BAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,4BAAAA,UAAU,CAACO,OAAX;AACD,2BARD;AASD,yBAjBD;AAkBD;AACF,qBArED;AAsED,mBA9ED;AA+ED,iBAvFD;AAwFD,eA5FD;AA6FA;AACD,aAjGD;;AAF4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9C;;AAAA;AAAA;AAAA;AAAA;AAsGAhB,MAAM,CAACiB,IAAP,CAAY,cAAZ;AAAA,sEAA4B,kBAAOb,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAE1BC,mCAAgBC,aAAhB,CAA8B,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACvD,kBAAID,GAAJ,EAAS,MAAMA,GAAN,CAD8C,CACnC;;AAEpB,kBAAIc,GAAG,GAAG,kEAAV;AACAb,cAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASW,YAAV,CAAtB,EAA+C,UAAU1B,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAC5E,oBAAIJ,GAAJ,EAAS,MAAMA,GAAN;AACTK,gBAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAT,gBAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AACAF,gBAAAA,UAAU,CAACO,OAAX,GAJ4E,CAM5E;;AACA,oBAAIR,GAAJ,EAAS,MAAMA,GAAN;AACV,eARD;AASD,aAbD;;AAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;AAkBAR,MAAM,CAACiB,IAAP,CAAY,oBAAZ,EAAkCC,YAAlC,EAA0CC,aAA1C;AAAA,sEAAmD,kBAAOf,GAAP,EAAYC,GAAZ,EAAiBe,IAAjB;AAAA;AAAA;AAAA;AAAA;AAEjDd,mCAAgBC,aAAhB,CAA8B,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACvD,kBAAID,GAAJ,EAAS,MAAMA,GAAN,CAD8C,CACnC;;AACpB;;AACAC,cAAAA,UAAU,CAACY,gBAAX,CAA4B,UAAUb,GAAV,EAAe;AACzC,oBAAIA,GAAJ,EAAS;AAAE,wBAAMA,GAAN;AAAY;;AAEvB,oBAAIc,GAAG,6DAAP;AACAb,gBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASY,KAAV,CAAtB,EAAwC,UAAU3B,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AACrE,sBAAIJ,GAAJ,EAAS;AACPC,oBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,4BAAMjB,GAAN;AACD,qBAFD;AAGD;;AAED,sBAAI4B,WAAW,GAAGzB,MAAM,CAAC,CAAD,CAAN,CAAUgB,KAA5B;;AAEA,sBAAIS,WAAW,KAAK,CAApB,EAAuB;AAErBd,oBAAAA,GAAG,GAAG,gEAAN;AACAb,oBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASc,OAAV,EAAmBjC,GAAG,CAACmB,IAAJ,CAASY,KAA5B,CAAtB,EAA0D,UAAU3B,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AACvF,0BAAIJ,GAAJ,EAAS;AACPC,wBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,gCAAMjB,GAAN;AACD,yBAFD;AAGD;;AAEDc,sBAAAA,GAAG,0DAAH;AACAb,sBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASc,OAAV,CAAtB,EAA0C,UAAU7B,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAAA;;AACvE,4BAAIJ,GAAJ,EAAS;AACPC,0BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,kCAAMjB,GAAN;AACD,2BAFD;AAGD;;AAED,4BAAI8B,UAAU,gBAAG3B,MAAM,CAAC,CAAD,CAAT,8CAAG,UAAWa,KAA5B;;AAEA,4BAAIc,UAAU,IAAIA,UAAU,KAAKC,SAAjC,EAA4C;AAE1CjB,0BAAAA,GAAG,+EAAH;AACAb,0BAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAACgB,UAAD,CAAtB,EAAoC,UAAU9B,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAAA;;AACjE,gCAAIJ,GAAJ,EAAS;AACPC,8BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,sCAAMjB,GAAN;AACD,+BAFD;AAGD;;AAED,gCAAIgC,SAAS,gBAAG7B,MAAM,CAAC,CAAD,CAAT,8CAAG,UAAWsB,wBAA3B;;AAEA,gCAAIO,SAAS,IAAIA,SAAS,GAAG,CAA7B,EAAgC;AAE9B,kCAAIlB,KAAG,8IAAP;AAGAb,8BAAAA,UAAU,CAACC,KAAX,CAAiBY,KAAjB,EAAsB,CAACkB,SAAD,EAAYpC,GAAG,CAACmB,IAAJ,CAASY,KAArB,CAAtB,EAAmD,UAAU3B,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAChF,oCAAIJ,GAAJ,EAAS;AACPC,kCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,0CAAMjB,GAAN;AACD,mCAFD;AAGD;;AAED,oCAAIiC,eAAe,GAAG9B,MAAM,CAAC,CAAD,CAAN,CAAUgB,KAAhC;;AAEA,oCAAIc,eAAe,KAAK,CAAxB,EAA2B;AAEzBnB,kCAAAA,KAAG,GAAG,iFAAN;AACAb,kCAAAA,UAAU,CAACC,KAAX,CAAiBY,KAAjB,EAAsB,CAACkB,SAAD,EAAYpC,GAAG,CAACmB,IAAJ,CAASY,KAArB,CAAtB,EAAmD,UAAU3B,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAChF,wCAAIJ,GAAJ,EAAS;AACPC,sCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,8CAAMjB,GAAN;AACD,uCAFD;AAGD;;AAEDc,oCAAAA,KAAG,GAAG,mEAAN;AACAb,oCAAAA,UAAU,CAACC,KAAX,CAAiBY,KAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASc,OAAV,CAAtB,EAA0C,UAAU7B,GAAV,EAAeG,MAAf,EAAuB;AAC/D,0CAAIH,GAAJ,EAAS;AACPC,wCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,gDAAMjB,GAAN;AACD,yCAFD;AAGD;;AACDK,sCAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAT,sCAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AAEAF,sCAAAA,UAAU,CAACoB,MAAX,CAAkB,UAAUrB,GAAV,EAAe;AAC/B,4CAAIA,GAAJ,EAAS;AACPC,0CAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,kDAAMjB,GAAN;AACD,2CAFD;AAGD;;AACDK,wCAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,wCAAAA,UAAU,CAACO,OAAX;AACD,uCARD;AASD,qCAlBD;AAoBD,mCA5BD;AA8BD,iCAjCD,MAkCK;AACHM,kCAAAA,KAAG,GAAG,mEAAN;AACAb,kCAAAA,UAAU,CAACC,KAAX,CAAiBY,KAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASc,OAAV,CAAtB,EAA0C,UAAU7B,GAAV,EAAeG,MAAf,EAAuB;AAC/D,wCAAIH,GAAJ,EAAS;AACPC,sCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,8CAAMjB,GAAN;AACD,uCAFD;AAGD;;AACDK,oCAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAT,oCAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AAEAF,oCAAAA,UAAU,CAACoB,MAAX,CAAkB,UAAUrB,GAAV,EAAe;AAC/B,0CAAIA,GAAJ,EAAS;AACPC,wCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,gDAAMjB,GAAN;AACD,yCAFD;AAGD;;AACDK,sCAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,sCAAAA,UAAU,CAACO,OAAX;AACD,qCARD;AASD,mCAlBD;AAmBD;AAEF,+BAlED;AAoED,6BAzED,MA0EK;AAEHM,8BAAAA,GAAG,GAAG,wDAAN;AACAb,8BAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAACgB,UAAD,CAAtB,EAAoC,UAAU9B,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AACjE,oCAAIJ,GAAJ,EAAS;AACPC,kCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,0CAAMjB,GAAN;AACD,mCAFD;AAGD;;AAED,oCAAIkC,SAAS,GAAG/B,MAAM,CAACgC,QAAvB;AAEArB,gCAAAA,GAAG,GAAG,+EAAN;AACAb,gCAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAACoB,SAAD,EAAYtC,GAAG,CAACmB,IAAJ,CAASY,KAArB,CAAtB,EAAmD,UAAU3B,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAChF,sCAAIJ,GAAJ,EAAS;AACPC,oCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,4CAAMjB,GAAN;AACD,qCAFD;AAGD;;AAEDc,kCAAAA,GAAG,GAAG,mEAAN;AACAb,kCAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASc,OAAV,CAAtB,EAA0C,UAAU7B,GAAV,EAAeG,MAAf,EAAuB;AAC/D,wCAAIH,GAAJ,EAAS;AACPC,sCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,8CAAMjB,GAAN;AACD,uCAFD;AAGD;;AACDK,oCAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAT,oCAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AAEAF,oCAAAA,UAAU,CAACoB,MAAX,CAAkB,UAAUrB,GAAV,EAAe;AAC/B,0CAAIA,GAAJ,EAAS;AACPC,wCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,gDAAMjB,GAAN;AACD,yCAFD;AAGD;;AACDK,sCAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,sCAAAA,UAAU,CAACO,OAAX;AACD,qCARD;AASD,mCAlBD;AAoBD,iCA5BD;AA8BD,+BAxCD;AA2CD;AAEF,2BAnID;AAqID,yBAxID,MAyIK;AAEHM,0BAAAA,GAAG,GAAG,mEAAN;AACAb,0BAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASc,OAAV,CAAtB,EAA0C,UAAU7B,GAAV,EAAeG,MAAf,EAAuB;AAC/D,gCAAIH,GAAJ,EAAS;AACPC,8BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,sCAAMjB,GAAN;AACD,+BAFD;AAGD;;AACDK,4BAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAT,4BAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AAEAF,4BAAAA,UAAU,CAACoB,MAAX,CAAkB,UAAUrB,GAAV,EAAe;AAC/B,kCAAIA,GAAJ,EAAS;AACPC,gCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,wCAAMjB,GAAN;AACD,iCAFD;AAGD;;AACDK,8BAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,8BAAAA,UAAU,CAACO,OAAX;AACD,6BARD;AASD,2BAlBD;AAoBD;AAEF,uBA3KD;AA6KD,qBArLD;AAsLD,mBAzLD,MA0LK;AACHM,oBAAAA,GAAG,GAAG,mEAAN;AACAb,oBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASc,OAAV,CAAtB,EAA0C,UAAU7B,GAAV,EAAeG,MAAf,EAAuB;AAC/D,0BAAIH,GAAJ,EAAS;AACPC,wBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,gCAAMjB,GAAN;AACD,yBAFD;AAGD;;AACDK,sBAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAT,sBAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AAEAF,sBAAAA,UAAU,CAACoB,MAAX,CAAkB,UAAUrB,GAAV,EAAe;AAC/B,4BAAIA,GAAJ,EAAS;AACPC,0BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,kCAAMjB,GAAN;AACD,2BAFD;AAGD;;AACDK,wBAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,wBAAAA,UAAU,CAACO,OAAX;AACD,uBARD;AASD,qBAlBD;AAmBD;AACF,iBAzND;AA0ND,eA9ND;AA+NA;AACD,aAnOD;;AAFiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnD;;AAAA;AAAA;AAAA;AAAA;AAwOAhB,MAAM,CAACiB,IAAP,CAAY,oBAAZ,EAAkCC,YAAlC,EAA0CC,aAA1C;AAAA,sEAAmD,kBAAOf,GAAP,EAAYC,GAAZ,EAAiBe,IAAjB;AAAA;AAAA;AAAA;AAAA;AAEjDd,mCAAgBC,aAAhB,CAA8B,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACvD,kBAAID,GAAJ,EAAS,MAAMA,GAAN,CAD8C,CACnC;;AACpB;;AACAC,cAAAA,UAAU,CAACY,gBAAX,CAA4B,UAAUb,GAAV,EAAe;AACzC,oBAAIA,GAAJ,EAAS;AAAE,wBAAMA,GAAN;AAAY;;AAEnB,oBAAIc,GAAG,GAAG,6EAAV;AACAb,gBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASQ,WAAV,CAAtB,EAA8C,UAAUvB,GAAV,EAAeG,MAAf,EAAuB;AAAA;;AACnE,sBAAIH,GAAJ,EAAS;AACPC,oBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,4BAAMjB,GAAN;AACD,qBAFD;AAGD;;AAED,sBAAIgC,SAAS,gBAAG7B,MAAM,CAAC,CAAD,CAAT,8CAAG,UAAWsB,wBAA3B;AAEAX,kBAAAA,GAAG,GAAG,iDAAN;AACAb,kBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASqB,cAAV,CAAtB,EAAiD,UAAUpC,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAC9E,wBAAIJ,GAAJ,EAAS;AACPC,sBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,8BAAMjB,GAAN;AACD,uBAFD;AAGD;;AAEDc,oBAAAA,GAAG,GAAG,sGAAN;AACAb,oBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASsB,WAAV,EAAuBL,SAAvB,CAAtB,EAAyD,UAAUhC,GAAV,EAAeG,MAAf,EAAuB;AAAA;;AAC9E,0BAAIH,GAAJ,EAAS;AACPC,wBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,gCAAMjB,GAAN;AACD,yBAFD;AAGD;;AAED,0BAAIsC,OAAO,gBAAGnC,MAAM,CAAC,CAAD,CAAT,8CAAG,UAAWoC,sBAAzB;;AAEA,0BAAID,OAAO,GAAG,CAAd,EAAiB;AACfxB,wBAAAA,GAAG,GAAG,iEAAN;AACAb,wBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAACwB,OAAD,CAAtB,EAAiC,UAAUtC,GAAV,EAAeG,MAAf,EAAuB;AACtD,8BAAIH,GAAJ,EAAS;AACPC,4BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,oCAAMjB,GAAN;AACD,6BAFD;AAGD;;AAEDc,0BAAAA,GAAG,GAAG,mEAAN;AACAb,0BAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASO,QAAV,CAAtB,EAA2C,UAAUtB,GAAV,EAAeG,MAAf,EAAuB;AAChE,gCAAIH,GAAJ,EAAS;AACPC,8BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,sCAAMjB,GAAN;AACD,+BAFD;AAGD;;AACDK,4BAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAT,4BAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AAEAF,4BAAAA,UAAU,CAACoB,MAAX,CAAkB,UAAUrB,GAAV,EAAe;AAC/B,kCAAIA,GAAJ,EAAS;AACPC,gCAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,wCAAMjB,GAAN;AACD,iCAFD;AAGD;;AACDK,8BAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,8BAAAA,UAAU,CAACO,OAAX;AACD,6BARD;AASD,2BAlBD;AAmBD,yBA3BD;AA4BD,uBA9BD,MA+BK;AACHM,wBAAAA,GAAG,GAAG,mEAAN;AACAb,wBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASc,OAAV,CAAtB,EAA0C,UAAU7B,GAAV,EAAeG,MAAf,EAAuB;AAC/D,8BAAIH,GAAJ,EAAS;AACPC,4BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,oCAAMjB,GAAN;AACD,6BAFD;AAGD;;AACDK,0BAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAT,0BAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AAEAF,0BAAAA,UAAU,CAACoB,MAAX,CAAkB,UAAUrB,GAAV,EAAe;AAC/B,gCAAIA,GAAJ,EAAS;AACPC,8BAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAY;AAC9B,sCAAMjB,GAAN;AACD,+BAFD;AAGD;;AACDK,4BAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,4BAAAA,UAAU,CAACO,OAAX;AACD,2BARD;AASD,yBAlBD;AAmBD;AACF,qBA9DD;AAgED,mBAxED;AA0ED,iBApFD;AAsFL,eA1FD;AA2FA;AACD,aA/FD;;AAFiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnD;;AAAA;AAAA;AAAA;AAAA;eAqGehB,M","sourcesContent":["import express from 'express';\r\nimport { isAdmin, isAuth } from '../util';\r\nimport mysqlConnection from '../connection';\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/\", async (req, res) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('SELECT * FROM phone_brands INNER JOIN phone_models ON phone_brands.phone_brand_id=phone_models.phone_brand_id ORDER BY phone_brands.brand', function (err, result, fields) {\r\n      if (err) throw err;\r\n      console.log(\"Read user succeed\");\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.get(\"/phoneBrands\", async (req, res) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    connection.query('SELECT * FROM phone_brands ORDER BY brand', function (err, result, fields) {\r\n      if (err) throw err;\r\n      console.log(\"Read phone brand succeed\");\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertbrand/\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = `SELECT COUNT(*) as count FROM phone_brands WHERE brand=?`;\r\n      connection.query(sql, [req.body.brand], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        let countBrands = result[0].count;\r\n\r\n        if (countBrands === 0) {\r\n\r\n          let sql = `INSERT INTO phone_brands (brand) VALUES (?)`;\r\n          connection.query(sql, [req.body.brand], function (err, result, fields) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            sql = `SELECT COUNT(*) as count FROM compatibility_company WHERE company=?`;\r\n            connection.query(sql, [req.body.brand], function (err, result, fields) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n\r\n              let countCompany = result[0].count;\r\n\r\n              if (countCompany === 0) {\r\n                sql = \"INSERT INTO compatibility_company (company) VALUES (?)\";\r\n                connection.query(sql, [req.body.brand], function (err, result, fields) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n\r\n                  sql = \"SELECT * FROM phone_brands ORDER BY brand\";\r\n                  connection.query(sql, function (err, result) {\r\n                    if (err) {\r\n                      connection.rollback(function () {\r\n                        throw err;\r\n                      });\r\n                    }\r\n                    console.log(\"Read phone brands succeed\");\r\n                    res.send(result);\r\n\r\n                    connection.commit(function (err) {\r\n                      if (err) {\r\n                        connection.rollback(function () {\r\n                          throw err;\r\n                        });\r\n                      }\r\n                      console.log('Transaction Completed Successfully.');\r\n                      connection.release();\r\n                    });\r\n                  });\r\n                });\r\n              }\r\n              else {\r\n                sql = \"SELECT * FROM phone_brands ORDER BY brand\";\r\n                connection.query(sql, function (err, result) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n                  console.log(\"Read phone brands succeed\");\r\n                  res.send(result);\r\n\r\n                  connection.commit(function (err) {\r\n                    if (err) {\r\n                      connection.rollback(function () {\r\n                        throw err;\r\n                      });\r\n                    }\r\n                    console.log('Transaction Completed Successfully.');\r\n                    connection.release();\r\n                  });\r\n                });\r\n              }\r\n            });\r\n          })\r\n        }\r\n        else {\r\n          sql = \"SELECT * FROM phone_brands ORDER BY brand\";\r\n          connection.query(sql, function (err, result) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n            console.log(\"Read phone brands succeed\");\r\n            res.send(result);\r\n\r\n            connection.commit(function (err) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n              console.log('Transaction Completed Successfully.');\r\n              connection.release();\r\n            });\r\n          });\r\n        }\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/deletebrand/\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = `DELETE FROM phone_models WHERE phone_brand_id=?`;\r\n      connection.query(sql, [req.body.brand_id], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        sql = `DELETE FROM phone_brands WHERE phone_brand_id=?`;\r\n        connection.query(sql, [req.body.brand_id], function (err, result, fields) {\r\n          if (err) {\r\n            connection.rollback(function () {\r\n              throw err;\r\n            });\r\n          }\r\n\r\n          sql = `SELECT compatibility_company_id FROM compatibility_company WHERE company=?`;\r\n          connection.query(sql, [req.body.phone_brand], function (err, result, fields) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            let brandID = result[0]?.compatibility_company_id;\r\n\r\n            if (brandID > 0) {\r\n              sql = \"DELETE FROM compatibility_model WHERE compatibility_company_id=?\";\r\n              connection.query(sql, [brandID], function (err, result, fields) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n\r\n                sql = \"DELETE FROM compatibility_company WHERE compatibility_company_id=?\";\r\n                connection.query(sql, [brandID], function (err, result) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n\r\n                  sql = \"SELECT * FROM phone_brands ORDER BY brand\";\r\n                  connection.query(sql, function (err, result) {\r\n                    if (err) {\r\n                      connection.rollback(function () {\r\n                        throw err;\r\n                      });\r\n                    }\r\n                    res.send(result);\r\n\r\n                    connection.commit(function (err) {\r\n                      if (err) {\r\n                        connection.rollback(function () {\r\n                          throw err;\r\n                        });\r\n                      }\r\n                      console.log('Transaction Completed Successfully.');\r\n                      connection.release();\r\n                    });\r\n                  })\r\n                });\r\n              });\r\n            }\r\n            else {\r\n              sql = \"SELECT * FROM phone_brands ORDER BY brand\";\r\n              connection.query(sql, function (err, result) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n                res.send(result);\r\n\r\n                connection.commit(function (err) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n                  console.log('Transaction Completed Successfully.');\r\n                  connection.release();\r\n                });\r\n              })\r\n            }\r\n          });\r\n        })\r\n      });\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/phoneModels\", async (req, res) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n\r\n    var sql = 'SELECT * FROM phone_models WHERE phone_brand_id=? ORDER BY model';\r\n    connection.query(sql, [req.body.phoneBrandId], function (err, result, fields) {\r\n      if (err) throw err;\r\n      console.log(\"Read models succeed\");\r\n      res.send(result);\r\n      connection.release();\r\n\r\n      // Handle error after the release.\r\n      if (err) throw err;\r\n    })\r\n  });\r\n})\r\n\r\nrouter.post(\"/insertphonemodel/\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n\r\n      let sql = `SELECT COUNT(*) as count FROM phone_models WHERE model=?`;\r\n      connection.query(sql, [req.body.model], function (err, result, fields) {\r\n        if (err) {\r\n          connection.rollback(function () {\r\n            throw err;\r\n          });\r\n        }\r\n\r\n        let countModels = result[0].count;\r\n\r\n        if (countModels === 0) {\r\n\r\n          sql = \"INSERT INTO phone_models (phone_brand_id, model) VALUES (?, ?)\";\r\n          connection.query(sql, [req.body.brandId, req.body.model], function (err, result, fields) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            sql = `SELECT brand FROM phone_brands WHERE phone_brand_id=?`;\r\n            connection.query(sql, [req.body.brandId], function (err, result, fields) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n\r\n              let phoneBrand = result[0]?.brand;\r\n\r\n              if (phoneBrand && phoneBrand !== undefined) {\r\n\r\n                sql = `SELECT compatibility_company_id FROM compatibility_company WHERE company=?`;\r\n                connection.query(sql, [phoneBrand], function (err, result, fields) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n\r\n                  let companyID = result[0]?.compatibility_company_id;\r\n\r\n                  if (companyID && companyID > 0) {\r\n\r\n                    let sql = `SELECT COUNT(*) as count FROM compatibility_model \r\n                    WHERE compatibility_company_id=?\r\n                    AND model=?`;\r\n                    connection.query(sql, [companyID, req.body.model], function (err, result, fields) {\r\n                      if (err) {\r\n                        connection.rollback(function () {\r\n                          throw err;\r\n                        });\r\n                      }\r\n\r\n                      let countCompModels = result[0].count;\r\n\r\n                      if (countCompModels === 0) {\r\n\r\n                        sql = \"INSERT INTO compatibility_model (compatibility_company_id, model) VALUES (?, ?)\";\r\n                        connection.query(sql, [companyID, req.body.model], function (err, result, fields) {\r\n                          if (err) {\r\n                            connection.rollback(function () {\r\n                              throw err;\r\n                            });\r\n                          }\r\n\r\n                          sql = \"SELECT * FROM phone_models WHERE phone_brand_id=? ORDER BY model \";\r\n                          connection.query(sql, [req.body.brandId], function (err, result) {\r\n                            if (err) {\r\n                              connection.rollback(function () {\r\n                                throw err;\r\n                              });\r\n                            }\r\n                            console.log(\"Read phone brands succeed\");\r\n                            res.send(result);\r\n\r\n                            connection.commit(function (err) {\r\n                              if (err) {\r\n                                connection.rollback(function () {\r\n                                  throw err;\r\n                                });\r\n                              }\r\n                              console.log('Transaction Completed Successfully.');\r\n                              connection.release();\r\n                            });\r\n                          });\r\n\r\n                        })\r\n\r\n                      }\r\n                      else {\r\n                        sql = \"SELECT * FROM phone_models WHERE phone_brand_id=? ORDER BY model \";\r\n                        connection.query(sql, [req.body.brandId], function (err, result) {\r\n                          if (err) {\r\n                            connection.rollback(function () {\r\n                              throw err;\r\n                            });\r\n                          }\r\n                          console.log(\"Read phone brands succeed\");\r\n                          res.send(result);\r\n\r\n                          connection.commit(function (err) {\r\n                            if (err) {\r\n                              connection.rollback(function () {\r\n                                throw err;\r\n                              });\r\n                            }\r\n                            console.log('Transaction Completed Successfully.');\r\n                            connection.release();\r\n                          });\r\n                        });\r\n                      }\r\n\r\n                    })\r\n\r\n                  }\r\n                  else {\r\n\r\n                    sql = \"INSERT INTO compatibility_company (company) VALUES (?)\";\r\n                    connection.query(sql, [phoneBrand], function (err, result, fields) {\r\n                      if (err) {\r\n                        connection.rollback(function () {\r\n                          throw err;\r\n                        });\r\n                      }\r\n\r\n                      let companyId = result.insertId;\r\n\r\n                      sql = \"INSERT INTO compatibility_model (compatibility_company_id,model) VALUES (?,?)\";\r\n                      connection.query(sql, [companyId, req.body.model], function (err, result, fields) {\r\n                        if (err) {\r\n                          connection.rollback(function () {\r\n                            throw err;\r\n                          });\r\n                        }\r\n\r\n                        sql = \"SELECT * FROM phone_models WHERE phone_brand_id=? ORDER BY model \";\r\n                        connection.query(sql, [req.body.brandId], function (err, result) {\r\n                          if (err) {\r\n                            connection.rollback(function () {\r\n                              throw err;\r\n                            });\r\n                          }\r\n                          console.log(\"Read phone brands succeed\");\r\n                          res.send(result);\r\n\r\n                          connection.commit(function (err) {\r\n                            if (err) {\r\n                              connection.rollback(function () {\r\n                                throw err;\r\n                              });\r\n                            }\r\n                            console.log('Transaction Completed Successfully.');\r\n                            connection.release();\r\n                          });\r\n                        });\r\n\r\n                      })\r\n\r\n                    })\r\n\r\n\r\n                  }\r\n\r\n                })\r\n\r\n              }\r\n              else {\r\n\r\n                sql = \"SELECT * FROM phone_models WHERE phone_brand_id=? ORDER BY model \";\r\n                connection.query(sql, [req.body.brandId], function (err, result) {\r\n                  if (err) {\r\n                    connection.rollback(function () {\r\n                      throw err;\r\n                    });\r\n                  }\r\n                  console.log(\"Read phone brands succeed\");\r\n                  res.send(result);\r\n\r\n                  connection.commit(function (err) {\r\n                    if (err) {\r\n                      connection.rollback(function () {\r\n                        throw err;\r\n                      });\r\n                    }\r\n                    console.log('Transaction Completed Successfully.');\r\n                    connection.release();\r\n                  });\r\n                });\r\n\r\n              }\r\n\r\n            })\r\n\r\n          });\r\n        }\r\n        else {\r\n          sql = \"SELECT * FROM phone_models WHERE phone_brand_id=? ORDER BY model \";\r\n          connection.query(sql, [req.body.brandId], function (err, result) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n            console.log(\"Read phone brands succeed\");\r\n            res.send(result);\r\n\r\n            connection.commit(function (err) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n              console.log('Transaction Completed Successfully.');\r\n              connection.release();\r\n            });\r\n          });\r\n        }\r\n      })\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\nrouter.post(\"/deletephonemodel/\", isAuth, isAdmin, async (req, res, next) => {\r\n\r\n  mysqlConnection.getConnection(function (err, connection) {\r\n    if (err) throw err; // not connected!\r\n    /* Begin transaction */\r\n    connection.beginTransaction(function (err) {\r\n      if (err) { throw err; }\r\n        \r\n          let sql = \"SELECT compatibility_company_id FROM compatibility_company WHERE company=? \";\r\n          connection.query(sql, [req.body.phone_brand], function (err, result) {\r\n            if (err) {\r\n              connection.rollback(function () {\r\n                throw err;\r\n              });\r\n            }\r\n\r\n            let companyID = result[0]?.compatibility_company_id;\r\n\r\n            sql = \"DELETE FROM phone_models WHERE phone_model_id=?\";\r\n            connection.query(sql, [req.body.phone_model_id], function (err, result, fields) {\r\n              if (err) {\r\n                connection.rollback(function () {\r\n                  throw err;\r\n                });\r\n              }\r\n\r\n              sql = \"SELECT compatibility_model_id FROM compatibility_model WHERE model=? AND compatibility_company_id=? \";\r\n              connection.query(sql, [req.body.phone_model, companyID], function (err, result) {\r\n                if (err) {\r\n                  connection.rollback(function () {\r\n                    throw err;\r\n                  });\r\n                }\r\n\r\n                let modelID = result[0]?.compatibility_model_id;\r\n\r\n                if (modelID > 0) {\r\n                  sql = \"DELETE FROM compatibility_model WHERE compatibility_model_id=? \";\r\n                  connection.query(sql, [modelID], function (err, result) {\r\n                    if (err) {\r\n                      connection.rollback(function () {\r\n                        throw err;\r\n                      });\r\n                    }\r\n\r\n                    sql = \"SELECT * FROM phone_models WHERE phone_brand_id=? ORDER BY model \";\r\n                    connection.query(sql, [req.body.brand_id], function (err, result) {\r\n                      if (err) {\r\n                        connection.rollback(function () {\r\n                          throw err;\r\n                        });\r\n                      }\r\n                      console.log(\"Read phone brands succeed\");\r\n                      res.send(result);\r\n\r\n                      connection.commit(function (err) {\r\n                        if (err) {\r\n                          connection.rollback(function () {\r\n                            throw err;\r\n                          });\r\n                        }\r\n                        console.log('Transaction Completed Successfully.');\r\n                        connection.release();\r\n                      });\r\n                    });\r\n                  })\r\n                }\r\n                else {\r\n                  sql = \"SELECT * FROM phone_models WHERE phone_brand_id=? ORDER BY model \";\r\n                  connection.query(sql, [req.body.brandId], function (err, result) {\r\n                    if (err) {\r\n                      connection.rollback(function () {\r\n                        throw err;\r\n                      });\r\n                    }\r\n                    console.log(\"Read phone brands succeed\");\r\n                    res.send(result);\r\n\r\n                    connection.commit(function (err) {\r\n                      if (err) {\r\n                        connection.rollback(function () {\r\n                          throw err;\r\n                        });\r\n                      }\r\n                      console.log('Transaction Completed Successfully.');\r\n                      connection.release();\r\n                    });\r\n                  });\r\n                }\r\n              });\r\n\r\n            });\r\n\r\n          })\r\n\r\n    });\r\n    /* End transaction */\r\n  })\r\n});\r\n\r\n\r\nexport default router;"],"file":"phonemodelRoute.js"}