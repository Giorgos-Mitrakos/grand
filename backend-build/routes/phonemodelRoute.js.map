{"version":3,"sources":["../../backend/routes/phonemodelRoute.js"],"names":["router","express","Router","get","req","res","mysqlConnection","getConnection","err","connection","query","result","fields","console","log","send","release","post","isAuth","isAdmin","next","beginTransaction","sql","body","brand","rollback","commit","phoneBrandId","brandId","model"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,MAAM,GAAEC,oBAAQC,MAAR,EAAd;;AAEAF,MAAM,CAACG,GAAP,CAAW,GAAX;AAAA,qEAAgB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAEZC,mCAAgBC,aAAhB,CAA8B,UAASC,GAAT,EAAcC,UAAd,EAA0B;AACpD,kBAAID,GAAJ,EAAS,MAAMA,GAAN,CAD2C,CAChC;;AAEpBC,cAAAA,UAAU,CAACC,KAAX,CAAiB,2IAAjB,EAA8J,UAAUF,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAC7L,oBAAIJ,GAAJ,EAAS,MAAMA,GAAN;AACTK,gBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAT,gBAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AACAF,gBAAAA,UAAU,CAACO,OAAX,GAJ6L,CAM7L;;AACA,oBAAIR,GAAJ,EAAS,MAAMA,GAAN;AACR,eARD;AASH,aAZD;;AAFY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;AAiBAR,MAAM,CAACG,GAAP,CAAW,cAAX;AAAA,sEAA2B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAEvBC,mCAAgBC,aAAhB,CAA8B,UAASC,GAAT,EAAcC,UAAd,EAA0B;AACpD,kBAAID,GAAJ,EAAS,MAAMA,GAAN,CAD2C,CAChC;;AAEpBC,cAAAA,UAAU,CAACC,KAAX,CAAiB,2CAAjB,EAA8D,UAAUF,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAC7F,oBAAIJ,GAAJ,EAAS,MAAMA,GAAN;AACTK,gBAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAT,gBAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AACAF,gBAAAA,UAAU,CAACO,OAAX,GAJ6F,CAM7F;;AACA,oBAAIR,GAAJ,EAAS,MAAMA,GAAN;AACR,eARD;AASH,aAZD;;AAFuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;AAiBAR,MAAM,CAACiB,IAAP,CAAY,eAAZ,EAA6BC,YAA7B,EAAqCC,aAArC;AAAA,sEAA8C,kBAAOf,GAAP,EAAWC,GAAX,EAAee,IAAf;AAAA;AAAA;AAAA;AAAA;AAE1Cd,mCAAgBC,aAAhB,CAA8B,UAASC,GAAT,EAAcC,UAAd,EAAyB;AACrD,kBAAID,GAAJ,EAAS,MAAMA,GAAN,CAD4C,CACjC;;AACpB;;AACAC,cAAAA,UAAU,CAACY,gBAAX,CAA4B,UAASb,GAAT,EAAc;AACxC,oBAAIA,GAAJ,EAAS;AAAE,wBAAMA,GAAN;AAAY;;AAEvB,oBAAIc,GAAG,GAAG,6CAAV;AACAb,gBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASC,KAAV,CAAtB,EAAwC,UAAShB,GAAT,EAAcG,MAAd,EAAsBC,MAAtB,EAA8B;AACpE,sBAAIJ,GAAJ,EAAS;AACPC,oBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAW;AAC7B,4BAAMjB,GAAN;AACD,qBAFD;AAGD;;AAEDc,kBAAAA,GAAG,GAAC,2CAAJ;AACAb,kBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,UAASd,GAAT,EAAcG,MAAd,EAAsB;AAC1C,wBAAIH,GAAJ,EAAS;AACPC,sBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAW;AAC7B,8BAAMjB,GAAN;AACD,uBAFD;AAGD;;AACDK,oBAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACET,oBAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AAEFF,oBAAAA,UAAU,CAACiB,MAAX,CAAkB,UAASlB,GAAT,EAAc;AAC9B,0BAAIA,GAAJ,EAAS;AACPC,wBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAW;AAC7B,gCAAMjB,GAAN;AACD,yBAFD;AAGD;;AACDK,sBAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,sBAAAA,UAAU,CAACO,OAAX;AACD,qBARD;AASD,mBAlBD;AAmBD,iBA3BD;AA4BD,eAhCD;AAiCA;AACD,aArCD;;AAF0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9C;;AAAA;AAAA;AAAA;AAAA;AA0CAhB,MAAM,CAACiB,IAAP,CAAY,cAAZ,EAA4BC,YAA5B,EAAoCC,aAApC;AAAA,sEAA6C,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAEzCC,mCAAgBC,aAAhB,CAA8B,UAASC,GAAT,EAAcC,UAAd,EAA0B;AACpD,kBAAID,GAAJ,EAAS,MAAMA,GAAN,CAD2C,CAChC;;AAEpB,kBAAIc,GAAG,GAAC,kEAAR;AACAb,cAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASI,YAAV,CAAtB,EAA+C,UAAUnB,GAAV,EAAeG,MAAf,EAAuBC,MAAvB,EAA+B;AAC9E,oBAAIJ,GAAJ,EAAS,MAAMA,GAAN;AACTK,gBAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAT,gBAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AACAF,gBAAAA,UAAU,CAACO,OAAX,GAJ8E,CAM9E;;AACA,oBAAIR,GAAJ,EAAS,MAAMA,GAAN;AACR,eARD;AASH,aAbD;;AAFyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7C;;AAAA;AAAA;AAAA;AAAA;AAkBAR,MAAM,CAACiB,IAAP,CAAY,oBAAZ,EAAkCC,YAAlC,EAA0CC,aAA1C;AAAA,sEAAmD,kBAAOf,GAAP,EAAWC,GAAX,EAAee,IAAf;AAAA;AAAA;AAAA;AAAA;AAE/Cd,mCAAgBC,aAAhB,CAA8B,UAASC,GAAT,EAAcC,UAAd,EAAyB;AACrD,kBAAID,GAAJ,EAAS,MAAMA,GAAN,CAD4C,CACjC;;AACpB;;AACAC,cAAAA,UAAU,CAACY,gBAAX,CAA4B,UAASb,GAAT,EAAc;AACxC,oBAAIA,GAAJ,EAAS;AAAE,wBAAMA,GAAN;AAAY;;AAEvB,oBAAIc,GAAG,GAAG,gEAAV;AACAb,gBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAsB,CAAClB,GAAG,CAACmB,IAAJ,CAASK,OAAV,EAAmBxB,GAAG,CAACmB,IAAJ,CAASM,KAA5B,CAAtB,EAA0D,UAASrB,GAAT,EAAcG,MAAd,EAAsBC,MAAtB,EAA8B;AACtF,sBAAIJ,GAAJ,EAAS;AACPC,oBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAW;AAC7B,4BAAMjB,GAAN;AACD,qBAFD;AAGD;;AAEDc,kBAAAA,GAAG,GAAC,mEAAJ;AACAb,kBAAAA,UAAU,CAACC,KAAX,CAAiBY,GAAjB,EAAqB,CAAClB,GAAG,CAACmB,IAAJ,CAASK,OAAV,CAArB,EAAyC,UAASpB,GAAT,EAAcG,MAAd,EAAsB;AAC7D,wBAAIH,GAAJ,EAAS;AACPC,sBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAW;AAC7B,8BAAMjB,GAAN;AACD,uBAFD;AAGD;;AACDK,oBAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACET,oBAAAA,GAAG,CAACU,IAAJ,CAASJ,MAAT;AAEFF,oBAAAA,UAAU,CAACiB,MAAX,CAAkB,UAASlB,GAAT,EAAc;AAC9B,0BAAIA,GAAJ,EAAS;AACPC,wBAAAA,UAAU,CAACgB,QAAX,CAAoB,YAAW;AAC7B,gCAAMjB,GAAN;AACD,yBAFD;AAGD;;AACDK,sBAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,sBAAAA,UAAU,CAACO,OAAX;AACD,qBARD;AASD,mBAlBD;AAmBD,iBA3BD;AA4BD,eAhCD;AAiCA;AACD,aArCD;;AAF+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnD;;AAAA;AAAA;AAAA;AAAA;eA2CehB,M","sourcesContent":["import express from 'express';\r\nimport {isAdmin, isAuth} from '../util';\r\nimport mysqlConnection from '../connection';\r\n\r\nconst router= express.Router();\r\n\r\nrouter.get(\"/\", async (req, res)=>{\r\n    \r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT * FROM phone_brands INNER JOIN phone_models ON phone_brands.phone_brand_id=phone_models.phone_brand_id ORDER BY phone_brands.brand', function (err, result, fields) {\r\n        if (err) throw err;\r\n        console.log(\"Read user succeed\");\r\n        res.send(result);\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.get(\"/phoneBrands\", async (req, res)=>{\r\n    \r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        connection.query('SELECT * FROM phone_brands ORDER BY brand', function (err, result, fields) {\r\n        if (err) throw err;\r\n        console.log(\"Read phone brand succeed\");\r\n        res.send(result);\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.post(\"/insertbrand/\", isAuth, isAdmin, async (req,res,next) =>{\r\n  \r\n    mysqlConnection.getConnection(function(err, connection){\r\n      if (err) throw err; // not connected!\r\n      /* Begin transaction */\r\n      connection.beginTransaction(function(err) {\r\n        if (err) { throw err; }\r\n  \r\n        let sql = \"INSERT INTO phone_brands (brand) VALUES (?)\";\r\n        connection.query(sql, [req.body.brand], function(err, result, fields) {\r\n          if (err) { \r\n            connection.rollback(function() {\r\n              throw err;\r\n            });\r\n          }\r\n      \r\n          sql=\"SELECT * FROM phone_brands ORDER BY brand\";\r\n          connection.query(sql, function(err, result) {\r\n            if (err) { \r\n              connection.rollback(function() {\r\n                throw err;\r\n              });\r\n            }\r\n            console.log(\"Read phone brands succeed\");\r\n              res.send(result);\r\n  \r\n            connection.commit(function(err) {\r\n              if (err) { \r\n                connection.rollback(function() {\r\n                  throw err;\r\n                });\r\n              }\r\n              console.log('Transaction Completed Successfully.');\r\n              connection.release();\r\n            });\r\n          });\r\n        });\r\n      });\r\n      /* End transaction */\r\n    })  \r\n  }); \r\n  \r\nrouter.post(\"/phoneModels\", isAuth, isAdmin, async (req, res)=>{\r\n\r\n    mysqlConnection.getConnection(function(err, connection) {\r\n        if (err) throw err; // not connected!\r\n\r\n        var sql='SELECT * FROM phone_models WHERE phone_brand_id=? ORDER BY model';\r\n        connection.query(sql, [req.body.phoneBrandId], function (err, result, fields) {\r\n        if (err) throw err;\r\n        console.log(\"Read models succeed\");\r\n        res.send(result);\r\n        connection.release();\r\n\r\n        // Handle error after the release.\r\n        if (err) throw err;\r\n        })\r\n    });\r\n})\r\n\r\nrouter.post(\"/insertphonemodel/\", isAuth, isAdmin, async (req,res,next) =>{\r\n  \r\n    mysqlConnection.getConnection(function(err, connection){\r\n      if (err) throw err; // not connected!\r\n      /* Begin transaction */\r\n      connection.beginTransaction(function(err) {\r\n        if (err) { throw err; }\r\n  \r\n        let sql = \"INSERT INTO phone_models (phone_brand_id, model) VALUES (?, ?)\";\r\n        connection.query(sql, [req.body.brandId, req.body.model], function(err, result, fields) {\r\n          if (err) { \r\n            connection.rollback(function() {\r\n              throw err;\r\n            });\r\n          }\r\n      \r\n          sql=\"SELECT * FROM phone_models WHERE phone_brand_id=? ORDER BY model \";\r\n          connection.query(sql,[req.body.brandId], function(err, result) {\r\n            if (err) { \r\n              connection.rollback(function() {\r\n                throw err;\r\n              });\r\n            }\r\n            console.log(\"Read phone brands succeed\");\r\n              res.send(result);\r\n  \r\n            connection.commit(function(err) {\r\n              if (err) { \r\n                connection.rollback(function() {\r\n                  throw err;\r\n                });\r\n              }\r\n              console.log('Transaction Completed Successfully.');\r\n              connection.release();\r\n            });\r\n          });\r\n        });\r\n      });\r\n      /* End transaction */\r\n    })  \r\n  }); \r\n\r\n\r\nexport default router;"],"file":"phonemodelRoute.js"}